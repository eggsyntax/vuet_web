// Compiled by ClojureScript 0.0-2843 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2843";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__23448__delegate = function (args){
return console.log.apply(console,(function (){var G__23447 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__23447) : cljs.core.into_array.call(null,G__23447));
})());
};
var G__23448 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__23449__i = 0, G__23449__a = new Array(arguments.length -  0);
while (G__23449__i < G__23449__a.length) {G__23449__a[G__23449__i] = arguments[G__23449__i + 0]; ++G__23449__i;}
  args = new cljs.core.IndexedSeq(G__23449__a,0);
} 
return G__23448__delegate.call(this,args);};
G__23448.cljs$lang$maxFixedArity = 0;
G__23448.cljs$lang$applyTo = (function (arglist__23450){
var args = cljs.core.seq(arglist__23450);
return G__23448__delegate(args);
});
G__23448.cljs$core$IFn$_invoke$arity$variadic = G__23448__delegate;
return G__23448;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__23452 = x;
return goog.isString(G__23452);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__23454 = x__$1;
return goog.typeOf(G__23454);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__15502__auto__ = ty;
if(cljs.core.truth_(and__15502__auto__)){
return ty.cljs$lang$type;
} else {
return and__15502__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__23456 = obj;
return goog.typeOf(G__23456);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__23458 = Symbol;
return goog.typeOf(G__23458);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__16401__auto___23460 = len;
var i_23461 = (0);
while(true){
if((i_23461 < n__16401__auto___23460)){
(new_arr[i_23461] = (arr[i_23461]));

var G__23462 = (i_23461 + (1));
i_23461 = G__23462;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__23463 = (i + (1));
i = G__23463;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__23472__delegate = function (array,i,idxs){
var G__23469 = aget;
var G__23470 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__23471 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__23469,G__23470,G__23471) : cljs.core.apply.call(null,G__23469,G__23470,G__23471));
};
var G__23472 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__23473__i = 0, G__23473__a = new Array(arguments.length -  2);
while (G__23473__i < G__23473__a.length) {G__23473__a[G__23473__i] = arguments[G__23473__i + 2]; ++G__23473__i;}
  idxs = new cljs.core.IndexedSeq(G__23473__a,0);
} 
return G__23472__delegate.call(this,array,i,idxs);};
G__23472.cljs$lang$maxFixedArity = 2;
G__23472.cljs$lang$applyTo = (function (arglist__23474){
var array = cljs.core.first(arglist__23474);
arglist__23474 = cljs.core.next(arglist__23474);
var i = cljs.core.first(arglist__23474);
var idxs = cljs.core.rest(arglist__23474);
return G__23472__delegate(array,i,idxs);
});
G__23472.cljs$core$IFn$_invoke$arity$variadic = G__23472__delegate;
return G__23472;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__23475 = null;
if (arguments.length > 2) {
var G__23476__i = 0, G__23476__a = new Array(arguments.length -  2);
while (G__23476__i < G__23476__a.length) {G__23476__a[G__23476__i] = arguments[G__23476__i + 2]; ++G__23476__i;}
G__23475 = new cljs.core.IndexedSeq(G__23476__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__23475);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__23485__delegate = function (array,idx,idx2,idxv){
var G__23481 = aset;
var G__23482 = (array[idx]);
var G__23483 = idx2;
var G__23484 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__23481,G__23482,G__23483,G__23484) : cljs.core.apply.call(null,G__23481,G__23482,G__23483,G__23484));
};
var G__23485 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__23486__i = 0, G__23486__a = new Array(arguments.length -  3);
while (G__23486__i < G__23486__a.length) {G__23486__a[G__23486__i] = arguments[G__23486__i + 3]; ++G__23486__i;}
  idxv = new cljs.core.IndexedSeq(G__23486__a,0);
} 
return G__23485__delegate.call(this,array,idx,idx2,idxv);};
G__23485.cljs$lang$maxFixedArity = 3;
G__23485.cljs$lang$applyTo = (function (arglist__23487){
var array = cljs.core.first(arglist__23487);
arglist__23487 = cljs.core.next(arglist__23487);
var idx = cljs.core.first(arglist__23487);
arglist__23487 = cljs.core.next(arglist__23487);
var idx2 = cljs.core.first(arglist__23487);
var idxv = cljs.core.rest(arglist__23487);
return G__23485__delegate(array,idx,idx2,idxv);
});
G__23485.cljs$core$IFn$_invoke$arity$variadic = G__23485__delegate;
return G__23485;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__23488 = null;
if (arguments.length > 3) {
var G__23489__i = 0, G__23489__a = new Array(arguments.length -  3);
while (G__23489__i < G__23489__a.length) {G__23489__a[G__23489__i] = arguments[G__23489__i + 3]; ++G__23489__i;}
G__23488 = new cljs.core.IndexedSeq(G__23489__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__23488);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__23495 = (function (a,x){
a.push(x);

return a;
});
var G__23496 = [];
var G__23497 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__23495,G__23496,G__23497) : cljs.core.reduce.call(null,G__23495,G__23496,G__23497));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__23498__i = 0, G__23498__a = new Array(arguments.length -  2);
while (G__23498__i < G__23498__a.length) {G__23498__a[G__23498__i] = arguments[G__23498__i + 2]; ++G__23498__i;}
  args = new cljs.core.IndexedSeq(G__23498__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__23499){
var obj = cljs.core.first(arglist__23499);
arglist__23499 = cljs.core.next(arglist__23499);
var s = cljs.core.first(arglist__23499);
var args = cljs.core.rest(arglist__23499);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj23501 = {};
return obj23501;
})();


cljs.core.IFn = (function (){var obj23503 = {};
return obj23503;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__15502__auto__ = this$;
if(and__15502__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__15502__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__16158__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15514__auto__ = (cljs.core._invoke[(function (){var G__23549 = x__16158__auto__;
return goog.typeOf(G__23549);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._invoke["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__15502__auto__ = this$;
if(and__15502__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__15502__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__16158__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15514__auto__ = (cljs.core._invoke[(function (){var G__23551 = x__16158__auto__;
return goog.typeOf(G__23551);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._invoke["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__15502__auto__ = this$;
if(and__15502__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__15502__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__16158__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15514__auto__ = (cljs.core._invoke[(function (){var G__23553 = x__16158__auto__;
return goog.typeOf(G__23553);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._invoke["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__15502__auto__ = this$;
if(and__15502__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__15502__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__16158__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15514__auto__ = (cljs.core._invoke[(function (){var G__23555 = x__16158__auto__;
return goog.typeOf(G__23555);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._invoke["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__15502__auto__ = this$;
if(and__15502__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__15502__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__16158__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15514__auto__ = (cljs.core._invoke[(function (){var G__23557 = x__16158__auto__;
return goog.typeOf(G__23557);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._invoke["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__15502__auto__ = this$;
if(and__15502__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__15502__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__16158__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15514__auto__ = (cljs.core._invoke[(function (){var G__23559 = x__16158__auto__;
return goog.typeOf(G__23559);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._invoke["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__15502__auto__ = this$;
if(and__15502__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__15502__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__16158__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15514__auto__ = (cljs.core._invoke[(function (){var G__23561 = x__16158__auto__;
return goog.typeOf(G__23561);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._invoke["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__15502__auto__ = this$;
if(and__15502__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__15502__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__16158__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15514__auto__ = (cljs.core._invoke[(function (){var G__23563 = x__16158__auto__;
return goog.typeOf(G__23563);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._invoke["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__15502__auto__ = this$;
if(and__15502__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__15502__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__16158__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15514__auto__ = (cljs.core._invoke[(function (){var G__23565 = x__16158__auto__;
return goog.typeOf(G__23565);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._invoke["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__15502__auto__ = this$;
if(and__15502__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__15502__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__16158__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15514__auto__ = (cljs.core._invoke[(function (){var G__23567 = x__16158__auto__;
return goog.typeOf(G__23567);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._invoke["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__15502__auto__ = this$;
if(and__15502__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__15502__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__16158__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15514__auto__ = (cljs.core._invoke[(function (){var G__23569 = x__16158__auto__;
return goog.typeOf(G__23569);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._invoke["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__15502__auto__ = this$;
if(and__15502__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__15502__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__16158__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15514__auto__ = (cljs.core._invoke[(function (){var G__23571 = x__16158__auto__;
return goog.typeOf(G__23571);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._invoke["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__15502__auto__ = this$;
if(and__15502__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__15502__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__16158__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15514__auto__ = (cljs.core._invoke[(function (){var G__23573 = x__16158__auto__;
return goog.typeOf(G__23573);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._invoke["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__15502__auto__ = this$;
if(and__15502__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__15502__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__16158__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15514__auto__ = (cljs.core._invoke[(function (){var G__23575 = x__16158__auto__;
return goog.typeOf(G__23575);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._invoke["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__15502__auto__ = this$;
if(and__15502__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__15502__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__16158__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15514__auto__ = (cljs.core._invoke[(function (){var G__23577 = x__16158__auto__;
return goog.typeOf(G__23577);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._invoke["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__15502__auto__ = this$;
if(and__15502__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__15502__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__16158__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15514__auto__ = (cljs.core._invoke[(function (){var G__23579 = x__16158__auto__;
return goog.typeOf(G__23579);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._invoke["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__15502__auto__ = this$;
if(and__15502__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__15502__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__16158__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15514__auto__ = (cljs.core._invoke[(function (){var G__23581 = x__16158__auto__;
return goog.typeOf(G__23581);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._invoke["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__15502__auto__ = this$;
if(and__15502__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__15502__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__16158__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15514__auto__ = (cljs.core._invoke[(function (){var G__23583 = x__16158__auto__;
return goog.typeOf(G__23583);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._invoke["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__15502__auto__ = this$;
if(and__15502__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__15502__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__16158__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15514__auto__ = (cljs.core._invoke[(function (){var G__23585 = x__16158__auto__;
return goog.typeOf(G__23585);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._invoke["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__15502__auto__ = this$;
if(and__15502__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__15502__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__16158__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15514__auto__ = (cljs.core._invoke[(function (){var G__23587 = x__16158__auto__;
return goog.typeOf(G__23587);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._invoke["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__15502__auto__ = this$;
if(and__15502__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__15502__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__16158__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15514__auto__ = (cljs.core._invoke[(function (){var G__23589 = x__16158__auto__;
return goog.typeOf(G__23589);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._invoke["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__15502__auto__ = this$;
if(and__15502__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__15502__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__16158__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15514__auto__ = (cljs.core._invoke[(function (){var G__23591 = x__16158__auto__;
return goog.typeOf(G__23591);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._invoke["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj23593 = {};
return obj23593;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__15502__auto__ = value;
if(and__15502__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__15502__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__16158__auto__ = (((value == null))?null:value);
return (function (){var or__15514__auto__ = (cljs.core._clone[(function (){var G__23597 = x__16158__auto__;
return goog.typeOf(G__23597);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._clone["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj23599 = {};
return obj23599;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__15502__auto__ = coll;
if(and__15502__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__15502__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__16158__auto__ = (((coll == null))?null:coll);
return (function (){var or__15514__auto__ = (cljs.core._count[(function (){var G__23603 = x__16158__auto__;
return goog.typeOf(G__23603);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._count["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj23605 = {};
return obj23605;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__15502__auto__ = coll;
if(and__15502__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__15502__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__16158__auto__ = (((coll == null))?null:coll);
return (function (){var or__15514__auto__ = (cljs.core._empty[(function (){var G__23609 = x__16158__auto__;
return goog.typeOf(G__23609);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._empty["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj23611 = {};
return obj23611;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__15502__auto__ = coll;
if(and__15502__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__15502__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__16158__auto__ = (((coll == null))?null:coll);
return (function (){var or__15514__auto__ = (cljs.core._conj[(function (){var G__23615 = x__16158__auto__;
return goog.typeOf(G__23615);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._conj["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj23617 = {};
return obj23617;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__15502__auto__ = coll;
if(and__15502__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__15502__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__16158__auto__ = (((coll == null))?null:coll);
return (function (){var or__15514__auto__ = (cljs.core._nth[(function (){var G__23623 = x__16158__auto__;
return goog.typeOf(G__23623);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._nth["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__15502__auto__ = coll;
if(and__15502__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__15502__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__16158__auto__ = (((coll == null))?null:coll);
return (function (){var or__15514__auto__ = (cljs.core._nth[(function (){var G__23625 = x__16158__auto__;
return goog.typeOf(G__23625);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._nth["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj23627 = {};
return obj23627;
})();


cljs.core.ISeq = (function (){var obj23629 = {};
return obj23629;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__15502__auto__ = coll;
if(and__15502__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__15502__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__16158__auto__ = (((coll == null))?null:coll);
return (function (){var or__15514__auto__ = (cljs.core._first[(function (){var G__23633 = x__16158__auto__;
return goog.typeOf(G__23633);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._first["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__15502__auto__ = coll;
if(and__15502__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__15502__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__16158__auto__ = (((coll == null))?null:coll);
return (function (){var or__15514__auto__ = (cljs.core._rest[(function (){var G__23637 = x__16158__auto__;
return goog.typeOf(G__23637);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._rest["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj23639 = {};
return obj23639;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__15502__auto__ = coll;
if(and__15502__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__15502__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__16158__auto__ = (((coll == null))?null:coll);
return (function (){var or__15514__auto__ = (cljs.core._next[(function (){var G__23643 = x__16158__auto__;
return goog.typeOf(G__23643);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._next["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj23645 = {};
return obj23645;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__15502__auto__ = o;
if(and__15502__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__15502__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__16158__auto__ = (((o == null))?null:o);
return (function (){var or__15514__auto__ = (cljs.core._lookup[(function (){var G__23651 = x__16158__auto__;
return goog.typeOf(G__23651);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._lookup["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__15502__auto__ = o;
if(and__15502__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__15502__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__16158__auto__ = (((o == null))?null:o);
return (function (){var or__15514__auto__ = (cljs.core._lookup[(function (){var G__23653 = x__16158__auto__;
return goog.typeOf(G__23653);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._lookup["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj23655 = {};
return obj23655;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__15502__auto__ = coll;
if(and__15502__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__15502__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__16158__auto__ = (((coll == null))?null:coll);
return (function (){var or__15514__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__23659 = x__16158__auto__;
return goog.typeOf(G__23659);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__15502__auto__ = coll;
if(and__15502__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__15502__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__16158__auto__ = (((coll == null))?null:coll);
return (function (){var or__15514__auto__ = (cljs.core._assoc[(function (){var G__23663 = x__16158__auto__;
return goog.typeOf(G__23663);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._assoc["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj23665 = {};
return obj23665;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__15502__auto__ = coll;
if(and__15502__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__15502__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__16158__auto__ = (((coll == null))?null:coll);
return (function (){var or__15514__auto__ = (cljs.core._dissoc[(function (){var G__23669 = x__16158__auto__;
return goog.typeOf(G__23669);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._dissoc["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj23671 = {};
return obj23671;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__15502__auto__ = coll;
if(and__15502__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__15502__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__16158__auto__ = (((coll == null))?null:coll);
return (function (){var or__15514__auto__ = (cljs.core._key[(function (){var G__23675 = x__16158__auto__;
return goog.typeOf(G__23675);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._key["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__15502__auto__ = coll;
if(and__15502__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__15502__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__16158__auto__ = (((coll == null))?null:coll);
return (function (){var or__15514__auto__ = (cljs.core._val[(function (){var G__23679 = x__16158__auto__;
return goog.typeOf(G__23679);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._val["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj23681 = {};
return obj23681;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__15502__auto__ = coll;
if(and__15502__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__15502__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__16158__auto__ = (((coll == null))?null:coll);
return (function (){var or__15514__auto__ = (cljs.core._disjoin[(function (){var G__23685 = x__16158__auto__;
return goog.typeOf(G__23685);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._disjoin["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj23687 = {};
return obj23687;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__15502__auto__ = coll;
if(and__15502__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__15502__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__16158__auto__ = (((coll == null))?null:coll);
return (function (){var or__15514__auto__ = (cljs.core._peek[(function (){var G__23691 = x__16158__auto__;
return goog.typeOf(G__23691);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._peek["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__15502__auto__ = coll;
if(and__15502__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__15502__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__16158__auto__ = (((coll == null))?null:coll);
return (function (){var or__15514__auto__ = (cljs.core._pop[(function (){var G__23695 = x__16158__auto__;
return goog.typeOf(G__23695);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._pop["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj23697 = {};
return obj23697;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__15502__auto__ = coll;
if(and__15502__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__15502__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__16158__auto__ = (((coll == null))?null:coll);
return (function (){var or__15514__auto__ = (cljs.core._assoc_n[(function (){var G__23701 = x__16158__auto__;
return goog.typeOf(G__23701);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj23703 = {};
return obj23703;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__15502__auto__ = o;
if(and__15502__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__15502__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__16158__auto__ = (((o == null))?null:o);
return (function (){var or__15514__auto__ = (cljs.core._deref[(function (){var G__23707 = x__16158__auto__;
return goog.typeOf(G__23707);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._deref["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj23709 = {};
return obj23709;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__15502__auto__ = o;
if(and__15502__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__15502__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__16158__auto__ = (((o == null))?null:o);
return (function (){var or__15514__auto__ = (cljs.core._deref_with_timeout[(function (){var G__23713 = x__16158__auto__;
return goog.typeOf(G__23713);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj23715 = {};
return obj23715;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__15502__auto__ = o;
if(and__15502__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__15502__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__16158__auto__ = (((o == null))?null:o);
return (function (){var or__15514__auto__ = (cljs.core._meta[(function (){var G__23719 = x__16158__auto__;
return goog.typeOf(G__23719);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._meta["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj23721 = {};
return obj23721;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__15502__auto__ = o;
if(and__15502__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__15502__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__16158__auto__ = (((o == null))?null:o);
return (function (){var or__15514__auto__ = (cljs.core._with_meta[(function (){var G__23725 = x__16158__auto__;
return goog.typeOf(G__23725);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._with_meta["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj23727 = {};
return obj23727;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__15502__auto__ = coll;
if(and__15502__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__15502__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__16158__auto__ = (((coll == null))?null:coll);
return (function (){var or__15514__auto__ = (cljs.core._reduce[(function (){var G__23733 = x__16158__auto__;
return goog.typeOf(G__23733);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._reduce["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__15502__auto__ = coll;
if(and__15502__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__15502__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__16158__auto__ = (((coll == null))?null:coll);
return (function (){var or__15514__auto__ = (cljs.core._reduce[(function (){var G__23735 = x__16158__auto__;
return goog.typeOf(G__23735);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._reduce["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj23737 = {};
return obj23737;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__15502__auto__ = coll;
if(and__15502__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__15502__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__16158__auto__ = (((coll == null))?null:coll);
return (function (){var or__15514__auto__ = (cljs.core._kv_reduce[(function (){var G__23741 = x__16158__auto__;
return goog.typeOf(G__23741);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj23743 = {};
return obj23743;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__15502__auto__ = o;
if(and__15502__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__15502__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__16158__auto__ = (((o == null))?null:o);
return (function (){var or__15514__auto__ = (cljs.core._equiv[(function (){var G__23747 = x__16158__auto__;
return goog.typeOf(G__23747);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._equiv["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj23749 = {};
return obj23749;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__15502__auto__ = o;
if(and__15502__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__15502__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__16158__auto__ = (((o == null))?null:o);
return (function (){var or__15514__auto__ = (cljs.core._hash[(function (){var G__23753 = x__16158__auto__;
return goog.typeOf(G__23753);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._hash["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj23755 = {};
return obj23755;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__15502__auto__ = o;
if(and__15502__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__15502__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__16158__auto__ = (((o == null))?null:o);
return (function (){var or__15514__auto__ = (cljs.core._seq[(function (){var G__23759 = x__16158__auto__;
return goog.typeOf(G__23759);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._seq["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj23761 = {};
return obj23761;
})();


cljs.core.IList = (function (){var obj23763 = {};
return obj23763;
})();


cljs.core.IRecord = (function (){var obj23765 = {};
return obj23765;
})();


cljs.core.IReversible = (function (){var obj23767 = {};
return obj23767;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__15502__auto__ = coll;
if(and__15502__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__15502__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__16158__auto__ = (((coll == null))?null:coll);
return (function (){var or__15514__auto__ = (cljs.core._rseq[(function (){var G__23771 = x__16158__auto__;
return goog.typeOf(G__23771);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._rseq["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj23773 = {};
return obj23773;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__15502__auto__ = coll;
if(and__15502__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__15502__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__16158__auto__ = (((coll == null))?null:coll);
return (function (){var or__15514__auto__ = (cljs.core._sorted_seq[(function (){var G__23777 = x__16158__auto__;
return goog.typeOf(G__23777);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__15502__auto__ = coll;
if(and__15502__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__15502__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__16158__auto__ = (((coll == null))?null:coll);
return (function (){var or__15514__auto__ = (cljs.core._sorted_seq_from[(function (){var G__23781 = x__16158__auto__;
return goog.typeOf(G__23781);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__15502__auto__ = coll;
if(and__15502__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__15502__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__16158__auto__ = (((coll == null))?null:coll);
return (function (){var or__15514__auto__ = (cljs.core._entry_key[(function (){var G__23785 = x__16158__auto__;
return goog.typeOf(G__23785);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._entry_key["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__15502__auto__ = coll;
if(and__15502__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__15502__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__16158__auto__ = (((coll == null))?null:coll);
return (function (){var or__15514__auto__ = (cljs.core._comparator[(function (){var G__23789 = x__16158__auto__;
return goog.typeOf(G__23789);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._comparator["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj23791 = {};
return obj23791;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__15502__auto__ = writer;
if(and__15502__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__15502__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__16158__auto__ = (((writer == null))?null:writer);
return (function (){var or__15514__auto__ = (cljs.core._write[(function (){var G__23795 = x__16158__auto__;
return goog.typeOf(G__23795);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._write["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__15502__auto__ = writer;
if(and__15502__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__15502__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__16158__auto__ = (((writer == null))?null:writer);
return (function (){var or__15514__auto__ = (cljs.core._flush[(function (){var G__23799 = x__16158__auto__;
return goog.typeOf(G__23799);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._flush["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj23801 = {};
return obj23801;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__15502__auto__ = o;
if(and__15502__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__15502__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__16158__auto__ = (((o == null))?null:o);
return (function (){var or__15514__auto__ = (cljs.core._pr_writer[(function (){var G__23805 = x__16158__auto__;
return goog.typeOf(G__23805);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj23807 = {};
return obj23807;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__15502__auto__ = d;
if(and__15502__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__15502__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__16158__auto__ = (((d == null))?null:d);
return (function (){var or__15514__auto__ = (cljs.core._realized_QMARK_[(function (){var G__23811 = x__16158__auto__;
return goog.typeOf(G__23811);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj23813 = {};
return obj23813;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__15502__auto__ = this$;
if(and__15502__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__15502__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__16158__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15514__auto__ = (cljs.core._notify_watches[(function (){var G__23817 = x__16158__auto__;
return goog.typeOf(G__23817);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__15502__auto__ = this$;
if(and__15502__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__15502__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__16158__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15514__auto__ = (cljs.core._add_watch[(function (){var G__23821 = x__16158__auto__;
return goog.typeOf(G__23821);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._add_watch["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__15502__auto__ = this$;
if(and__15502__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__15502__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__16158__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15514__auto__ = (cljs.core._remove_watch[(function (){var G__23825 = x__16158__auto__;
return goog.typeOf(G__23825);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj23827 = {};
return obj23827;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__15502__auto__ = coll;
if(and__15502__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__15502__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__16158__auto__ = (((coll == null))?null:coll);
return (function (){var or__15514__auto__ = (cljs.core._as_transient[(function (){var G__23831 = x__16158__auto__;
return goog.typeOf(G__23831);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._as_transient["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj23833 = {};
return obj23833;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__15502__auto__ = tcoll;
if(and__15502__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__15502__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__16158__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__15514__auto__ = (cljs.core._conj_BANG_[(function (){var G__23837 = x__16158__auto__;
return goog.typeOf(G__23837);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__15502__auto__ = tcoll;
if(and__15502__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__15502__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__16158__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__15514__auto__ = (cljs.core._persistent_BANG_[(function (){var G__23841 = x__16158__auto__;
return goog.typeOf(G__23841);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj23843 = {};
return obj23843;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__15502__auto__ = tcoll;
if(and__15502__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__15502__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__16158__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__15514__auto__ = (cljs.core._assoc_BANG_[(function (){var G__23847 = x__16158__auto__;
return goog.typeOf(G__23847);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj23849 = {};
return obj23849;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__15502__auto__ = tcoll;
if(and__15502__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__15502__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__16158__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__15514__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__23853 = x__16158__auto__;
return goog.typeOf(G__23853);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj23855 = {};
return obj23855;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__15502__auto__ = tcoll;
if(and__15502__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__15502__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__16158__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__15514__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__23859 = x__16158__auto__;
return goog.typeOf(G__23859);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__15502__auto__ = tcoll;
if(and__15502__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__15502__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__16158__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__15514__auto__ = (cljs.core._pop_BANG_[(function (){var G__23863 = x__16158__auto__;
return goog.typeOf(G__23863);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj23865 = {};
return obj23865;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__15502__auto__ = tcoll;
if(and__15502__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__15502__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__16158__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__15514__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__23869 = x__16158__auto__;
return goog.typeOf(G__23869);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj23871 = {};
return obj23871;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__15502__auto__ = x;
if(and__15502__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__15502__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__16158__auto__ = (((x == null))?null:x);
return (function (){var or__15514__auto__ = (cljs.core._compare[(function (){var G__23875 = x__16158__auto__;
return goog.typeOf(G__23875);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._compare["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj23877 = {};
return obj23877;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__15502__auto__ = coll;
if(and__15502__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__15502__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__16158__auto__ = (((coll == null))?null:coll);
return (function (){var or__15514__auto__ = (cljs.core._drop_first[(function (){var G__23881 = x__16158__auto__;
return goog.typeOf(G__23881);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._drop_first["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj23883 = {};
return obj23883;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__15502__auto__ = coll;
if(and__15502__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__15502__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__16158__auto__ = (((coll == null))?null:coll);
return (function (){var or__15514__auto__ = (cljs.core._chunked_first[(function (){var G__23887 = x__16158__auto__;
return goog.typeOf(G__23887);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__15502__auto__ = coll;
if(and__15502__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__15502__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__16158__auto__ = (((coll == null))?null:coll);
return (function (){var or__15514__auto__ = (cljs.core._chunked_rest[(function (){var G__23891 = x__16158__auto__;
return goog.typeOf(G__23891);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj23893 = {};
return obj23893;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__15502__auto__ = coll;
if(and__15502__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__15502__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__16158__auto__ = (((coll == null))?null:coll);
return (function (){var or__15514__auto__ = (cljs.core._chunked_next[(function (){var G__23897 = x__16158__auto__;
return goog.typeOf(G__23897);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj23899 = {};
return obj23899;
})();

cljs.core._name = (function _name(x){
if((function (){var and__15502__auto__ = x;
if(and__15502__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__15502__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__16158__auto__ = (((x == null))?null:x);
return (function (){var or__15514__auto__ = (cljs.core._name[(function (){var G__23903 = x__16158__auto__;
return goog.typeOf(G__23903);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._name["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__15502__auto__ = x;
if(and__15502__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__15502__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__16158__auto__ = (((x == null))?null:x);
return (function (){var or__15514__auto__ = (cljs.core._namespace[(function (){var G__23907 = x__16158__auto__;
return goog.typeOf(G__23907);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._namespace["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj23909 = {};
return obj23909;
})();


cljs.core.IReset = (function (){var obj23911 = {};
return obj23911;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__15502__auto__ = o;
if(and__15502__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__15502__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__16158__auto__ = (((o == null))?null:o);
return (function (){var or__15514__auto__ = (cljs.core._reset_BANG_[(function (){var G__23915 = x__16158__auto__;
return goog.typeOf(G__23915);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj23917 = {};
return obj23917;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__15502__auto__ = o;
if(and__15502__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__15502__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__16158__auto__ = (((o == null))?null:o);
return (function (){var or__15514__auto__ = (cljs.core._swap_BANG_[(function (){var G__23927 = x__16158__auto__;
return goog.typeOf(G__23927);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__15502__auto__ = o;
if(and__15502__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__15502__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__16158__auto__ = (((o == null))?null:o);
return (function (){var or__15514__auto__ = (cljs.core._swap_BANG_[(function (){var G__23929 = x__16158__auto__;
return goog.typeOf(G__23929);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__15502__auto__ = o;
if(and__15502__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__15502__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__16158__auto__ = (((o == null))?null:o);
return (function (){var or__15514__auto__ = (cljs.core._swap_BANG_[(function (){var G__23931 = x__16158__auto__;
return goog.typeOf(G__23931);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__15502__auto__ = o;
if(and__15502__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__15502__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__16158__auto__ = (((o == null))?null:o);
return (function (){var or__15514__auto__ = (cljs.core._swap_BANG_[(function (){var G__23933 = x__16158__auto__;
return goog.typeOf(G__23933);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj23935 = {};
return obj23935;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__15502__auto__ = o;
if(and__15502__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__15502__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__16158__auto__ = (((o == null))?null:o);
return (function (){var or__15514__auto__ = (cljs.core._vreset_BANG_[(function (){var G__23939 = x__16158__auto__;
return goog.typeOf(G__23939);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj23941 = {};
return obj23941;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__15502__auto__ = coll;
if(and__15502__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__15502__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__16158__auto__ = (((coll == null))?null:coll);
return (function (){var or__15514__auto__ = (cljs.core._iterator[(function (){var G__23945 = x__16158__auto__;
return goog.typeOf(G__23945);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._iterator["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__23948 = (4294967295);
var G__23949 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__23948,G__23949) : Math.imul.call(null,G__23948,G__23949));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__23952 = a;
var G__23953 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__23952,G__23953) : Math.imul.call(null,G__23952,G__23953));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__23954 = (i + (2));
var G__23955 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__23954;
h1 = G__23955;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj23957 = {};
return obj23957;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__23958 = (i + (1));
var G__23959 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__23958;
hash = G__23959;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj23963 = {};
return obj23963;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__23966 = o;
if(G__23966){
var bit__16188__auto__ = (G__23966.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__16188__auto__) || (G__23966.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__23967 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__23967) : Math.floor.call(null,G__23967));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__15502__auto__ = cljs.core.not(a.ns);
if(and__15502__auto__){
return b.ns;
} else {
return and__15502__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__23974 = a.ns;
var G__23975 = b.ns;
return goog.array.defaultCompare(G__23974,G__23975);
})();
if(((0) === nsc)){
var G__23976 = a.name;
var G__23977 = b.name;
return goog.array.defaultCompare(G__23976,G__23977);
} else {
return nsc;
}
}
} else {
var G__23978 = a.name;
var G__23979 = b.name;
return goog.array.defaultCompare(G__23978,G__23979);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__15935__auto__ = self__._hash;
if(!((h__15935__auto__ == null))){
return h__15935__auto__;
} else {
var h__15935__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__15935__auto____$1;

return h__15935__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__23981 = null;
var G__23981__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__23981__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__23981 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__23981__2.call(this,self__,coll);
case 3:
return G__23981__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23981.cljs$core$IFn$_invoke$arity$2 = G__23981__2;
G__23981.cljs$core$IFn$_invoke$arity$3 = G__23981__3;
return G__23981;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args23980){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23980)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__24029 = null;
var G__24029__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__24029__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__24029__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__24029__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__24029__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__24029__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__24029__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__24029__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__24029__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__24029__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__24029__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__24029__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__24029__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__24029__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__24029__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__24029__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__24029__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__24029__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__24029__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__24029__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__24029__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__24029__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23985 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__23986 = a;
var G__23987 = b;
var G__23988 = c;
var G__23989 = d;
var G__23990 = e;
var G__23991 = f;
var G__23992 = g;
var G__23993 = h;
var G__23994 = i;
var G__23995 = j;
var G__23996 = k;
var G__23997 = l;
var G__23998 = m;
var G__23999 = n;
var G__24000 = o;
var G__24001 = p;
var G__24002 = q;
var G__24003 = r;
var G__24004 = s;
var G__24005 = t;
var G__24006 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__23985,G__23986,G__23987,G__23988,G__23989,G__23990,G__23991,G__23992,G__23993,G__23994,G__23995,G__23996,G__23997,G__23998,G__23999,G__24000,G__24001,G__24002,G__24003,G__24004,G__24005,G__24006) : cljs.core.apply.call(null,G__23985,G__23986,G__23987,G__23988,G__23989,G__23990,G__23991,G__23992,G__23993,G__23994,G__23995,G__23996,G__23997,G__23998,G__23999,G__24000,G__24001,G__24002,G__24003,G__24004,G__24005,G__24006));
});
G__24029 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__24029__1.call(this,self__);
case 2:
return G__24029__2.call(this,self__,a);
case 3:
return G__24029__3.call(this,self__,a,b);
case 4:
return G__24029__4.call(this,self__,a,b,c);
case 5:
return G__24029__5.call(this,self__,a,b,c,d);
case 6:
return G__24029__6.call(this,self__,a,b,c,d,e);
case 7:
return G__24029__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__24029__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__24029__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__24029__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__24029__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__24029__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__24029__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__24029__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__24029__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__24029__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__24029__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__24029__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__24029__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__24029__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__24029__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__24029__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24029.cljs$core$IFn$_invoke$arity$1 = G__24029__1;
G__24029.cljs$core$IFn$_invoke$arity$2 = G__24029__2;
G__24029.cljs$core$IFn$_invoke$arity$3 = G__24029__3;
G__24029.cljs$core$IFn$_invoke$arity$4 = G__24029__4;
G__24029.cljs$core$IFn$_invoke$arity$5 = G__24029__5;
G__24029.cljs$core$IFn$_invoke$arity$6 = G__24029__6;
G__24029.cljs$core$IFn$_invoke$arity$7 = G__24029__7;
G__24029.cljs$core$IFn$_invoke$arity$8 = G__24029__8;
G__24029.cljs$core$IFn$_invoke$arity$9 = G__24029__9;
G__24029.cljs$core$IFn$_invoke$arity$10 = G__24029__10;
G__24029.cljs$core$IFn$_invoke$arity$11 = G__24029__11;
G__24029.cljs$core$IFn$_invoke$arity$12 = G__24029__12;
G__24029.cljs$core$IFn$_invoke$arity$13 = G__24029__13;
G__24029.cljs$core$IFn$_invoke$arity$14 = G__24029__14;
G__24029.cljs$core$IFn$_invoke$arity$15 = G__24029__15;
G__24029.cljs$core$IFn$_invoke$arity$16 = G__24029__16;
G__24029.cljs$core$IFn$_invoke$arity$17 = G__24029__17;
G__24029.cljs$core$IFn$_invoke$arity$18 = G__24029__18;
G__24029.cljs$core$IFn$_invoke$arity$19 = G__24029__19;
G__24029.cljs$core$IFn$_invoke$arity$20 = G__24029__20;
G__24029.cljs$core$IFn$_invoke$arity$21 = G__24029__21;
G__24029.cljs$core$IFn$_invoke$arity$22 = G__24029__22;
return G__24029;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args23984){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23984)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__24007 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__24008 = a;
var G__24009 = b;
var G__24010 = c;
var G__24011 = d;
var G__24012 = e;
var G__24013 = f;
var G__24014 = g;
var G__24015 = h;
var G__24016 = i;
var G__24017 = j;
var G__24018 = k;
var G__24019 = l;
var G__24020 = m;
var G__24021 = n;
var G__24022 = o;
var G__24023 = p;
var G__24024 = q;
var G__24025 = r;
var G__24026 = s;
var G__24027 = t;
var G__24028 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__24007,G__24008,G__24009,G__24010,G__24011,G__24012,G__24013,G__24014,G__24015,G__24016,G__24017,G__24018,G__24019,G__24020,G__24021,G__24022,G__24023,G__24024,G__24025,G__24026,G__24027,G__24028) : cljs.core.apply.call(null,G__24007,G__24008,G__24009,G__24010,G__24011,G__24012,G__24013,G__24014,G__24015,G__24016,G__24017,G__24018,G__24019,G__24020,G__24021,G__24022,G__24023,G__24024,G__24025,G__24026,G__24027,G__24028));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__24031 = x;
if(G__24031){
var bit__16195__auto__ = null;
if(cljs.core.truth_((function (){var or__15514__auto__ = bit__16195__auto__;
if(cljs.core.truth_(or__15514__auto__)){
return or__15514__auto__;
} else {
return G__24031.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__24031.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__24031);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__24031);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__24033 = value;
if(G__24033){
var bit__16195__auto__ = (G__24033.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__16195__auto__) || (G__24033.cljs$core$ICloneable$)){
return true;
} else {
if((!G__24033.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__24033);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__24033);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__24035 = coll;
if(G__24035){
var bit__16188__auto__ = (G__24035.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__16188__auto__) || (G__24035.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__24037 = coll;
if(G__24037){
var bit__16188__auto__ = (G__24037.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__16188__auto__) || (G__24037.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__24039 = coll;
if(G__24039){
var bit__16188__auto__ = (G__24039.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__16188__auto__) || (G__24039.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__24041 = coll;
if(G__24041){
var bit__16188__auto__ = (G__24041.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__16188__auto__) || (G__24041.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__24046__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__24047 = y;
var G__24048 = cljs.core.first(more);
var G__24049 = cljs.core.next(more);
x = G__24047;
y = G__24048;
more = G__24049;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__24046 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24050__i = 0, G__24050__a = new Array(arguments.length -  2);
while (G__24050__i < G__24050__a.length) {G__24050__a[G__24050__i] = arguments[G__24050__i + 2]; ++G__24050__i;}
  more = new cljs.core.IndexedSeq(G__24050__a,0);
} 
return G__24046__delegate.call(this,x,y,more);};
G__24046.cljs$lang$maxFixedArity = 2;
G__24046.cljs$lang$applyTo = (function (arglist__24051){
var x = cljs.core.first(arglist__24051);
arglist__24051 = cljs.core.next(arglist__24051);
var y = cljs.core.first(arglist__24051);
var more = cljs.core.rest(arglist__24051);
return G__24046__delegate(x,y,more);
});
G__24046.cljs$core$IFn$_invoke$arity$variadic = G__24046__delegate;
return G__24046;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__24052 = null;
if (arguments.length > 2) {
var G__24053__i = 0, G__24053__a = new Array(arguments.length -  2);
while (G__24053__i < G__24053__a.length) {G__24053__a[G__24053__i] = arguments[G__24053__i + 2]; ++G__24053__i;}
G__24052 = new cljs.core.IndexedSeq(G__24053__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24052);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__24054 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__24054) : cljs.core.es6_iterator_seq.call(null,G__24054));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__24055 = (n + (1));
var G__24056 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__24057 = cljs.core.next(coll__$1);
n = G__24055;
hash_code = G__24056;
coll__$1 = G__24057;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__24058 = (n + (1));
var G__24059 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__24060 = cljs.core.next(coll__$1);
n = G__24058;
hash_code = G__24059;
coll__$1 = G__24060;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__24061 = o;
return goog.getUid(G__24061);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__24063 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24063) : cljs.core.deref.call(null,G__24063));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__24070 = val;
var G__24071 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24070,G__24071) : f.call(null,G__24070,G__24071));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__24076 = nval;
var G__24077 = (n + (1));
val = G__24076;
n = G__24077;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__24072 = val__$1;
var G__24073 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24072,G__24073) : f.call(null,G__24072,G__24073));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__24078 = nval;
var G__24079 = (n + (1));
val__$1 = G__24078;
n = G__24079;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__24074 = val__$1;
var G__24075 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24074,G__24075) : f.call(null,G__24074,G__24075));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__24080 = nval;
var G__24081 = (n + (1));
val__$1 = G__24080;
n = G__24081;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__24088 = val;
var G__24089 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24088,G__24089) : f.call(null,G__24088,G__24089));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__24094 = nval;
var G__24095 = (n + (1));
val = G__24094;
n = G__24095;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__24090 = val__$1;
var G__24091 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24090,G__24091) : f.call(null,G__24090,G__24091));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__24096 = nval;
var G__24097 = (n + (1));
val__$1 = G__24096;
n = G__24097;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__24092 = val__$1;
var G__24093 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24092,G__24093) : f.call(null,G__24092,G__24093));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__24098 = nval;
var G__24099 = (n + (1));
val__$1 = G__24098;
n = G__24099;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__24101 = x;
if(G__24101){
var bit__16195__auto__ = (G__24101.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__16195__auto__) || (G__24101.cljs$core$ICounted$)){
return true;
} else {
if((!G__24101.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__24101);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__24101);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__24103 = x;
if(G__24103){
var bit__16195__auto__ = (G__24103.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__16195__auto__) || (G__24103.cljs$core$IIndexed$)){
return true;
} else {
if((!G__24103.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__24103);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__24103);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__24104 = coll__$1;
var G__24105 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__24104,G__24105) : cljs.core.equiv_sequential.call(null,G__24104,G__24105));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__24106 = o;
var G__24107 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__24106,G__24107) : cljs.core.cons.call(null,G__24106,G__24107));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16492__auto__ = this;
return cljs.core.es6_iterator(this__16492__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__24110 = coll__$1;
var G__24111 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__24110,G__24111) : cljs.core.equiv_sequential.call(null,G__24110,G__24111));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__24112 = cljs.core.List.EMPTY;
var G__24113 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__24112,G__24113) : cljs.core.with_meta.call(null,G__24112,G__24113));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__24114 = f;
var G__24115 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__24114,G__24115) : cljs.core.seq_reduce.call(null,G__24114,G__24115));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__24116 = f;
var G__24117 = start;
var G__24118 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__24116,G__24117,G__24118) : cljs.core.seq_reduce.call(null,G__24116,G__24117,G__24118));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__24119 = o;
var G__24120 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__24119,G__24120) : cljs.core.cons.call(null,G__24119,G__24120));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16492__auto__ = this;
return cljs.core.es6_iterator(this__16492__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__24121 = sn;
s = G__24121;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__24126__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__24127 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__24128 = cljs.core.first(xs);
var G__24129 = cljs.core.next(xs);
coll = G__24127;
x = G__24128;
xs = G__24129;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__24126 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__24130__i = 0, G__24130__a = new Array(arguments.length -  2);
while (G__24130__i < G__24130__a.length) {G__24130__a[G__24130__i] = arguments[G__24130__i + 2]; ++G__24130__i;}
  xs = new cljs.core.IndexedSeq(G__24130__a,0);
} 
return G__24126__delegate.call(this,coll,x,xs);};
G__24126.cljs$lang$maxFixedArity = 2;
G__24126.cljs$lang$applyTo = (function (arglist__24131){
var coll = cljs.core.first(arglist__24131);
arglist__24131 = cljs.core.next(arglist__24131);
var x = cljs.core.first(arglist__24131);
var xs = cljs.core.rest(arglist__24131);
return G__24126__delegate(coll,x,xs);
});
G__24126.cljs$core$IFn$_invoke$arity$variadic = G__24126__delegate;
return G__24126;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__24132 = null;
if (arguments.length > 2) {
var G__24133__i = 0, G__24133__a = new Array(arguments.length -  2);
while (G__24133__i < G__24133__a.length) {G__24133__a[G__24133__i] = arguments[G__24133__i + 2]; ++G__24133__i;}
G__24132 = new cljs.core.IndexedSeq(G__24133__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__24132);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__24134 = cljs.core.next(s);
var G__24135 = (acc + (1));
s = G__24134;
acc = G__24135;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__24137 = coll;
if(G__24137){
var bit__16188__auto__ = (G__24137.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__16188__auto__) || (G__24137.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__24138 = cljs.core.next(coll);
var G__24139 = (n - (1));
coll = G__24138;
n = G__24139;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__24140 = cljs.core.next(coll);
var G__24141 = (n - (1));
var G__24142 = not_found;
coll = G__24140;
n = G__24141;
not_found = G__24142;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__24147 = coll;
if(G__24147){
var bit__16188__auto__ = (G__24147.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__16188__auto__) || (G__24147.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__24148 = coll;
if(G__24148){
var bit__16195__auto__ = (G__24148.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__16195__auto__) || (G__24148.cljs$core$ISeq$)){
return true;
} else {
if((!G__24148.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__24148);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__24148);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__24149 = coll;
if(G__24149){
var bit__16188__auto__ = (G__24149.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__16188__auto__) || (G__24149.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__24150 = coll;
if(G__24150){
var bit__16195__auto__ = (G__24150.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__16195__auto__) || (G__24150.cljs$core$ISeq$)){
return true;
} else {
if((!G__24150.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__24150);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__24150);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__24151 = (n__$1 - (1));
var G__24152 = cljs.core.rest(xs);
n__$1 = G__24151;
xs = G__24152;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__24155 = o;
if(G__24155){
var bit__16188__auto__ = (G__24155.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__16188__auto__) || (G__24155.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__24156 = o;
if(G__24156){
var bit__16188__auto__ = (G__24156.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__16188__auto__) || (G__24156.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__24160__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__24161 = ret;
var G__24162 = cljs.core.first(kvs);
var G__24163 = cljs.core.second(kvs);
var G__24164 = cljs.core.nnext(kvs);
coll = G__24161;
k = G__24162;
v = G__24163;
kvs = G__24164;
continue;
} else {
return ret;
}
break;
}
};
var G__24160 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__24165__i = 0, G__24165__a = new Array(arguments.length -  3);
while (G__24165__i < G__24165__a.length) {G__24165__a[G__24165__i] = arguments[G__24165__i + 3]; ++G__24165__i;}
  kvs = new cljs.core.IndexedSeq(G__24165__a,0);
} 
return G__24160__delegate.call(this,coll,k,v,kvs);};
G__24160.cljs$lang$maxFixedArity = 3;
G__24160.cljs$lang$applyTo = (function (arglist__24166){
var coll = cljs.core.first(arglist__24166);
arglist__24166 = cljs.core.next(arglist__24166);
var k = cljs.core.first(arglist__24166);
arglist__24166 = cljs.core.next(arglist__24166);
var v = cljs.core.first(arglist__24166);
var kvs = cljs.core.rest(arglist__24166);
return G__24160__delegate(coll,k,v,kvs);
});
G__24160.cljs$core$IFn$_invoke$arity$variadic = G__24160__delegate;
return G__24160;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__24167 = null;
if (arguments.length > 3) {
var G__24168__i = 0, G__24168__a = new Array(arguments.length -  3);
while (G__24168__i < G__24168__a.length) {G__24168__a[G__24168__i] = arguments[G__24168__i + 3]; ++G__24168__i;}
G__24167 = new cljs.core.IndexedSeq(G__24168__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__24167);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__24171__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__24172 = ret;
var G__24173 = cljs.core.first(ks);
var G__24174 = cljs.core.next(ks);
coll = G__24172;
k = G__24173;
ks = G__24174;
continue;
} else {
return ret;
}
}
break;
}
};
var G__24171 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__24175__i = 0, G__24175__a = new Array(arguments.length -  2);
while (G__24175__i < G__24175__a.length) {G__24175__a[G__24175__i] = arguments[G__24175__i + 2]; ++G__24175__i;}
  ks = new cljs.core.IndexedSeq(G__24175__a,0);
} 
return G__24171__delegate.call(this,coll,k,ks);};
G__24171.cljs$lang$maxFixedArity = 2;
G__24171.cljs$lang$applyTo = (function (arglist__24176){
var coll = cljs.core.first(arglist__24176);
arglist__24176 = cljs.core.next(arglist__24176);
var k = cljs.core.first(arglist__24176);
var ks = cljs.core.rest(arglist__24176);
return G__24171__delegate(coll,k,ks);
});
G__24171.cljs$core$IFn$_invoke$arity$variadic = G__24171__delegate;
return G__24171;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__24177 = null;
if (arguments.length > 2) {
var G__24178__i = 0, G__24178__a = new Array(arguments.length -  2);
while (G__24178__i < G__24178__a.length) {G__24178__a[G__24178__i] = arguments[G__24178__i + 2]; ++G__24178__i;}
G__24177 = new cljs.core.IndexedSeq(G__24178__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__24177);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__15514__auto__ = (function (){var G__24183 = f;
return goog.isFunction(G__24183);
})();
if(cljs.core.truth_(or__15514__auto__)){
return or__15514__auto__;
} else {
var G__24184 = f;
if(G__24184){
var bit__16195__auto__ = null;
if(cljs.core.truth_((function (){var or__15514__auto____$1 = bit__16195__auto__;
if(cljs.core.truth_(or__15514__auto____$1)){
return or__15514__auto____$1;
} else {
return G__24184.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__24184.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__24184);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__24184);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__24650 = null;
var G__24650__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__24650__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24186 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__24186) : self__.afn.call(null,G__24186));
});
var G__24650__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24187 = a;
var G__24188 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__24187,G__24188) : self__.afn.call(null,G__24187,G__24188));
});
var G__24650__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24189 = a;
var G__24190 = b;
var G__24191 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__24189,G__24190,G__24191) : self__.afn.call(null,G__24189,G__24190,G__24191));
});
var G__24650__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24192 = a;
var G__24193 = b;
var G__24194 = c;
var G__24195 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__24192,G__24193,G__24194,G__24195) : self__.afn.call(null,G__24192,G__24193,G__24194,G__24195));
});
var G__24650__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24196 = a;
var G__24197 = b;
var G__24198 = c;
var G__24199 = d;
var G__24200 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__24196,G__24197,G__24198,G__24199,G__24200) : self__.afn.call(null,G__24196,G__24197,G__24198,G__24199,G__24200));
});
var G__24650__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24201 = a;
var G__24202 = b;
var G__24203 = c;
var G__24204 = d;
var G__24205 = e;
var G__24206 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__24201,G__24202,G__24203,G__24204,G__24205,G__24206) : self__.afn.call(null,G__24201,G__24202,G__24203,G__24204,G__24205,G__24206));
});
var G__24650__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24207 = a;
var G__24208 = b;
var G__24209 = c;
var G__24210 = d;
var G__24211 = e;
var G__24212 = f;
var G__24213 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__24207,G__24208,G__24209,G__24210,G__24211,G__24212,G__24213) : self__.afn.call(null,G__24207,G__24208,G__24209,G__24210,G__24211,G__24212,G__24213));
});
var G__24650__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24214 = a;
var G__24215 = b;
var G__24216 = c;
var G__24217 = d;
var G__24218 = e;
var G__24219 = f;
var G__24220 = g;
var G__24221 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__24214,G__24215,G__24216,G__24217,G__24218,G__24219,G__24220,G__24221) : self__.afn.call(null,G__24214,G__24215,G__24216,G__24217,G__24218,G__24219,G__24220,G__24221));
});
var G__24650__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24222 = a;
var G__24223 = b;
var G__24224 = c;
var G__24225 = d;
var G__24226 = e;
var G__24227 = f;
var G__24228 = g;
var G__24229 = h;
var G__24230 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__24222,G__24223,G__24224,G__24225,G__24226,G__24227,G__24228,G__24229,G__24230) : self__.afn.call(null,G__24222,G__24223,G__24224,G__24225,G__24226,G__24227,G__24228,G__24229,G__24230));
});
var G__24650__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24231 = a;
var G__24232 = b;
var G__24233 = c;
var G__24234 = d;
var G__24235 = e;
var G__24236 = f;
var G__24237 = g;
var G__24238 = h;
var G__24239 = i;
var G__24240 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__24231,G__24232,G__24233,G__24234,G__24235,G__24236,G__24237,G__24238,G__24239,G__24240) : self__.afn.call(null,G__24231,G__24232,G__24233,G__24234,G__24235,G__24236,G__24237,G__24238,G__24239,G__24240));
});
var G__24650__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24241 = a;
var G__24242 = b;
var G__24243 = c;
var G__24244 = d;
var G__24245 = e;
var G__24246 = f;
var G__24247 = g;
var G__24248 = h;
var G__24249 = i;
var G__24250 = j;
var G__24251 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__24241,G__24242,G__24243,G__24244,G__24245,G__24246,G__24247,G__24248,G__24249,G__24250,G__24251) : self__.afn.call(null,G__24241,G__24242,G__24243,G__24244,G__24245,G__24246,G__24247,G__24248,G__24249,G__24250,G__24251));
});
var G__24650__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24252 = a;
var G__24253 = b;
var G__24254 = c;
var G__24255 = d;
var G__24256 = e;
var G__24257 = f;
var G__24258 = g;
var G__24259 = h;
var G__24260 = i;
var G__24261 = j;
var G__24262 = k;
var G__24263 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__24252,G__24253,G__24254,G__24255,G__24256,G__24257,G__24258,G__24259,G__24260,G__24261,G__24262,G__24263) : self__.afn.call(null,G__24252,G__24253,G__24254,G__24255,G__24256,G__24257,G__24258,G__24259,G__24260,G__24261,G__24262,G__24263));
});
var G__24650__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24264 = a;
var G__24265 = b;
var G__24266 = c;
var G__24267 = d;
var G__24268 = e;
var G__24269 = f;
var G__24270 = g;
var G__24271 = h;
var G__24272 = i;
var G__24273 = j;
var G__24274 = k;
var G__24275 = l;
var G__24276 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__24264,G__24265,G__24266,G__24267,G__24268,G__24269,G__24270,G__24271,G__24272,G__24273,G__24274,G__24275,G__24276) : self__.afn.call(null,G__24264,G__24265,G__24266,G__24267,G__24268,G__24269,G__24270,G__24271,G__24272,G__24273,G__24274,G__24275,G__24276));
});
var G__24650__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24277 = a;
var G__24278 = b;
var G__24279 = c;
var G__24280 = d;
var G__24281 = e;
var G__24282 = f;
var G__24283 = g;
var G__24284 = h;
var G__24285 = i;
var G__24286 = j;
var G__24287 = k;
var G__24288 = l;
var G__24289 = m;
var G__24290 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__24277,G__24278,G__24279,G__24280,G__24281,G__24282,G__24283,G__24284,G__24285,G__24286,G__24287,G__24288,G__24289,G__24290) : self__.afn.call(null,G__24277,G__24278,G__24279,G__24280,G__24281,G__24282,G__24283,G__24284,G__24285,G__24286,G__24287,G__24288,G__24289,G__24290));
});
var G__24650__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24291 = a;
var G__24292 = b;
var G__24293 = c;
var G__24294 = d;
var G__24295 = e;
var G__24296 = f;
var G__24297 = g;
var G__24298 = h;
var G__24299 = i;
var G__24300 = j;
var G__24301 = k;
var G__24302 = l;
var G__24303 = m;
var G__24304 = n;
var G__24305 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__24291,G__24292,G__24293,G__24294,G__24295,G__24296,G__24297,G__24298,G__24299,G__24300,G__24301,G__24302,G__24303,G__24304,G__24305) : self__.afn.call(null,G__24291,G__24292,G__24293,G__24294,G__24295,G__24296,G__24297,G__24298,G__24299,G__24300,G__24301,G__24302,G__24303,G__24304,G__24305));
});
var G__24650__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24306 = a;
var G__24307 = b;
var G__24308 = c;
var G__24309 = d;
var G__24310 = e;
var G__24311 = f;
var G__24312 = g;
var G__24313 = h;
var G__24314 = i;
var G__24315 = j;
var G__24316 = k;
var G__24317 = l;
var G__24318 = m;
var G__24319 = n;
var G__24320 = o;
var G__24321 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__24306,G__24307,G__24308,G__24309,G__24310,G__24311,G__24312,G__24313,G__24314,G__24315,G__24316,G__24317,G__24318,G__24319,G__24320,G__24321) : self__.afn.call(null,G__24306,G__24307,G__24308,G__24309,G__24310,G__24311,G__24312,G__24313,G__24314,G__24315,G__24316,G__24317,G__24318,G__24319,G__24320,G__24321));
});
var G__24650__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24322 = a;
var G__24323 = b;
var G__24324 = c;
var G__24325 = d;
var G__24326 = e;
var G__24327 = f;
var G__24328 = g;
var G__24329 = h;
var G__24330 = i;
var G__24331 = j;
var G__24332 = k;
var G__24333 = l;
var G__24334 = m;
var G__24335 = n;
var G__24336 = o;
var G__24337 = p;
var G__24338 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__24322,G__24323,G__24324,G__24325,G__24326,G__24327,G__24328,G__24329,G__24330,G__24331,G__24332,G__24333,G__24334,G__24335,G__24336,G__24337,G__24338) : self__.afn.call(null,G__24322,G__24323,G__24324,G__24325,G__24326,G__24327,G__24328,G__24329,G__24330,G__24331,G__24332,G__24333,G__24334,G__24335,G__24336,G__24337,G__24338));
});
var G__24650__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24339 = a;
var G__24340 = b;
var G__24341 = c;
var G__24342 = d;
var G__24343 = e;
var G__24344 = f;
var G__24345 = g;
var G__24346 = h;
var G__24347 = i;
var G__24348 = j;
var G__24349 = k;
var G__24350 = l;
var G__24351 = m;
var G__24352 = n;
var G__24353 = o;
var G__24354 = p;
var G__24355 = q;
var G__24356 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__24339,G__24340,G__24341,G__24342,G__24343,G__24344,G__24345,G__24346,G__24347,G__24348,G__24349,G__24350,G__24351,G__24352,G__24353,G__24354,G__24355,G__24356) : self__.afn.call(null,G__24339,G__24340,G__24341,G__24342,G__24343,G__24344,G__24345,G__24346,G__24347,G__24348,G__24349,G__24350,G__24351,G__24352,G__24353,G__24354,G__24355,G__24356));
});
var G__24650__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24357 = a;
var G__24358 = b;
var G__24359 = c;
var G__24360 = d;
var G__24361 = e;
var G__24362 = f;
var G__24363 = g;
var G__24364 = h;
var G__24365 = i;
var G__24366 = j;
var G__24367 = k;
var G__24368 = l;
var G__24369 = m;
var G__24370 = n;
var G__24371 = o;
var G__24372 = p;
var G__24373 = q;
var G__24374 = r;
var G__24375 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__24357,G__24358,G__24359,G__24360,G__24361,G__24362,G__24363,G__24364,G__24365,G__24366,G__24367,G__24368,G__24369,G__24370,G__24371,G__24372,G__24373,G__24374,G__24375) : self__.afn.call(null,G__24357,G__24358,G__24359,G__24360,G__24361,G__24362,G__24363,G__24364,G__24365,G__24366,G__24367,G__24368,G__24369,G__24370,G__24371,G__24372,G__24373,G__24374,G__24375));
});
var G__24650__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24376 = a;
var G__24377 = b;
var G__24378 = c;
var G__24379 = d;
var G__24380 = e;
var G__24381 = f;
var G__24382 = g;
var G__24383 = h;
var G__24384 = i;
var G__24385 = j;
var G__24386 = k;
var G__24387 = l;
var G__24388 = m;
var G__24389 = n;
var G__24390 = o;
var G__24391 = p;
var G__24392 = q;
var G__24393 = r;
var G__24394 = s;
var G__24395 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__24376,G__24377,G__24378,G__24379,G__24380,G__24381,G__24382,G__24383,G__24384,G__24385,G__24386,G__24387,G__24388,G__24389,G__24390,G__24391,G__24392,G__24393,G__24394,G__24395) : self__.afn.call(null,G__24376,G__24377,G__24378,G__24379,G__24380,G__24381,G__24382,G__24383,G__24384,G__24385,G__24386,G__24387,G__24388,G__24389,G__24390,G__24391,G__24392,G__24393,G__24394,G__24395));
});
var G__24650__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24396 = self__.afn;
var G__24397 = a;
var G__24398 = b;
var G__24399 = c;
var G__24400 = d;
var G__24401 = e;
var G__24402 = f;
var G__24403 = g;
var G__24404 = h;
var G__24405 = i;
var G__24406 = j;
var G__24407 = k;
var G__24408 = l;
var G__24409 = m;
var G__24410 = n;
var G__24411 = o;
var G__24412 = p;
var G__24413 = q;
var G__24414 = r;
var G__24415 = s;
var G__24416 = t;
var G__24417 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__24396,G__24397,G__24398,G__24399,G__24400,G__24401,G__24402,G__24403,G__24404,G__24405,G__24406,G__24407,G__24408,G__24409,G__24410,G__24411,G__24412,G__24413,G__24414,G__24415,G__24416,G__24417) : cljs.core.apply.call(null,G__24396,G__24397,G__24398,G__24399,G__24400,G__24401,G__24402,G__24403,G__24404,G__24405,G__24406,G__24407,G__24408,G__24409,G__24410,G__24411,G__24412,G__24413,G__24414,G__24415,G__24416,G__24417));
});
G__24650 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__24650__1.call(this,self__);
case 2:
return G__24650__2.call(this,self__,a);
case 3:
return G__24650__3.call(this,self__,a,b);
case 4:
return G__24650__4.call(this,self__,a,b,c);
case 5:
return G__24650__5.call(this,self__,a,b,c,d);
case 6:
return G__24650__6.call(this,self__,a,b,c,d,e);
case 7:
return G__24650__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__24650__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__24650__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__24650__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__24650__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__24650__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__24650__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__24650__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__24650__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__24650__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__24650__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__24650__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__24650__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__24650__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__24650__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__24650__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24650.cljs$core$IFn$_invoke$arity$1 = G__24650__1;
G__24650.cljs$core$IFn$_invoke$arity$2 = G__24650__2;
G__24650.cljs$core$IFn$_invoke$arity$3 = G__24650__3;
G__24650.cljs$core$IFn$_invoke$arity$4 = G__24650__4;
G__24650.cljs$core$IFn$_invoke$arity$5 = G__24650__5;
G__24650.cljs$core$IFn$_invoke$arity$6 = G__24650__6;
G__24650.cljs$core$IFn$_invoke$arity$7 = G__24650__7;
G__24650.cljs$core$IFn$_invoke$arity$8 = G__24650__8;
G__24650.cljs$core$IFn$_invoke$arity$9 = G__24650__9;
G__24650.cljs$core$IFn$_invoke$arity$10 = G__24650__10;
G__24650.cljs$core$IFn$_invoke$arity$11 = G__24650__11;
G__24650.cljs$core$IFn$_invoke$arity$12 = G__24650__12;
G__24650.cljs$core$IFn$_invoke$arity$13 = G__24650__13;
G__24650.cljs$core$IFn$_invoke$arity$14 = G__24650__14;
G__24650.cljs$core$IFn$_invoke$arity$15 = G__24650__15;
G__24650.cljs$core$IFn$_invoke$arity$16 = G__24650__16;
G__24650.cljs$core$IFn$_invoke$arity$17 = G__24650__17;
G__24650.cljs$core$IFn$_invoke$arity$18 = G__24650__18;
G__24650.cljs$core$IFn$_invoke$arity$19 = G__24650__19;
G__24650.cljs$core$IFn$_invoke$arity$20 = G__24650__20;
G__24650.cljs$core$IFn$_invoke$arity$21 = G__24650__21;
G__24650.cljs$core$IFn$_invoke$arity$22 = G__24650__22;
return G__24650;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args24185){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24185)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__24418 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__24418) : self__.afn.call(null,G__24418));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__24419 = a;
var G__24420 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__24419,G__24420) : self__.afn.call(null,G__24419,G__24420));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__24421 = a;
var G__24422 = b;
var G__24423 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__24421,G__24422,G__24423) : self__.afn.call(null,G__24421,G__24422,G__24423));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__24424 = a;
var G__24425 = b;
var G__24426 = c;
var G__24427 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__24424,G__24425,G__24426,G__24427) : self__.afn.call(null,G__24424,G__24425,G__24426,G__24427));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__24428 = a;
var G__24429 = b;
var G__24430 = c;
var G__24431 = d;
var G__24432 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__24428,G__24429,G__24430,G__24431,G__24432) : self__.afn.call(null,G__24428,G__24429,G__24430,G__24431,G__24432));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__24433 = a;
var G__24434 = b;
var G__24435 = c;
var G__24436 = d;
var G__24437 = e;
var G__24438 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__24433,G__24434,G__24435,G__24436,G__24437,G__24438) : self__.afn.call(null,G__24433,G__24434,G__24435,G__24436,G__24437,G__24438));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__24439 = a;
var G__24440 = b;
var G__24441 = c;
var G__24442 = d;
var G__24443 = e;
var G__24444 = f;
var G__24445 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__24439,G__24440,G__24441,G__24442,G__24443,G__24444,G__24445) : self__.afn.call(null,G__24439,G__24440,G__24441,G__24442,G__24443,G__24444,G__24445));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__24446 = a;
var G__24447 = b;
var G__24448 = c;
var G__24449 = d;
var G__24450 = e;
var G__24451 = f;
var G__24452 = g;
var G__24453 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__24446,G__24447,G__24448,G__24449,G__24450,G__24451,G__24452,G__24453) : self__.afn.call(null,G__24446,G__24447,G__24448,G__24449,G__24450,G__24451,G__24452,G__24453));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__24454 = a;
var G__24455 = b;
var G__24456 = c;
var G__24457 = d;
var G__24458 = e;
var G__24459 = f;
var G__24460 = g;
var G__24461 = h;
var G__24462 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__24454,G__24455,G__24456,G__24457,G__24458,G__24459,G__24460,G__24461,G__24462) : self__.afn.call(null,G__24454,G__24455,G__24456,G__24457,G__24458,G__24459,G__24460,G__24461,G__24462));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__24463 = a;
var G__24464 = b;
var G__24465 = c;
var G__24466 = d;
var G__24467 = e;
var G__24468 = f;
var G__24469 = g;
var G__24470 = h;
var G__24471 = i;
var G__24472 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__24463,G__24464,G__24465,G__24466,G__24467,G__24468,G__24469,G__24470,G__24471,G__24472) : self__.afn.call(null,G__24463,G__24464,G__24465,G__24466,G__24467,G__24468,G__24469,G__24470,G__24471,G__24472));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__24473 = a;
var G__24474 = b;
var G__24475 = c;
var G__24476 = d;
var G__24477 = e;
var G__24478 = f;
var G__24479 = g;
var G__24480 = h;
var G__24481 = i;
var G__24482 = j;
var G__24483 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__24473,G__24474,G__24475,G__24476,G__24477,G__24478,G__24479,G__24480,G__24481,G__24482,G__24483) : self__.afn.call(null,G__24473,G__24474,G__24475,G__24476,G__24477,G__24478,G__24479,G__24480,G__24481,G__24482,G__24483));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__24484 = a;
var G__24485 = b;
var G__24486 = c;
var G__24487 = d;
var G__24488 = e;
var G__24489 = f;
var G__24490 = g;
var G__24491 = h;
var G__24492 = i;
var G__24493 = j;
var G__24494 = k;
var G__24495 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__24484,G__24485,G__24486,G__24487,G__24488,G__24489,G__24490,G__24491,G__24492,G__24493,G__24494,G__24495) : self__.afn.call(null,G__24484,G__24485,G__24486,G__24487,G__24488,G__24489,G__24490,G__24491,G__24492,G__24493,G__24494,G__24495));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__24496 = a;
var G__24497 = b;
var G__24498 = c;
var G__24499 = d;
var G__24500 = e;
var G__24501 = f;
var G__24502 = g;
var G__24503 = h;
var G__24504 = i;
var G__24505 = j;
var G__24506 = k;
var G__24507 = l;
var G__24508 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__24496,G__24497,G__24498,G__24499,G__24500,G__24501,G__24502,G__24503,G__24504,G__24505,G__24506,G__24507,G__24508) : self__.afn.call(null,G__24496,G__24497,G__24498,G__24499,G__24500,G__24501,G__24502,G__24503,G__24504,G__24505,G__24506,G__24507,G__24508));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__24509 = a;
var G__24510 = b;
var G__24511 = c;
var G__24512 = d;
var G__24513 = e;
var G__24514 = f;
var G__24515 = g;
var G__24516 = h;
var G__24517 = i;
var G__24518 = j;
var G__24519 = k;
var G__24520 = l;
var G__24521 = m;
var G__24522 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__24509,G__24510,G__24511,G__24512,G__24513,G__24514,G__24515,G__24516,G__24517,G__24518,G__24519,G__24520,G__24521,G__24522) : self__.afn.call(null,G__24509,G__24510,G__24511,G__24512,G__24513,G__24514,G__24515,G__24516,G__24517,G__24518,G__24519,G__24520,G__24521,G__24522));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__24523 = a;
var G__24524 = b;
var G__24525 = c;
var G__24526 = d;
var G__24527 = e;
var G__24528 = f;
var G__24529 = g;
var G__24530 = h;
var G__24531 = i;
var G__24532 = j;
var G__24533 = k;
var G__24534 = l;
var G__24535 = m;
var G__24536 = n;
var G__24537 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__24523,G__24524,G__24525,G__24526,G__24527,G__24528,G__24529,G__24530,G__24531,G__24532,G__24533,G__24534,G__24535,G__24536,G__24537) : self__.afn.call(null,G__24523,G__24524,G__24525,G__24526,G__24527,G__24528,G__24529,G__24530,G__24531,G__24532,G__24533,G__24534,G__24535,G__24536,G__24537));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__24538 = a;
var G__24539 = b;
var G__24540 = c;
var G__24541 = d;
var G__24542 = e;
var G__24543 = f;
var G__24544 = g;
var G__24545 = h;
var G__24546 = i;
var G__24547 = j;
var G__24548 = k;
var G__24549 = l;
var G__24550 = m;
var G__24551 = n;
var G__24552 = o;
var G__24553 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__24538,G__24539,G__24540,G__24541,G__24542,G__24543,G__24544,G__24545,G__24546,G__24547,G__24548,G__24549,G__24550,G__24551,G__24552,G__24553) : self__.afn.call(null,G__24538,G__24539,G__24540,G__24541,G__24542,G__24543,G__24544,G__24545,G__24546,G__24547,G__24548,G__24549,G__24550,G__24551,G__24552,G__24553));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__24554 = a;
var G__24555 = b;
var G__24556 = c;
var G__24557 = d;
var G__24558 = e;
var G__24559 = f;
var G__24560 = g;
var G__24561 = h;
var G__24562 = i;
var G__24563 = j;
var G__24564 = k;
var G__24565 = l;
var G__24566 = m;
var G__24567 = n;
var G__24568 = o;
var G__24569 = p;
var G__24570 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__24554,G__24555,G__24556,G__24557,G__24558,G__24559,G__24560,G__24561,G__24562,G__24563,G__24564,G__24565,G__24566,G__24567,G__24568,G__24569,G__24570) : self__.afn.call(null,G__24554,G__24555,G__24556,G__24557,G__24558,G__24559,G__24560,G__24561,G__24562,G__24563,G__24564,G__24565,G__24566,G__24567,G__24568,G__24569,G__24570));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__24571 = a;
var G__24572 = b;
var G__24573 = c;
var G__24574 = d;
var G__24575 = e;
var G__24576 = f;
var G__24577 = g;
var G__24578 = h;
var G__24579 = i;
var G__24580 = j;
var G__24581 = k;
var G__24582 = l;
var G__24583 = m;
var G__24584 = n;
var G__24585 = o;
var G__24586 = p;
var G__24587 = q;
var G__24588 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__24571,G__24572,G__24573,G__24574,G__24575,G__24576,G__24577,G__24578,G__24579,G__24580,G__24581,G__24582,G__24583,G__24584,G__24585,G__24586,G__24587,G__24588) : self__.afn.call(null,G__24571,G__24572,G__24573,G__24574,G__24575,G__24576,G__24577,G__24578,G__24579,G__24580,G__24581,G__24582,G__24583,G__24584,G__24585,G__24586,G__24587,G__24588));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__24589 = a;
var G__24590 = b;
var G__24591 = c;
var G__24592 = d;
var G__24593 = e;
var G__24594 = f;
var G__24595 = g;
var G__24596 = h;
var G__24597 = i;
var G__24598 = j;
var G__24599 = k;
var G__24600 = l;
var G__24601 = m;
var G__24602 = n;
var G__24603 = o;
var G__24604 = p;
var G__24605 = q;
var G__24606 = r;
var G__24607 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__24589,G__24590,G__24591,G__24592,G__24593,G__24594,G__24595,G__24596,G__24597,G__24598,G__24599,G__24600,G__24601,G__24602,G__24603,G__24604,G__24605,G__24606,G__24607) : self__.afn.call(null,G__24589,G__24590,G__24591,G__24592,G__24593,G__24594,G__24595,G__24596,G__24597,G__24598,G__24599,G__24600,G__24601,G__24602,G__24603,G__24604,G__24605,G__24606,G__24607));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__24608 = a;
var G__24609 = b;
var G__24610 = c;
var G__24611 = d;
var G__24612 = e;
var G__24613 = f;
var G__24614 = g;
var G__24615 = h;
var G__24616 = i;
var G__24617 = j;
var G__24618 = k;
var G__24619 = l;
var G__24620 = m;
var G__24621 = n;
var G__24622 = o;
var G__24623 = p;
var G__24624 = q;
var G__24625 = r;
var G__24626 = s;
var G__24627 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__24608,G__24609,G__24610,G__24611,G__24612,G__24613,G__24614,G__24615,G__24616,G__24617,G__24618,G__24619,G__24620,G__24621,G__24622,G__24623,G__24624,G__24625,G__24626,G__24627) : self__.afn.call(null,G__24608,G__24609,G__24610,G__24611,G__24612,G__24613,G__24614,G__24615,G__24616,G__24617,G__24618,G__24619,G__24620,G__24621,G__24622,G__24623,G__24624,G__24625,G__24626,G__24627));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__24628 = self__.afn;
var G__24629 = a;
var G__24630 = b;
var G__24631 = c;
var G__24632 = d;
var G__24633 = e;
var G__24634 = f;
var G__24635 = g;
var G__24636 = h;
var G__24637 = i;
var G__24638 = j;
var G__24639 = k;
var G__24640 = l;
var G__24641 = m;
var G__24642 = n;
var G__24643 = o;
var G__24644 = p;
var G__24645 = q;
var G__24646 = r;
var G__24647 = s;
var G__24648 = t;
var G__24649 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__24628,G__24629,G__24630,G__24631,G__24632,G__24633,G__24634,G__24635,G__24636,G__24637,G__24638,G__24639,G__24640,G__24641,G__24642,G__24643,G__24644,G__24645,G__24646,G__24647,G__24648,G__24649) : cljs.core.apply.call(null,G__24628,G__24629,G__24630,G__24631,G__24632,G__24633,G__24634,G__24635,G__24636,G__24637,G__24638,G__24639,G__24640,G__24641,G__24642,G__24643,G__24644,G__24645,G__24646,G__24647,G__24648,G__24649));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__24654 = o;
if(G__24654){
var bit__16195__auto__ = (G__24654.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__16195__auto__) || (G__24654.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__24654.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__24654);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__24654);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__15502__auto__ = !((o == null));
if(and__15502__auto__){
var G__24658 = o;
if(G__24658){
var bit__16195__auto__ = (G__24658.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__16195__auto__) || (G__24658.cljs$core$IMeta$)){
return true;
} else {
if((!G__24658.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__24658);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__24658);
}
} else {
return and__15502__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__24661__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__24662 = ret;
var G__24663 = cljs.core.first(ks);
var G__24664 = cljs.core.next(ks);
coll = G__24662;
k = G__24663;
ks = G__24664;
continue;
} else {
return ret;
}
}
break;
}
};
var G__24661 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__24665__i = 0, G__24665__a = new Array(arguments.length -  2);
while (G__24665__i < G__24665__a.length) {G__24665__a[G__24665__i] = arguments[G__24665__i + 2]; ++G__24665__i;}
  ks = new cljs.core.IndexedSeq(G__24665__a,0);
} 
return G__24661__delegate.call(this,coll,k,ks);};
G__24661.cljs$lang$maxFixedArity = 2;
G__24661.cljs$lang$applyTo = (function (arglist__24666){
var coll = cljs.core.first(arglist__24666);
arglist__24666 = cljs.core.next(arglist__24666);
var k = cljs.core.first(arglist__24666);
var ks = cljs.core.rest(arglist__24666);
return G__24661__delegate(coll,k,ks);
});
G__24661.cljs$core$IFn$_invoke$arity$variadic = G__24661__delegate;
return G__24661;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__24667 = null;
if (arguments.length > 2) {
var G__24668__i = 0, G__24668__a = new Array(arguments.length -  2);
while (G__24668__i < G__24668__a.length) {G__24668__a[G__24668__i] = arguments[G__24668__i + 2]; ++G__24668__i;}
G__24667 = new cljs.core.IndexedSeq(G__24668__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__24667);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__24670 = x;
if(G__24670){
var bit__16195__auto__ = (G__24670.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__16195__auto__) || (G__24670.cljs$core$ICollection$)){
return true;
} else {
if((!G__24670.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__24670);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__24670);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__24672 = x;
if(G__24672){
var bit__16195__auto__ = (G__24672.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__16195__auto__) || (G__24672.cljs$core$ISet$)){
return true;
} else {
if((!G__24672.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__24672);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__24672);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__24674 = x;
if(G__24674){
var bit__16195__auto__ = (G__24674.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__16195__auto__) || (G__24674.cljs$core$IAssociative$)){
return true;
} else {
if((!G__24674.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__24674);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__24674);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__24676 = x;
if(G__24676){
var bit__16195__auto__ = (G__24676.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__16195__auto__) || (G__24676.cljs$core$ISequential$)){
return true;
} else {
if((!G__24676.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__24676);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__24676);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__24678 = x;
if(G__24678){
var bit__16195__auto__ = (G__24678.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__16195__auto__) || (G__24678.cljs$core$ISorted$)){
return true;
} else {
if((!G__24678.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__24678);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__24678);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__24680 = x;
if(G__24680){
var bit__16195__auto__ = (G__24680.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__16195__auto__) || (G__24680.cljs$core$IReduce$)){
return true;
} else {
if((!G__24680.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__24680);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__24680);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__24682 = x;
if(G__24682){
var bit__16195__auto__ = (G__24682.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__16195__auto__) || (G__24682.cljs$core$IMap$)){
return true;
} else {
if((!G__24682.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__24682);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__24682);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__24684 = x;
if(G__24684){
var bit__16195__auto__ = (G__24684.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__16195__auto__) || (G__24684.cljs$core$IVector$)){
return true;
} else {
if((!G__24684.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__24684);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__24684);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__24686 = x;
if(G__24686){
var bit__16188__auto__ = (G__24686.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__16188__auto__) || (G__24686.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj24692 = {};
return obj24692;
});
var js_obj__1 = (function() { 
var G__24695__delegate = function (keyvals){
var G__24693 = goog.object.create;
var G__24694 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__24693,G__24694) : cljs.core.apply.call(null,G__24693,G__24694));
};
var G__24695 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__24696__i = 0, G__24696__a = new Array(arguments.length -  0);
while (G__24696__i < G__24696__a.length) {G__24696__a[G__24696__i] = arguments[G__24696__i + 0]; ++G__24696__i;}
  keyvals = new cljs.core.IndexedSeq(G__24696__a,0);
} 
return G__24695__delegate.call(this,keyvals);};
G__24695.cljs$lang$maxFixedArity = 0;
G__24695.cljs$lang$applyTo = (function (arglist__24697){
var keyvals = cljs.core.seq(arglist__24697);
return G__24695__delegate(keyvals);
});
G__24695.cljs$core$IFn$_invoke$arity$variadic = G__24695__delegate;
return G__24695;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__24698 = null;
if (arguments.length > 0) {
var G__24699__i = 0, G__24699__a = new Array(arguments.length -  0);
while (G__24699__i < G__24699__a.length) {G__24699__a[G__24699__i] = arguments[G__24699__i + 0]; ++G__24699__i;}
G__24698 = new cljs.core.IndexedSeq(G__24699__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__24698);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__24702_24704 = obj;
var G__24703_24705 = ((function (G__24702_24704,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__24702_24704,keys))
;
goog.object.forEach(G__24702_24704,G__24703_24705);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__24706 = (i__$1 + (1));
var G__24707 = (j__$1 + (1));
var G__24708 = (len__$1 - (1));
i__$1 = G__24706;
j__$1 = G__24707;
len__$1 = G__24708;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__24709 = (i__$1 - (1));
var G__24710 = (j__$1 - (1));
var G__24711 = (len__$1 - (1));
i__$1 = G__24709;
j__$1 = G__24710;
len__$1 = G__24711;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj24713 = {};
return obj24713;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__24715 = s;
if(G__24715){
var bit__16195__auto__ = (G__24715.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__16195__auto__) || (G__24715.cljs$core$ISeq$)){
return true;
} else {
if((!G__24715.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__24715);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__24715);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__24717 = s;
if(G__24717){
var bit__16195__auto__ = (G__24717.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__16195__auto__) || (G__24717.cljs$core$ISeqable$)){
return true;
} else {
if((!G__24717.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__24717);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__24717);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__15514__auto__ = cljs.core.fn_QMARK_(f);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var G__24721 = f;
if(G__24721){
var bit__16195__auto__ = (G__24721.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__16195__auto__) || (G__24721.cljs$core$IFn$)){
return true;
} else {
if((!G__24721.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__24721);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__24721);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__24734 = n;
return isNaN(G__24734);
})())) && (!((n === Infinity))) && (((function (){var G__24735 = n;
return parseFloat(G__24735);
})() === (function (){var G__24736 = n;
var G__24737 = (10);
return parseInt(G__24736,G__24737);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__24738__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__24739 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__24740 = etc;
s = G__24739;
xs = G__24740;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__24738 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24741__i = 0, G__24741__a = new Array(arguments.length -  2);
while (G__24741__i < G__24741__a.length) {G__24741__a[G__24741__i] = arguments[G__24741__i + 2]; ++G__24741__i;}
  more = new cljs.core.IndexedSeq(G__24741__a,0);
} 
return G__24738__delegate.call(this,x,y,more);};
G__24738.cljs$lang$maxFixedArity = 2;
G__24738.cljs$lang$applyTo = (function (arglist__24742){
var x = cljs.core.first(arglist__24742);
arglist__24742 = cljs.core.next(arglist__24742);
var y = cljs.core.first(arglist__24742);
var more = cljs.core.rest(arglist__24742);
return G__24738__delegate(x,y,more);
});
G__24738.cljs$core$IFn$_invoke$arity$variadic = G__24738__delegate;
return G__24738;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__24743 = null;
if (arguments.length > 2) {
var G__24744__i = 0, G__24744__a = new Array(arguments.length -  2);
while (G__24744__i < G__24744__a.length) {G__24744__a[G__24744__i] = arguments[G__24744__i + 2]; ++G__24744__i;}
G__24743 = new cljs.core.IndexedSeq(G__24744__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24743);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__24748 = x;
if(G__24748){
var bit__16188__auto__ = (G__24748.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__16188__auto__) || (G__24748.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__24749 = x;
var G__24750 = y;
return goog.array.defaultCompare(G__24749,G__24750);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__24755 = xs;
var G__24756 = ys;
var G__24757 = len;
var G__24758 = (n + (1));
xs = G__24755;
ys = G__24756;
len = G__24757;
n = G__24758;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__24763 = x;
var G__24764 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24763,G__24764) : f.call(null,G__24763,G__24764));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__24765 = y;
var G__24766 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24765,G__24766) : f.call(null,G__24765,G__24766));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__24772 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__24772) : cljs.core.to_array.call(null,G__24772));
})();
var G__24773_24775 = a;
var G__24774_24776 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__24773_24775,G__24774_24776);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__24782 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__24782) : keyfn.call(null,G__24782));
})(),(function (){var G__24783 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__24783) : keyfn.call(null,G__24783));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__24789 = f;
var G__24790 = cljs.core.first(s);
var G__24791 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__24789,G__24790,G__24791) : cljs.core.reduce.call(null,G__24789,G__24790,G__24791));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__24792 = val__$1;
var G__24793 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24792,G__24793) : f.call(null,G__24792,G__24793));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__24794 = nval;
var G__24795 = cljs.core.next(coll__$1);
val__$1 = G__24794;
coll__$1 = G__24795;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__24799 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__24799) : cljs.core.to_array.call(null,G__24799));
})();
var G__24800_24802 = a;
goog.array.shuffle(G__24800_24802);

var G__24801 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__24801) : cljs.core.vec.call(null,G__24801));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__24805 = coll;
if(G__24805){
var bit__16188__auto__ = (G__24805.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__16188__auto__) || (G__24805.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__24806 = coll;
if(G__24806){
var bit__16188__auto__ = (G__24806.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__16188__auto__) || (G__24806.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__24815 = null;
var G__24815__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__24815__1 = (function (x){
var G__24812 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__24812) : cf.call(null,G__24812));
});
var G__24815__2 = (function (x,y){
var G__24813 = x;
var G__24814 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24813,G__24814) : f.call(null,G__24813,G__24814));
});
G__24815 = function(x,y){
switch(arguments.length){
case 0:
return G__24815__0.call(this);
case 1:
return G__24815__1.call(this,x);
case 2:
return G__24815__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24815.cljs$core$IFn$_invoke$arity$0 = G__24815__0;
G__24815.cljs$core$IFn$_invoke$arity$1 = G__24815__1;
G__24815.cljs$core$IFn$_invoke$arity$2 = G__24815__2;
return G__24815;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__24822 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__24822) : xform.call(null,G__24822));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__24823 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__24823) : f__$1.call(null,G__24823));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__24824__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__24824 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24825__i = 0, G__24825__a = new Array(arguments.length -  2);
while (G__24825__i < G__24825__a.length) {G__24825__a[G__24825__i] = arguments[G__24825__i + 2]; ++G__24825__i;}
  more = new cljs.core.IndexedSeq(G__24825__a,0);
} 
return G__24824__delegate.call(this,x,y,more);};
G__24824.cljs$lang$maxFixedArity = 2;
G__24824.cljs$lang$applyTo = (function (arglist__24826){
var x = cljs.core.first(arglist__24826);
arglist__24826 = cljs.core.next(arglist__24826);
var y = cljs.core.first(arglist__24826);
var more = cljs.core.rest(arglist__24826);
return G__24824__delegate(x,y,more);
});
G__24824.cljs$core$IFn$_invoke$arity$variadic = G__24824__delegate;
return G__24824;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__24827 = null;
if (arguments.length > 2) {
var G__24828__i = 0, G__24828__a = new Array(arguments.length -  2);
while (G__24828__i < G__24828__a.length) {G__24828__a[G__24828__i] = arguments[G__24828__i + 2]; ++G__24828__i;}
G__24827 = new cljs.core.IndexedSeq(G__24828__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24827);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__24829__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__24829 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24830__i = 0, G__24830__a = new Array(arguments.length -  2);
while (G__24830__i < G__24830__a.length) {G__24830__a[G__24830__i] = arguments[G__24830__i + 2]; ++G__24830__i;}
  more = new cljs.core.IndexedSeq(G__24830__a,0);
} 
return G__24829__delegate.call(this,x,y,more);};
G__24829.cljs$lang$maxFixedArity = 2;
G__24829.cljs$lang$applyTo = (function (arglist__24831){
var x = cljs.core.first(arglist__24831);
arglist__24831 = cljs.core.next(arglist__24831);
var y = cljs.core.first(arglist__24831);
var more = cljs.core.rest(arglist__24831);
return G__24829__delegate(x,y,more);
});
G__24829.cljs$core$IFn$_invoke$arity$variadic = G__24829__delegate;
return G__24829;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__24832 = null;
if (arguments.length > 2) {
var G__24833__i = 0, G__24833__a = new Array(arguments.length -  2);
while (G__24833__i < G__24833__a.length) {G__24833__a[G__24833__i] = arguments[G__24833__i + 2]; ++G__24833__i;}
G__24832 = new cljs.core.IndexedSeq(G__24833__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24832);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__24834__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__24834 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24835__i = 0, G__24835__a = new Array(arguments.length -  2);
while (G__24835__i < G__24835__a.length) {G__24835__a[G__24835__i] = arguments[G__24835__i + 2]; ++G__24835__i;}
  more = new cljs.core.IndexedSeq(G__24835__a,0);
} 
return G__24834__delegate.call(this,x,y,more);};
G__24834.cljs$lang$maxFixedArity = 2;
G__24834.cljs$lang$applyTo = (function (arglist__24836){
var x = cljs.core.first(arglist__24836);
arglist__24836 = cljs.core.next(arglist__24836);
var y = cljs.core.first(arglist__24836);
var more = cljs.core.rest(arglist__24836);
return G__24834__delegate(x,y,more);
});
G__24834.cljs$core$IFn$_invoke$arity$variadic = G__24834__delegate;
return G__24834;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__24837 = null;
if (arguments.length > 2) {
var G__24838__i = 0, G__24838__a = new Array(arguments.length -  2);
while (G__24838__i < G__24838__a.length) {G__24838__a[G__24838__i] = arguments[G__24838__i + 2]; ++G__24838__i;}
G__24837 = new cljs.core.IndexedSeq(G__24838__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24837);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__24843__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__24843 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24844__i = 0, G__24844__a = new Array(arguments.length -  2);
while (G__24844__i < G__24844__a.length) {G__24844__a[G__24844__i] = arguments[G__24844__i + 2]; ++G__24844__i;}
  more = new cljs.core.IndexedSeq(G__24844__a,0);
} 
return G__24843__delegate.call(this,x,y,more);};
G__24843.cljs$lang$maxFixedArity = 2;
G__24843.cljs$lang$applyTo = (function (arglist__24845){
var x = cljs.core.first(arglist__24845);
arglist__24845 = cljs.core.next(arglist__24845);
var y = cljs.core.first(arglist__24845);
var more = cljs.core.rest(arglist__24845);
return G__24843__delegate(x,y,more);
});
G__24843.cljs$core$IFn$_invoke$arity$variadic = G__24843__delegate;
return G__24843;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__24846 = null;
if (arguments.length > 2) {
var G__24847__i = 0, G__24847__a = new Array(arguments.length -  2);
while (G__24847__i < G__24847__a.length) {G__24847__a[G__24847__i] = arguments[G__24847__i + 2]; ++G__24847__i;}
G__24846 = new cljs.core.IndexedSeq(G__24847__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24846);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__24848__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__24849 = y;
var G__24850 = cljs.core.first(more);
var G__24851 = cljs.core.next(more);
x = G__24849;
y = G__24850;
more = G__24851;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__24848 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24852__i = 0, G__24852__a = new Array(arguments.length -  2);
while (G__24852__i < G__24852__a.length) {G__24852__a[G__24852__i] = arguments[G__24852__i + 2]; ++G__24852__i;}
  more = new cljs.core.IndexedSeq(G__24852__a,0);
} 
return G__24848__delegate.call(this,x,y,more);};
G__24848.cljs$lang$maxFixedArity = 2;
G__24848.cljs$lang$applyTo = (function (arglist__24853){
var x = cljs.core.first(arglist__24853);
arglist__24853 = cljs.core.next(arglist__24853);
var y = cljs.core.first(arglist__24853);
var more = cljs.core.rest(arglist__24853);
return G__24848__delegate(x,y,more);
});
G__24848.cljs$core$IFn$_invoke$arity$variadic = G__24848__delegate;
return G__24848;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__24854 = null;
if (arguments.length > 2) {
var G__24855__i = 0, G__24855__a = new Array(arguments.length -  2);
while (G__24855__i < G__24855__a.length) {G__24855__a[G__24855__i] = arguments[G__24855__i + 2]; ++G__24855__i;}
G__24854 = new cljs.core.IndexedSeq(G__24855__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24854);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__24856__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__24857 = y;
var G__24858 = cljs.core.first(more);
var G__24859 = cljs.core.next(more);
x = G__24857;
y = G__24858;
more = G__24859;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__24856 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24860__i = 0, G__24860__a = new Array(arguments.length -  2);
while (G__24860__i < G__24860__a.length) {G__24860__a[G__24860__i] = arguments[G__24860__i + 2]; ++G__24860__i;}
  more = new cljs.core.IndexedSeq(G__24860__a,0);
} 
return G__24856__delegate.call(this,x,y,more);};
G__24856.cljs$lang$maxFixedArity = 2;
G__24856.cljs$lang$applyTo = (function (arglist__24861){
var x = cljs.core.first(arglist__24861);
arglist__24861 = cljs.core.next(arglist__24861);
var y = cljs.core.first(arglist__24861);
var more = cljs.core.rest(arglist__24861);
return G__24856__delegate(x,y,more);
});
G__24856.cljs$core$IFn$_invoke$arity$variadic = G__24856__delegate;
return G__24856;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__24862 = null;
if (arguments.length > 2) {
var G__24863__i = 0, G__24863__a = new Array(arguments.length -  2);
while (G__24863__i < G__24863__a.length) {G__24863__a[G__24863__i] = arguments[G__24863__i + 2]; ++G__24863__i;}
G__24862 = new cljs.core.IndexedSeq(G__24863__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24862);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__24864__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__24865 = y;
var G__24866 = cljs.core.first(more);
var G__24867 = cljs.core.next(more);
x = G__24865;
y = G__24866;
more = G__24867;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__24864 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24868__i = 0, G__24868__a = new Array(arguments.length -  2);
while (G__24868__i < G__24868__a.length) {G__24868__a[G__24868__i] = arguments[G__24868__i + 2]; ++G__24868__i;}
  more = new cljs.core.IndexedSeq(G__24868__a,0);
} 
return G__24864__delegate.call(this,x,y,more);};
G__24864.cljs$lang$maxFixedArity = 2;
G__24864.cljs$lang$applyTo = (function (arglist__24869){
var x = cljs.core.first(arglist__24869);
arglist__24869 = cljs.core.next(arglist__24869);
var y = cljs.core.first(arglist__24869);
var more = cljs.core.rest(arglist__24869);
return G__24864__delegate(x,y,more);
});
G__24864.cljs$core$IFn$_invoke$arity$variadic = G__24864__delegate;
return G__24864;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__24870 = null;
if (arguments.length > 2) {
var G__24871__i = 0, G__24871__a = new Array(arguments.length -  2);
while (G__24871__i < G__24871__a.length) {G__24871__a[G__24871__i] = arguments[G__24871__i + 2]; ++G__24871__i;}
G__24870 = new cljs.core.IndexedSeq(G__24871__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24870);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__24872__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__24873 = y;
var G__24874 = cljs.core.first(more);
var G__24875 = cljs.core.next(more);
x = G__24873;
y = G__24874;
more = G__24875;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__24872 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24876__i = 0, G__24876__a = new Array(arguments.length -  2);
while (G__24876__i < G__24876__a.length) {G__24876__a[G__24876__i] = arguments[G__24876__i + 2]; ++G__24876__i;}
  more = new cljs.core.IndexedSeq(G__24876__a,0);
} 
return G__24872__delegate.call(this,x,y,more);};
G__24872.cljs$lang$maxFixedArity = 2;
G__24872.cljs$lang$applyTo = (function (arglist__24877){
var x = cljs.core.first(arglist__24877);
arglist__24877 = cljs.core.next(arglist__24877);
var y = cljs.core.first(arglist__24877);
var more = cljs.core.rest(arglist__24877);
return G__24872__delegate(x,y,more);
});
G__24872.cljs$core$IFn$_invoke$arity$variadic = G__24872__delegate;
return G__24872;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__24878 = null;
if (arguments.length > 2) {
var G__24879__i = 0, G__24879__a = new Array(arguments.length -  2);
while (G__24879__i < G__24879__a.length) {G__24879__a[G__24879__i] = arguments[G__24879__i + 2]; ++G__24879__i;}
G__24878 = new cljs.core.IndexedSeq(G__24879__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24878);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__15831__auto__ = x;
var y__15832__auto__ = y;
return ((x__15831__auto__ > y__15832__auto__) ? x__15831__auto__ : y__15832__auto__);
});
var max__3 = (function() { 
var G__24880__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__15831__auto__ = x;
var y__15832__auto__ = y;
return ((x__15831__auto__ > y__15832__auto__) ? x__15831__auto__ : y__15832__auto__);
})(),more);
};
var G__24880 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24881__i = 0, G__24881__a = new Array(arguments.length -  2);
while (G__24881__i < G__24881__a.length) {G__24881__a[G__24881__i] = arguments[G__24881__i + 2]; ++G__24881__i;}
  more = new cljs.core.IndexedSeq(G__24881__a,0);
} 
return G__24880__delegate.call(this,x,y,more);};
G__24880.cljs$lang$maxFixedArity = 2;
G__24880.cljs$lang$applyTo = (function (arglist__24882){
var x = cljs.core.first(arglist__24882);
arglist__24882 = cljs.core.next(arglist__24882);
var y = cljs.core.first(arglist__24882);
var more = cljs.core.rest(arglist__24882);
return G__24880__delegate(x,y,more);
});
G__24880.cljs$core$IFn$_invoke$arity$variadic = G__24880__delegate;
return G__24880;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__24883 = null;
if (arguments.length > 2) {
var G__24884__i = 0, G__24884__a = new Array(arguments.length -  2);
while (G__24884__i < G__24884__a.length) {G__24884__a[G__24884__i] = arguments[G__24884__i + 2]; ++G__24884__i;}
G__24883 = new cljs.core.IndexedSeq(G__24884__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24883);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__15838__auto__ = x;
var y__15839__auto__ = y;
return ((x__15838__auto__ < y__15839__auto__) ? x__15838__auto__ : y__15839__auto__);
});
var min__3 = (function() { 
var G__24885__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__15838__auto__ = x;
var y__15839__auto__ = y;
return ((x__15838__auto__ < y__15839__auto__) ? x__15838__auto__ : y__15839__auto__);
})(),more);
};
var G__24885 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24886__i = 0, G__24886__a = new Array(arguments.length -  2);
while (G__24886__i < G__24886__a.length) {G__24886__a[G__24886__i] = arguments[G__24886__i + 2]; ++G__24886__i;}
  more = new cljs.core.IndexedSeq(G__24886__a,0);
} 
return G__24885__delegate.call(this,x,y,more);};
G__24885.cljs$lang$maxFixedArity = 2;
G__24885.cljs$lang$applyTo = (function (arglist__24887){
var x = cljs.core.first(arglist__24887);
arglist__24887 = cljs.core.next(arglist__24887);
var y = cljs.core.first(arglist__24887);
var more = cljs.core.rest(arglist__24887);
return G__24885__delegate(x,y,more);
});
G__24885.cljs$core$IFn$_invoke$arity$variadic = G__24885__delegate;
return G__24885;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__24888 = null;
if (arguments.length > 2) {
var G__24889__i = 0, G__24889__a = new Array(arguments.length -  2);
while (G__24889__i < G__24889__a.length) {G__24889__a[G__24889__i] = arguments[G__24889__i + 2]; ++G__24889__i;}
G__24888 = new cljs.core.IndexedSeq(G__24889__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24888);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__24890__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__24890 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24891__i = 0, G__24891__a = new Array(arguments.length -  2);
while (G__24891__i < G__24891__a.length) {G__24891__a[G__24891__i] = arguments[G__24891__i + 2]; ++G__24891__i;}
  more = new cljs.core.IndexedSeq(G__24891__a,0);
} 
return G__24890__delegate.call(this,x,y,more);};
G__24890.cljs$lang$maxFixedArity = 2;
G__24890.cljs$lang$applyTo = (function (arglist__24892){
var x = cljs.core.first(arglist__24892);
arglist__24892 = cljs.core.next(arglist__24892);
var y = cljs.core.first(arglist__24892);
var more = cljs.core.rest(arglist__24892);
return G__24890__delegate(x,y,more);
});
G__24890.cljs$core$IFn$_invoke$arity$variadic = G__24890__delegate;
return G__24890;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__24893 = null;
if (arguments.length > 2) {
var G__24894__i = 0, G__24894__a = new Array(arguments.length -  2);
while (G__24894__i < G__24894__a.length) {G__24894__a[G__24894__i] = arguments[G__24894__i + 2]; ++G__24894__i;}
G__24893 = new cljs.core.IndexedSeq(G__24894__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24893);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__24895__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__24895 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24896__i = 0, G__24896__a = new Array(arguments.length -  2);
while (G__24896__i < G__24896__a.length) {G__24896__a[G__24896__i] = arguments[G__24896__i + 2]; ++G__24896__i;}
  more = new cljs.core.IndexedSeq(G__24896__a,0);
} 
return G__24895__delegate.call(this,x,y,more);};
G__24895.cljs$lang$maxFixedArity = 2;
G__24895.cljs$lang$applyTo = (function (arglist__24897){
var x = cljs.core.first(arglist__24897);
arglist__24897 = cljs.core.next(arglist__24897);
var y = cljs.core.first(arglist__24897);
var more = cljs.core.rest(arglist__24897);
return G__24895__delegate(x,y,more);
});
G__24895.cljs$core$IFn$_invoke$arity$variadic = G__24895__delegate;
return G__24895;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__24898 = null;
if (arguments.length > 2) {
var G__24899__i = 0, G__24899__a = new Array(arguments.length -  2);
while (G__24899__i < G__24899__a.length) {G__24899__a[G__24899__i] = arguments[G__24899__i + 2]; ++G__24899__i;}
G__24898 = new cljs.core.IndexedSeq(G__24899__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24898);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__24904__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__24904 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24905__i = 0, G__24905__a = new Array(arguments.length -  2);
while (G__24905__i < G__24905__a.length) {G__24905__a[G__24905__i] = arguments[G__24905__i + 2]; ++G__24905__i;}
  more = new cljs.core.IndexedSeq(G__24905__a,0);
} 
return G__24904__delegate.call(this,x,y,more);};
G__24904.cljs$lang$maxFixedArity = 2;
G__24904.cljs$lang$applyTo = (function (arglist__24906){
var x = cljs.core.first(arglist__24906);
arglist__24906 = cljs.core.next(arglist__24906);
var y = cljs.core.first(arglist__24906);
var more = cljs.core.rest(arglist__24906);
return G__24904__delegate(x,y,more);
});
G__24904.cljs$core$IFn$_invoke$arity$variadic = G__24904__delegate;
return G__24904;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__24907 = null;
if (arguments.length > 2) {
var G__24908__i = 0, G__24908__a = new Array(arguments.length -  2);
while (G__24908__i < G__24908__a.length) {G__24908__a[G__24908__i] = arguments[G__24908__i + 2]; ++G__24908__i;}
G__24907 = new cljs.core.IndexedSeq(G__24908__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24907);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__24909__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__24909 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24910__i = 0, G__24910__a = new Array(arguments.length -  2);
while (G__24910__i < G__24910__a.length) {G__24910__a[G__24910__i] = arguments[G__24910__i + 2]; ++G__24910__i;}
  more = new cljs.core.IndexedSeq(G__24910__a,0);
} 
return G__24909__delegate.call(this,x,y,more);};
G__24909.cljs$lang$maxFixedArity = 2;
G__24909.cljs$lang$applyTo = (function (arglist__24911){
var x = cljs.core.first(arglist__24911);
arglist__24911 = cljs.core.next(arglist__24911);
var y = cljs.core.first(arglist__24911);
var more = cljs.core.rest(arglist__24911);
return G__24909__delegate(x,y,more);
});
G__24909.cljs$core$IFn$_invoke$arity$variadic = G__24909__delegate;
return G__24909;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__24912 = null;
if (arguments.length > 2) {
var G__24913__i = 0, G__24913__a = new Array(arguments.length -  2);
while (G__24913__i < G__24913__a.length) {G__24913__a[G__24913__i] = arguments[G__24913__i + 2]; ++G__24913__i;}
G__24912 = new cljs.core.IndexedSeq(G__24913__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24912);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__24914__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__24914 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24915__i = 0, G__24915__a = new Array(arguments.length -  2);
while (G__24915__i < G__24915__a.length) {G__24915__a[G__24915__i] = arguments[G__24915__i + 2]; ++G__24915__i;}
  more = new cljs.core.IndexedSeq(G__24915__a,0);
} 
return G__24914__delegate.call(this,x,y,more);};
G__24914.cljs$lang$maxFixedArity = 2;
G__24914.cljs$lang$applyTo = (function (arglist__24916){
var x = cljs.core.first(arglist__24916);
arglist__24916 = cljs.core.next(arglist__24916);
var y = cljs.core.first(arglist__24916);
var more = cljs.core.rest(arglist__24916);
return G__24914__delegate(x,y,more);
});
G__24914.cljs$core$IFn$_invoke$arity$variadic = G__24914__delegate;
return G__24914;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__24917 = null;
if (arguments.length > 2) {
var G__24918__i = 0, G__24918__a = new Array(arguments.length -  2);
while (G__24918__i < G__24918__a.length) {G__24918__a[G__24918__i] = arguments[G__24918__i + 2]; ++G__24918__i;}
G__24917 = new cljs.core.IndexedSeq(G__24918__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24917);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__24921 = x;
var G__24922 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__24921,G__24922) : cljs.core.mod.call(null,G__24921,G__24922));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__24923__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__24923 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24924__i = 0, G__24924__a = new Array(arguments.length -  2);
while (G__24924__i < G__24924__a.length) {G__24924__a[G__24924__i] = arguments[G__24924__i + 2]; ++G__24924__i;}
  more = new cljs.core.IndexedSeq(G__24924__a,0);
} 
return G__24923__delegate.call(this,x,y,more);};
G__24923.cljs$lang$maxFixedArity = 2;
G__24923.cljs$lang$applyTo = (function (arglist__24925){
var x = cljs.core.first(arglist__24925);
arglist__24925 = cljs.core.next(arglist__24925);
var y = cljs.core.first(arglist__24925);
var more = cljs.core.rest(arglist__24925);
return G__24923__delegate(x,y,more);
});
G__24923.cljs$core$IFn$_invoke$arity$variadic = G__24923__delegate;
return G__24923;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__24926 = null;
if (arguments.length > 2) {
var G__24927__i = 0, G__24927__a = new Array(arguments.length -  2);
while (G__24927__i < G__24927__a.length) {G__24927__a[G__24927__i] = arguments[G__24927__i + 2]; ++G__24927__i;}
G__24926 = new cljs.core.IndexedSeq(G__24927__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24926);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__24928__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__24928 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24929__i = 0, G__24929__a = new Array(arguments.length -  2);
while (G__24929__i < G__24929__a.length) {G__24929__a[G__24929__i] = arguments[G__24929__i + 2]; ++G__24929__i;}
  more = new cljs.core.IndexedSeq(G__24929__a,0);
} 
return G__24928__delegate.call(this,x,y,more);};
G__24928.cljs$lang$maxFixedArity = 2;
G__24928.cljs$lang$applyTo = (function (arglist__24930){
var x = cljs.core.first(arglist__24930);
arglist__24930 = cljs.core.next(arglist__24930);
var y = cljs.core.first(arglist__24930);
var more = cljs.core.rest(arglist__24930);
return G__24928__delegate(x,y,more);
});
G__24928.cljs$core$IFn$_invoke$arity$variadic = G__24928__delegate;
return G__24928;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__24931 = null;
if (arguments.length > 2) {
var G__24932__i = 0, G__24932__a = new Array(arguments.length -  2);
while (G__24932__i < G__24932__a.length) {G__24932__a[G__24932__i] = arguments[G__24932__i + 2]; ++G__24932__i;}
G__24931 = new cljs.core.IndexedSeq(G__24932__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24931);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__24935 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__24935) : Math.floor.call(null,G__24935));
} else {
var G__24936 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__24936) : Math.ceil.call(null,G__24936));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__24937__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__24937 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24938__i = 0, G__24938__a = new Array(arguments.length -  2);
while (G__24938__i < G__24938__a.length) {G__24938__a[G__24938__i] = arguments[G__24938__i + 2]; ++G__24938__i;}
  more = new cljs.core.IndexedSeq(G__24938__a,0);
} 
return G__24937__delegate.call(this,x,y,more);};
G__24937.cljs$lang$maxFixedArity = 2;
G__24937.cljs$lang$applyTo = (function (arglist__24939){
var x = cljs.core.first(arglist__24939);
arglist__24939 = cljs.core.next(arglist__24939);
var y = cljs.core.first(arglist__24939);
var more = cljs.core.rest(arglist__24939);
return G__24937__delegate(x,y,more);
});
G__24937.cljs$core$IFn$_invoke$arity$variadic = G__24937__delegate;
return G__24937;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__24940 = null;
if (arguments.length > 2) {
var G__24941__i = 0, G__24941__a = new Array(arguments.length -  2);
while (G__24941__i < G__24941__a.length) {G__24941__a[G__24941__i] = arguments[G__24941__i + 2]; ++G__24941__i;}
G__24940 = new cljs.core.IndexedSeq(G__24941__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24940);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__24942__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__24942 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24943__i = 0, G__24943__a = new Array(arguments.length -  2);
while (G__24943__i < G__24943__a.length) {G__24943__a[G__24943__i] = arguments[G__24943__i + 2]; ++G__24943__i;}
  more = new cljs.core.IndexedSeq(G__24943__a,0);
} 
return G__24942__delegate.call(this,x,y,more);};
G__24942.cljs$lang$maxFixedArity = 2;
G__24942.cljs$lang$applyTo = (function (arglist__24944){
var x = cljs.core.first(arglist__24944);
arglist__24944 = cljs.core.next(arglist__24944);
var y = cljs.core.first(arglist__24944);
var more = cljs.core.rest(arglist__24944);
return G__24942__delegate(x,y,more);
});
G__24942.cljs$core$IFn$_invoke$arity$variadic = G__24942__delegate;
return G__24942;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__24945 = null;
if (arguments.length > 2) {
var G__24946__i = 0, G__24946__a = new Array(arguments.length -  2);
while (G__24946__i < G__24946__a.length) {G__24946__a[G__24946__i] = arguments[G__24946__i + 2]; ++G__24946__i;}
G__24945 = new cljs.core.IndexedSeq(G__24946__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24945);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__24947__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__24947 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24948__i = 0, G__24948__a = new Array(arguments.length -  2);
while (G__24948__i < G__24948__a.length) {G__24948__a[G__24948__i] = arguments[G__24948__i + 2]; ++G__24948__i;}
  more = new cljs.core.IndexedSeq(G__24948__a,0);
} 
return G__24947__delegate.call(this,x,y,more);};
G__24947.cljs$lang$maxFixedArity = 2;
G__24947.cljs$lang$applyTo = (function (arglist__24949){
var x = cljs.core.first(arglist__24949);
arglist__24949 = cljs.core.next(arglist__24949);
var y = cljs.core.first(arglist__24949);
var more = cljs.core.rest(arglist__24949);
return G__24947__delegate(x,y,more);
});
G__24947.cljs$core$IFn$_invoke$arity$variadic = G__24947__delegate;
return G__24947;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__24950 = null;
if (arguments.length > 2) {
var G__24951__i = 0, G__24951__a = new Array(arguments.length -  2);
while (G__24951__i < G__24951__a.length) {G__24951__a[G__24951__i] = arguments[G__24951__i + 2]; ++G__24951__i;}
G__24950 = new cljs.core.IndexedSeq(G__24951__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24950);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__24952__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__24952 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24953__i = 0, G__24953__a = new Array(arguments.length -  2);
while (G__24953__i < G__24953__a.length) {G__24953__a[G__24953__i] = arguments[G__24953__i + 2]; ++G__24953__i;}
  more = new cljs.core.IndexedSeq(G__24953__a,0);
} 
return G__24952__delegate.call(this,x,y,more);};
G__24952.cljs$lang$maxFixedArity = 2;
G__24952.cljs$lang$applyTo = (function (arglist__24954){
var x = cljs.core.first(arglist__24954);
arglist__24954 = cljs.core.next(arglist__24954);
var y = cljs.core.first(arglist__24954);
var more = cljs.core.rest(arglist__24954);
return G__24952__delegate(x,y,more);
});
G__24952.cljs$core$IFn$_invoke$arity$variadic = G__24952__delegate;
return G__24952;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__24955 = null;
if (arguments.length > 2) {
var G__24956__i = 0, G__24956__a = new Array(arguments.length -  2);
while (G__24956__i < G__24956__a.length) {G__24956__a[G__24956__i] = arguments[G__24956__i + 2]; ++G__24956__i;}
G__24955 = new cljs.core.IndexedSeq(G__24956__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24955);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__24961__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__24962 = y;
var G__24963 = cljs.core.first(more);
var G__24964 = cljs.core.next(more);
x = G__24962;
y = G__24963;
more = G__24964;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__24961 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24965__i = 0, G__24965__a = new Array(arguments.length -  2);
while (G__24965__i < G__24965__a.length) {G__24965__a[G__24965__i] = arguments[G__24965__i + 2]; ++G__24965__i;}
  more = new cljs.core.IndexedSeq(G__24965__a,0);
} 
return G__24961__delegate.call(this,x,y,more);};
G__24961.cljs$lang$maxFixedArity = 2;
G__24961.cljs$lang$applyTo = (function (arglist__24966){
var x = cljs.core.first(arglist__24966);
arglist__24966 = cljs.core.next(arglist__24966);
var y = cljs.core.first(arglist__24966);
var more = cljs.core.rest(arglist__24966);
return G__24961__delegate(x,y,more);
});
G__24961.cljs$core$IFn$_invoke$arity$variadic = G__24961__delegate;
return G__24961;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__24967 = null;
if (arguments.length > 2) {
var G__24968__i = 0, G__24968__a = new Array(arguments.length -  2);
while (G__24968__i < G__24968__a.length) {G__24968__a[G__24968__i] = arguments[G__24968__i + 2]; ++G__24968__i;}
G__24967 = new cljs.core.IndexedSeq(G__24968__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24967);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__24969 = (n__$1 - (1));
var G__24970 = cljs.core.next(xs);
n__$1 = G__24969;
xs = G__24970;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__24974 = x;
return goog.string.buildString(G__24974);
}
});
var str__2 = (function() { 
var G__24975__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__24976 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__24977 = cljs.core.next(more);
sb = G__24976;
more = G__24977;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__24975 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__24978__i = 0, G__24978__a = new Array(arguments.length -  1);
while (G__24978__i < G__24978__a.length) {G__24978__a[G__24978__i] = arguments[G__24978__i + 1]; ++G__24978__i;}
  ys = new cljs.core.IndexedSeq(G__24978__a,0);
} 
return G__24975__delegate.call(this,x,ys);};
G__24975.cljs$lang$maxFixedArity = 1;
G__24975.cljs$lang$applyTo = (function (arglist__24979){
var x = cljs.core.first(arglist__24979);
var ys = cljs.core.rest(arglist__24979);
return G__24975__delegate(x,ys);
});
G__24975.cljs$core$IFn$_invoke$arity$variadic = G__24975__delegate;
return G__24975;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__24980 = null;
if (arguments.length > 1) {
var G__24981__i = 0, G__24981__a = new Array(arguments.length -  1);
while (G__24981__i < G__24981__a.length) {G__24981__a[G__24981__i] = arguments[G__24981__i + 1]; ++G__24981__i;}
G__24980 = new cljs.core.IndexedSeq(G__24981__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__24980);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__24982 = cljs.core.next(xs);
var G__24983 = cljs.core.next(ys);
xs = G__24982;
ys = G__24983;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__24984 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__24985 = cljs.core.next(s);
res = G__24984;
s = G__24985;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__24990 = ((h + (cljs.core.hash((function (){var G__24988 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__24988) : cljs.core.key.call(null,G__24988));
})()) ^ cljs.core.hash((function (){var G__24989 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__24989) : cljs.core.val.call(null,G__24989));
})()))) % (4503599627370496));
var G__24991 = cljs.core.next(s);
h = G__24990;
s = G__24991;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__24992 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__24993 = cljs.core.next(s__$1);
h = G__24992;
s__$1 = G__24993;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__25004_25014 = cljs.core.seq(fn_map);
var chunk__25005_25015 = null;
var count__25006_25016 = (0);
var i__25007_25017 = (0);
while(true){
if((i__25007_25017 < count__25006_25016)){
var vec__25008_25018 = chunk__25005_25015.cljs$core$IIndexed$_nth$arity$2(null,i__25007_25017);
var key_name_25019 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25008_25018,(0),null);
var f_25020 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25008_25018,(1),null);
var str_name_25021 = (function (){var G__25009 = key_name_25019;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__25009) : cljs.core.name.call(null,G__25009));
})();
(obj[str_name_25021] = f_25020);

var G__25022 = seq__25004_25014;
var G__25023 = chunk__25005_25015;
var G__25024 = count__25006_25016;
var G__25025 = (i__25007_25017 + (1));
seq__25004_25014 = G__25022;
chunk__25005_25015 = G__25023;
count__25006_25016 = G__25024;
i__25007_25017 = G__25025;
continue;
} else {
var temp__4126__auto___25026 = cljs.core.seq(seq__25004_25014);
if(temp__4126__auto___25026){
var seq__25004_25027__$1 = temp__4126__auto___25026;
if(cljs.core.chunked_seq_QMARK_(seq__25004_25027__$1)){
var c__16301__auto___25028 = (function (){var G__25010 = seq__25004_25027__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__25010) : cljs.core.chunk_first.call(null,G__25010));
})();
var G__25029 = (function (){var G__25011 = seq__25004_25027__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__25011) : cljs.core.chunk_rest.call(null,G__25011));
})();
var G__25030 = c__16301__auto___25028;
var G__25031 = cljs.core.count(c__16301__auto___25028);
var G__25032 = (0);
seq__25004_25014 = G__25029;
chunk__25005_25015 = G__25030;
count__25006_25016 = G__25031;
i__25007_25017 = G__25032;
continue;
} else {
var vec__25012_25033 = cljs.core.first(seq__25004_25027__$1);
var key_name_25034 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25012_25033,(0),null);
var f_25035 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25012_25033,(1),null);
var str_name_25036 = (function (){var G__25013 = key_name_25034;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__25013) : cljs.core.name.call(null,G__25013));
})();
(obj[str_name_25036] = f_25035);

var G__25037 = cljs.core.next(seq__25004_25027__$1);
var G__25038 = null;
var G__25039 = (0);
var G__25040 = (0);
seq__25004_25014 = G__25037;
chunk__25005_25015 = G__25038;
count__25006_25016 = G__25039;
i__25007_25017 = G__25040;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__15935__auto__ = self__.__hash;
if(!((h__15935__auto__ == null))){
return h__15935__auto__;
} else {
var h__15935__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__15935__auto____$1;

return h__15935__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16492__auto__ = this;
return cljs.core.es6_iterator(this__16492__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16492__auto__ = this;
return cljs.core.es6_iterator(this__16492__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__25042 = coll;
if(G__25042){
var bit__16195__auto__ = (G__25042.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__16195__auto__) || (G__25042.cljs$core$IReversible$)){
return true;
} else {
if((!G__25042.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__25042);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__25042);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__25043 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__25043;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__25044 = (i - (1));
var G__25045 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__25044;
r = G__25045;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__25046__i = 0, G__25046__a = new Array(arguments.length -  0);
while (G__25046__i < G__25046__a.length) {G__25046__a[G__25046__i] = arguments[G__25046__i + 0]; ++G__25046__i;}
  xs = new cljs.core.IndexedSeq(G__25046__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__25047){
var xs = cljs.core.seq(arglist__25047);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__15935__auto__ = self__.__hash;
if(!((h__15935__auto__ == null))){
return h__15935__auto__;
} else {
var h__15935__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__15935__auto____$1;

return h__15935__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16492__auto__ = this;
return cljs.core.es6_iterator(this__16492__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__15514__auto__ = (coll == null);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var G__25051 = coll;
if(G__25051){
var bit__16188__auto__ = (G__25051.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__16188__auto__) || (G__25051.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__25053 = x;
if(G__25053){
var bit__16195__auto__ = (G__25053.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__16195__auto__) || (G__25053.cljs$core$IList$)){
return true;
} else {
if((!G__25053.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__25053);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__25053);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__15502__auto__ = cljs.core.not(a.ns);
if(and__15502__auto__){
return b.ns;
} else {
return and__15502__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__25060 = a.ns;
var G__25061 = b.ns;
return goog.array.defaultCompare(G__25060,G__25061);
})();
if(((0) === nsc)){
var G__25062 = a.name;
var G__25063 = b.name;
return goog.array.defaultCompare(G__25062,G__25063);
} else {
return nsc;
}
}
} else {
var G__25064 = a.name;
var G__25065 = b.name;
return goog.array.defaultCompare(G__25064,G__25065);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__15935__auto__ = self__._hash;
if(!((h__15935__auto__ == null))){
return h__15935__auto__;
} else {
var h__15935__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__15935__auto____$1;

return h__15935__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__25067 = null;
var G__25067__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__25067__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__25067 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__25067__2.call(this,self__,coll);
case 3:
return G__25067__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25067.cljs$core$IFn$_invoke$arity$2 = G__25067__2;
G__25067.cljs$core$IFn$_invoke$arity$3 = G__25067__3;
return G__25067;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args25066){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args25066)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__25069 = x;
if(G__25069){
var bit__16188__auto__ = (G__25069.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__16188__auto__) || (G__25069.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__25071 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__25071) : cljs.core.name.call(null,G__25071));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__15935__auto__ = self__.__hash;
if(!((h__15935__auto__ == null))){
return h__15935__auto__;
} else {
var h__15935__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__15935__auto____$1;

return h__15935__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__25072 = ls.sval();
ls = G__25072;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16492__auto__ = this;
return cljs.core.es6_iterator(this__16492__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__15935__auto__ = self__.__hash;
if(!((h__15935__auto__ == null))){
return h__15935__auto__;
} else {
var h__15935__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__15935__auto____$1;

return h__15935__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16492__auto__ = this;
return cljs.core.es6_iterator(this__16492__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__25074 = s;
if(G__25074){
var bit__16188__auto__ = (G__25074.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__16188__auto__) || (G__25074.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__25075 = cljs.core.next(s__$1);
s__$1 = G__25075;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_25076 = (0);
var xs_25077 = cljs.core.seq(coll);
while(true){
if(xs_25077){
(ret[i_25076] = cljs.core.to_array(cljs.core.first(xs_25077)));

var G__25078 = (i_25076 + (1));
var G__25079 = cljs.core.next(xs_25077);
i_25076 = G__25078;
xs_25077 = G__25079;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__25082 = (i + (1));
var G__25083 = cljs.core.next(s__$1);
i = G__25082;
s__$1 = G__25083;
continue;
} else {
return a;
}
break;
}
} else {
var n__16401__auto___25084 = size;
var i_25085 = (0);
while(true){
if((i_25085 < n__16401__auto___25084)){
(a[i_25085] = init_val_or_seq);

var G__25086 = (i_25085 + (1));
i_25085 = G__25086;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__25089 = (i + (1));
var G__25090 = cljs.core.next(s__$1);
i = G__25089;
s__$1 = G__25090;
continue;
} else {
return a;
}
break;
}
} else {
var n__16401__auto___25091 = size;
var i_25092 = (0);
while(true){
if((i_25092 < n__16401__auto___25091)){
(a[i_25092] = init_val_or_seq);

var G__25093 = (i_25092 + (1));
i_25092 = G__25093;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__25096 = (i + (1));
var G__25097 = cljs.core.next(s__$1);
i = G__25096;
s__$1 = G__25097;
continue;
} else {
return a;
}
break;
}
} else {
var n__16401__auto___25098 = size;
var i_25099 = (0);
while(true){
if((i_25099 < n__16401__auto___25098)){
(a[i_25099] = init_val_or_seq);

var G__25100 = (i_25099 + (1));
i_25099 = G__25100;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__25103 = (i + (1));
var G__25104 = cljs.core.next(s__$1);
i = G__25103;
s__$1 = G__25104;
continue;
} else {
return a;
}
break;
}
} else {
var n__16401__auto___25105 = size;
var i_25106 = (0);
while(true){
if((i_25106 < n__16401__auto___25105)){
(a[i_25106] = init_val_or_seq);

var G__25107 = (i_25106 + (1));
i_25106 = G__25107;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__25108 = cljs.core.next(s__$1);
var G__25109 = (i - (1));
var G__25110 = (sum + (1));
s__$1 = G__25108;
i = G__25109;
sum = G__25110;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__25130__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__25130 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__25131__i = 0, G__25131__a = new Array(arguments.length -  2);
while (G__25131__i < G__25131__a.length) {G__25131__a[G__25131__i] = arguments[G__25131__i + 2]; ++G__25131__i;}
  zs = new cljs.core.IndexedSeq(G__25131__a,0);
} 
return G__25130__delegate.call(this,x,y,zs);};
G__25130.cljs$lang$maxFixedArity = 2;
G__25130.cljs$lang$applyTo = (function (arglist__25132){
var x = cljs.core.first(arglist__25132);
arglist__25132 = cljs.core.next(arglist__25132);
var y = cljs.core.first(arglist__25132);
var zs = cljs.core.rest(arglist__25132);
return G__25130__delegate(x,y,zs);
});
G__25130.cljs$core$IFn$_invoke$arity$variadic = G__25130__delegate;
return G__25130;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__25133 = null;
if (arguments.length > 2) {
var G__25134__i = 0, G__25134__a = new Array(arguments.length -  2);
while (G__25134__i < G__25134__a.length) {G__25134__a[G__25134__i] = arguments[G__25134__i + 2]; ++G__25134__i;}
G__25133 = new cljs.core.IndexedSeq(G__25134__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25133);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__25135__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__25135 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__25136__i = 0, G__25136__a = new Array(arguments.length -  4);
while (G__25136__i < G__25136__a.length) {G__25136__a[G__25136__i] = arguments[G__25136__i + 4]; ++G__25136__i;}
  more = new cljs.core.IndexedSeq(G__25136__a,0);
} 
return G__25135__delegate.call(this,a,b,c,d,more);};
G__25135.cljs$lang$maxFixedArity = 4;
G__25135.cljs$lang$applyTo = (function (arglist__25137){
var a = cljs.core.first(arglist__25137);
arglist__25137 = cljs.core.next(arglist__25137);
var b = cljs.core.first(arglist__25137);
arglist__25137 = cljs.core.next(arglist__25137);
var c = cljs.core.first(arglist__25137);
arglist__25137 = cljs.core.next(arglist__25137);
var d = cljs.core.first(arglist__25137);
var more = cljs.core.rest(arglist__25137);
return G__25135__delegate(a,b,c,d,more);
});
G__25135.cljs$core$IFn$_invoke$arity$variadic = G__25135__delegate;
return G__25135;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__25138 = null;
if (arguments.length > 4) {
var G__25139__i = 0, G__25139__a = new Array(arguments.length -  4);
while (G__25139__i < G__25139__a.length) {G__25139__a[G__25139__i] = arguments[G__25139__i + 4]; ++G__25139__i;}
G__25138 = new cljs.core.IndexedSeq(G__25139__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__25138);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__25140__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__25141 = ntcoll;
var G__25142 = cljs.core.first(vals);
var G__25143 = cljs.core.next(vals);
tcoll = G__25141;
val = G__25142;
vals = G__25143;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__25140 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__25144__i = 0, G__25144__a = new Array(arguments.length -  2);
while (G__25144__i < G__25144__a.length) {G__25144__a[G__25144__i] = arguments[G__25144__i + 2]; ++G__25144__i;}
  vals = new cljs.core.IndexedSeq(G__25144__a,0);
} 
return G__25140__delegate.call(this,tcoll,val,vals);};
G__25140.cljs$lang$maxFixedArity = 2;
G__25140.cljs$lang$applyTo = (function (arglist__25145){
var tcoll = cljs.core.first(arglist__25145);
arglist__25145 = cljs.core.next(arglist__25145);
var val = cljs.core.first(arglist__25145);
var vals = cljs.core.rest(arglist__25145);
return G__25140__delegate(tcoll,val,vals);
});
G__25140.cljs$core$IFn$_invoke$arity$variadic = G__25140__delegate;
return G__25140;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__25146 = null;
if (arguments.length > 2) {
var G__25147__i = 0, G__25147__a = new Array(arguments.length -  2);
while (G__25147__i < G__25147__a.length) {G__25147__a[G__25147__i] = arguments[G__25147__i + 2]; ++G__25147__i;}
G__25146 = new cljs.core.IndexedSeq(G__25147__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__25146);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__25148__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__25149 = ntcoll;
var G__25150 = cljs.core.first(kvs);
var G__25151 = cljs.core.second(kvs);
var G__25152 = cljs.core.nnext(kvs);
tcoll = G__25149;
key = G__25150;
val = G__25151;
kvs = G__25152;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__25148 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__25153__i = 0, G__25153__a = new Array(arguments.length -  3);
while (G__25153__i < G__25153__a.length) {G__25153__a[G__25153__i] = arguments[G__25153__i + 3]; ++G__25153__i;}
  kvs = new cljs.core.IndexedSeq(G__25153__a,0);
} 
return G__25148__delegate.call(this,tcoll,key,val,kvs);};
G__25148.cljs$lang$maxFixedArity = 3;
G__25148.cljs$lang$applyTo = (function (arglist__25154){
var tcoll = cljs.core.first(arglist__25154);
arglist__25154 = cljs.core.next(arglist__25154);
var key = cljs.core.first(arglist__25154);
arglist__25154 = cljs.core.next(arglist__25154);
var val = cljs.core.first(arglist__25154);
var kvs = cljs.core.rest(arglist__25154);
return G__25148__delegate(tcoll,key,val,kvs);
});
G__25148.cljs$core$IFn$_invoke$arity$variadic = G__25148__delegate;
return G__25148;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__25155 = null;
if (arguments.length > 3) {
var G__25156__i = 0, G__25156__a = new Array(arguments.length -  3);
while (G__25156__i < G__25156__a.length) {G__25156__a[G__25156__i] = arguments[G__25156__i + 3]; ++G__25156__i;}
G__25155 = new cljs.core.IndexedSeq(G__25156__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__25155);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__25157__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__25158 = ntcoll;
var G__25159 = cljs.core.first(ks);
var G__25160 = cljs.core.next(ks);
tcoll = G__25158;
key = G__25159;
ks = G__25160;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__25157 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__25161__i = 0, G__25161__a = new Array(arguments.length -  2);
while (G__25161__i < G__25161__a.length) {G__25161__a[G__25161__i] = arguments[G__25161__i + 2]; ++G__25161__i;}
  ks = new cljs.core.IndexedSeq(G__25161__a,0);
} 
return G__25157__delegate.call(this,tcoll,key,ks);};
G__25157.cljs$lang$maxFixedArity = 2;
G__25157.cljs$lang$applyTo = (function (arglist__25162){
var tcoll = cljs.core.first(arglist__25162);
arglist__25162 = cljs.core.next(arglist__25162);
var key = cljs.core.first(arglist__25162);
var ks = cljs.core.rest(arglist__25162);
return G__25157__delegate(tcoll,key,ks);
});
G__25157.cljs$core$IFn$_invoke$arity$variadic = G__25157__delegate;
return G__25157;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__25163 = null;
if (arguments.length > 2) {
var G__25164__i = 0, G__25164__a = new Array(arguments.length -  2);
while (G__25164__i < G__25164__a.length) {G__25164__a[G__25164__i] = arguments[G__25164__i + 2]; ++G__25164__i;}
G__25163 = new cljs.core.IndexedSeq(G__25164__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__25163);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__25165__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__25166 = ntcoll;
var G__25167 = cljs.core.first(vals);
var G__25168 = cljs.core.next(vals);
tcoll = G__25166;
val = G__25167;
vals = G__25168;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__25165 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__25169__i = 0, G__25169__a = new Array(arguments.length -  2);
while (G__25169__i < G__25169__a.length) {G__25169__a[G__25169__i] = arguments[G__25169__i + 2]; ++G__25169__i;}
  vals = new cljs.core.IndexedSeq(G__25169__a,0);
} 
return G__25165__delegate.call(this,tcoll,val,vals);};
G__25165.cljs$lang$maxFixedArity = 2;
G__25165.cljs$lang$applyTo = (function (arglist__25170){
var tcoll = cljs.core.first(arglist__25170);
arglist__25170 = cljs.core.next(arglist__25170);
var val = cljs.core.first(arglist__25170);
var vals = cljs.core.rest(arglist__25170);
return G__25165__delegate(tcoll,val,vals);
});
G__25165.cljs$core$IFn$_invoke$arity$variadic = G__25165__delegate;
return G__25165;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__25171 = null;
if (arguments.length > 2) {
var G__25172__i = 0, G__25172__a = new Array(arguments.length -  2);
while (G__25172__i < G__25172__a.length) {G__25172__a[G__25172__i] = arguments[G__25172__i + 2]; ++G__25172__i;}
G__25171 = new cljs.core.IndexedSeq(G__25172__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__25171);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a16445 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a16445);
} else {
var G__25383 = a16445;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25383) : f.call(null,G__25383));
}
} else {
var b16446 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a16445,b16446);
} else {
var G__25384 = a16445;
var G__25385 = b16446;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25384,G__25385) : f.call(null,G__25384,G__25385));
}
} else {
var c16447 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a16445,b16446,c16447);
} else {
var G__25386 = a16445;
var G__25387 = b16446;
var G__25388 = c16447;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25386,G__25387,G__25388) : f.call(null,G__25386,G__25387,G__25388));
}
} else {
var d16448 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a16445,b16446,c16447,d16448);
} else {
var G__25389 = a16445;
var G__25390 = b16446;
var G__25391 = c16447;
var G__25392 = d16448;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__25389,G__25390,G__25391,G__25392) : f.call(null,G__25389,G__25390,G__25391,G__25392));
}
} else {
var e16449 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a16445,b16446,c16447,d16448,e16449);
} else {
var G__25393 = a16445;
var G__25394 = b16446;
var G__25395 = c16447;
var G__25396 = d16448;
var G__25397 = e16449;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__25393,G__25394,G__25395,G__25396,G__25397) : f.call(null,G__25393,G__25394,G__25395,G__25396,G__25397));
}
} else {
var f16450 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a16445,b16446,c16447,d16448,e16449,f16450);
} else {
var G__25398 = a16445;
var G__25399 = b16446;
var G__25400 = c16447;
var G__25401 = d16448;
var G__25402 = e16449;
var G__25403 = f16450;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__25398,G__25399,G__25400,G__25401,G__25402,G__25403) : f.call(null,G__25398,G__25399,G__25400,G__25401,G__25402,G__25403));
}
} else {
var g16451 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a16445,b16446,c16447,d16448,e16449,f16450,g16451);
} else {
var G__25404 = a16445;
var G__25405 = b16446;
var G__25406 = c16447;
var G__25407 = d16448;
var G__25408 = e16449;
var G__25409 = f16450;
var G__25410 = g16451;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__25404,G__25405,G__25406,G__25407,G__25408,G__25409,G__25410) : f.call(null,G__25404,G__25405,G__25406,G__25407,G__25408,G__25409,G__25410));
}
} else {
var h16452 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a16445,b16446,c16447,d16448,e16449,f16450,g16451,h16452);
} else {
var G__25411 = a16445;
var G__25412 = b16446;
var G__25413 = c16447;
var G__25414 = d16448;
var G__25415 = e16449;
var G__25416 = f16450;
var G__25417 = g16451;
var G__25418 = h16452;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__25411,G__25412,G__25413,G__25414,G__25415,G__25416,G__25417,G__25418) : f.call(null,G__25411,G__25412,G__25413,G__25414,G__25415,G__25416,G__25417,G__25418));
}
} else {
var i16453 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a16445,b16446,c16447,d16448,e16449,f16450,g16451,h16452,i16453);
} else {
var G__25419 = a16445;
var G__25420 = b16446;
var G__25421 = c16447;
var G__25422 = d16448;
var G__25423 = e16449;
var G__25424 = f16450;
var G__25425 = g16451;
var G__25426 = h16452;
var G__25427 = i16453;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__25419,G__25420,G__25421,G__25422,G__25423,G__25424,G__25425,G__25426,G__25427) : f.call(null,G__25419,G__25420,G__25421,G__25422,G__25423,G__25424,G__25425,G__25426,G__25427));
}
} else {
var j16454 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a16445,b16446,c16447,d16448,e16449,f16450,g16451,h16452,i16453,j16454);
} else {
var G__25428 = a16445;
var G__25429 = b16446;
var G__25430 = c16447;
var G__25431 = d16448;
var G__25432 = e16449;
var G__25433 = f16450;
var G__25434 = g16451;
var G__25435 = h16452;
var G__25436 = i16453;
var G__25437 = j16454;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__25428,G__25429,G__25430,G__25431,G__25432,G__25433,G__25434,G__25435,G__25436,G__25437) : f.call(null,G__25428,G__25429,G__25430,G__25431,G__25432,G__25433,G__25434,G__25435,G__25436,G__25437));
}
} else {
var k16455 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a16445,b16446,c16447,d16448,e16449,f16450,g16451,h16452,i16453,j16454,k16455);
} else {
var G__25438 = a16445;
var G__25439 = b16446;
var G__25440 = c16447;
var G__25441 = d16448;
var G__25442 = e16449;
var G__25443 = f16450;
var G__25444 = g16451;
var G__25445 = h16452;
var G__25446 = i16453;
var G__25447 = j16454;
var G__25448 = k16455;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__25438,G__25439,G__25440,G__25441,G__25442,G__25443,G__25444,G__25445,G__25446,G__25447,G__25448) : f.call(null,G__25438,G__25439,G__25440,G__25441,G__25442,G__25443,G__25444,G__25445,G__25446,G__25447,G__25448));
}
} else {
var l16456 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a16445,b16446,c16447,d16448,e16449,f16450,g16451,h16452,i16453,j16454,k16455,l16456);
} else {
var G__25449 = a16445;
var G__25450 = b16446;
var G__25451 = c16447;
var G__25452 = d16448;
var G__25453 = e16449;
var G__25454 = f16450;
var G__25455 = g16451;
var G__25456 = h16452;
var G__25457 = i16453;
var G__25458 = j16454;
var G__25459 = k16455;
var G__25460 = l16456;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__25449,G__25450,G__25451,G__25452,G__25453,G__25454,G__25455,G__25456,G__25457,G__25458,G__25459,G__25460) : f.call(null,G__25449,G__25450,G__25451,G__25452,G__25453,G__25454,G__25455,G__25456,G__25457,G__25458,G__25459,G__25460));
}
} else {
var m16457 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a16445,b16446,c16447,d16448,e16449,f16450,g16451,h16452,i16453,j16454,k16455,l16456,m16457);
} else {
var G__25461 = a16445;
var G__25462 = b16446;
var G__25463 = c16447;
var G__25464 = d16448;
var G__25465 = e16449;
var G__25466 = f16450;
var G__25467 = g16451;
var G__25468 = h16452;
var G__25469 = i16453;
var G__25470 = j16454;
var G__25471 = k16455;
var G__25472 = l16456;
var G__25473 = m16457;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__25461,G__25462,G__25463,G__25464,G__25465,G__25466,G__25467,G__25468,G__25469,G__25470,G__25471,G__25472,G__25473) : f.call(null,G__25461,G__25462,G__25463,G__25464,G__25465,G__25466,G__25467,G__25468,G__25469,G__25470,G__25471,G__25472,G__25473));
}
} else {
var n16458 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a16445,b16446,c16447,d16448,e16449,f16450,g16451,h16452,i16453,j16454,k16455,l16456,m16457,n16458);
} else {
var G__25474 = a16445;
var G__25475 = b16446;
var G__25476 = c16447;
var G__25477 = d16448;
var G__25478 = e16449;
var G__25479 = f16450;
var G__25480 = g16451;
var G__25481 = h16452;
var G__25482 = i16453;
var G__25483 = j16454;
var G__25484 = k16455;
var G__25485 = l16456;
var G__25486 = m16457;
var G__25487 = n16458;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__25474,G__25475,G__25476,G__25477,G__25478,G__25479,G__25480,G__25481,G__25482,G__25483,G__25484,G__25485,G__25486,G__25487) : f.call(null,G__25474,G__25475,G__25476,G__25477,G__25478,G__25479,G__25480,G__25481,G__25482,G__25483,G__25484,G__25485,G__25486,G__25487));
}
} else {
var o16459 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a16445,b16446,c16447,d16448,e16449,f16450,g16451,h16452,i16453,j16454,k16455,l16456,m16457,n16458,o16459);
} else {
var G__25488 = a16445;
var G__25489 = b16446;
var G__25490 = c16447;
var G__25491 = d16448;
var G__25492 = e16449;
var G__25493 = f16450;
var G__25494 = g16451;
var G__25495 = h16452;
var G__25496 = i16453;
var G__25497 = j16454;
var G__25498 = k16455;
var G__25499 = l16456;
var G__25500 = m16457;
var G__25501 = n16458;
var G__25502 = o16459;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__25488,G__25489,G__25490,G__25491,G__25492,G__25493,G__25494,G__25495,G__25496,G__25497,G__25498,G__25499,G__25500,G__25501,G__25502) : f.call(null,G__25488,G__25489,G__25490,G__25491,G__25492,G__25493,G__25494,G__25495,G__25496,G__25497,G__25498,G__25499,G__25500,G__25501,G__25502));
}
} else {
var p16460 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a16445,b16446,c16447,d16448,e16449,f16450,g16451,h16452,i16453,j16454,k16455,l16456,m16457,n16458,o16459,p16460);
} else {
var G__25503 = a16445;
var G__25504 = b16446;
var G__25505 = c16447;
var G__25506 = d16448;
var G__25507 = e16449;
var G__25508 = f16450;
var G__25509 = g16451;
var G__25510 = h16452;
var G__25511 = i16453;
var G__25512 = j16454;
var G__25513 = k16455;
var G__25514 = l16456;
var G__25515 = m16457;
var G__25516 = n16458;
var G__25517 = o16459;
var G__25518 = p16460;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__25503,G__25504,G__25505,G__25506,G__25507,G__25508,G__25509,G__25510,G__25511,G__25512,G__25513,G__25514,G__25515,G__25516,G__25517,G__25518) : f.call(null,G__25503,G__25504,G__25505,G__25506,G__25507,G__25508,G__25509,G__25510,G__25511,G__25512,G__25513,G__25514,G__25515,G__25516,G__25517,G__25518));
}
} else {
var q16461 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a16445,b16446,c16447,d16448,e16449,f16450,g16451,h16452,i16453,j16454,k16455,l16456,m16457,n16458,o16459,p16460,q16461);
} else {
var G__25519 = a16445;
var G__25520 = b16446;
var G__25521 = c16447;
var G__25522 = d16448;
var G__25523 = e16449;
var G__25524 = f16450;
var G__25525 = g16451;
var G__25526 = h16452;
var G__25527 = i16453;
var G__25528 = j16454;
var G__25529 = k16455;
var G__25530 = l16456;
var G__25531 = m16457;
var G__25532 = n16458;
var G__25533 = o16459;
var G__25534 = p16460;
var G__25535 = q16461;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__25519,G__25520,G__25521,G__25522,G__25523,G__25524,G__25525,G__25526,G__25527,G__25528,G__25529,G__25530,G__25531,G__25532,G__25533,G__25534,G__25535) : f.call(null,G__25519,G__25520,G__25521,G__25522,G__25523,G__25524,G__25525,G__25526,G__25527,G__25528,G__25529,G__25530,G__25531,G__25532,G__25533,G__25534,G__25535));
}
} else {
var r16462 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a16445,b16446,c16447,d16448,e16449,f16450,g16451,h16452,i16453,j16454,k16455,l16456,m16457,n16458,o16459,p16460,q16461,r16462);
} else {
var G__25536 = a16445;
var G__25537 = b16446;
var G__25538 = c16447;
var G__25539 = d16448;
var G__25540 = e16449;
var G__25541 = f16450;
var G__25542 = g16451;
var G__25543 = h16452;
var G__25544 = i16453;
var G__25545 = j16454;
var G__25546 = k16455;
var G__25547 = l16456;
var G__25548 = m16457;
var G__25549 = n16458;
var G__25550 = o16459;
var G__25551 = p16460;
var G__25552 = q16461;
var G__25553 = r16462;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__25536,G__25537,G__25538,G__25539,G__25540,G__25541,G__25542,G__25543,G__25544,G__25545,G__25546,G__25547,G__25548,G__25549,G__25550,G__25551,G__25552,G__25553) : f.call(null,G__25536,G__25537,G__25538,G__25539,G__25540,G__25541,G__25542,G__25543,G__25544,G__25545,G__25546,G__25547,G__25548,G__25549,G__25550,G__25551,G__25552,G__25553));
}
} else {
var s16463 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a16445,b16446,c16447,d16448,e16449,f16450,g16451,h16452,i16453,j16454,k16455,l16456,m16457,n16458,o16459,p16460,q16461,r16462,s16463);
} else {
var G__25554 = a16445;
var G__25555 = b16446;
var G__25556 = c16447;
var G__25557 = d16448;
var G__25558 = e16449;
var G__25559 = f16450;
var G__25560 = g16451;
var G__25561 = h16452;
var G__25562 = i16453;
var G__25563 = j16454;
var G__25564 = k16455;
var G__25565 = l16456;
var G__25566 = m16457;
var G__25567 = n16458;
var G__25568 = o16459;
var G__25569 = p16460;
var G__25570 = q16461;
var G__25571 = r16462;
var G__25572 = s16463;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__25554,G__25555,G__25556,G__25557,G__25558,G__25559,G__25560,G__25561,G__25562,G__25563,G__25564,G__25565,G__25566,G__25567,G__25568,G__25569,G__25570,G__25571,G__25572) : f.call(null,G__25554,G__25555,G__25556,G__25557,G__25558,G__25559,G__25560,G__25561,G__25562,G__25563,G__25564,G__25565,G__25566,G__25567,G__25568,G__25569,G__25570,G__25571,G__25572));
}
} else {
var t16464 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a16445,b16446,c16447,d16448,e16449,f16450,g16451,h16452,i16453,j16454,k16455,l16456,m16457,n16458,o16459,p16460,q16461,r16462,s16463,t16464);
} else {
var G__25573 = a16445;
var G__25574 = b16446;
var G__25575 = c16447;
var G__25576 = d16448;
var G__25577 = e16449;
var G__25578 = f16450;
var G__25579 = g16451;
var G__25580 = h16452;
var G__25581 = i16453;
var G__25582 = j16454;
var G__25583 = k16455;
var G__25584 = l16456;
var G__25585 = m16457;
var G__25586 = n16458;
var G__25587 = o16459;
var G__25588 = p16460;
var G__25589 = q16461;
var G__25590 = r16462;
var G__25591 = s16463;
var G__25592 = t16464;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__25573,G__25574,G__25575,G__25576,G__25577,G__25578,G__25579,G__25580,G__25581,G__25582,G__25583,G__25584,G__25585,G__25586,G__25587,G__25588,G__25589,G__25590,G__25591,G__25592) : f.call(null,G__25573,G__25574,G__25575,G__25576,G__25577,G__25578,G__25579,G__25580,G__25581,G__25582,G__25583,G__25584,G__25585,G__25586,G__25587,G__25588,G__25589,G__25590,G__25591,G__25592));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__25593__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__25593 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__25594__i = 0, G__25594__a = new Array(arguments.length -  5);
while (G__25594__i < G__25594__a.length) {G__25594__a[G__25594__i] = arguments[G__25594__i + 5]; ++G__25594__i;}
  args = new cljs.core.IndexedSeq(G__25594__a,0);
} 
return G__25593__delegate.call(this,f,a,b,c,d,args);};
G__25593.cljs$lang$maxFixedArity = 5;
G__25593.cljs$lang$applyTo = (function (arglist__25595){
var f = cljs.core.first(arglist__25595);
arglist__25595 = cljs.core.next(arglist__25595);
var a = cljs.core.first(arglist__25595);
arglist__25595 = cljs.core.next(arglist__25595);
var b = cljs.core.first(arglist__25595);
arglist__25595 = cljs.core.next(arglist__25595);
var c = cljs.core.first(arglist__25595);
arglist__25595 = cljs.core.next(arglist__25595);
var d = cljs.core.first(arglist__25595);
var args = cljs.core.rest(arglist__25595);
return G__25593__delegate(f,a,b,c,d,args);
});
G__25593.cljs$core$IFn$_invoke$arity$variadic = G__25593__delegate;
return G__25593;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__25596 = null;
if (arguments.length > 5) {
var G__25597__i = 0, G__25597__a = new Array(arguments.length -  5);
while (G__25597__i < G__25597__a.length) {G__25597__a[G__25597__i] = arguments[G__25597__i + 5]; ++G__25597__i;}
G__25596 = new cljs.core.IndexedSeq(G__25597__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__25596);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__25613 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25613) : f.call(null,G__25613));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__25614 = cljs.core.meta(obj);
var G__25615 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25614,G__25615) : f.call(null,G__25614,G__25615));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__25616 = cljs.core.meta(obj);
var G__25617 = a;
var G__25618 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25616,G__25617,G__25618) : f.call(null,G__25616,G__25617,G__25618));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__25619 = cljs.core.meta(obj);
var G__25620 = a;
var G__25621 = b;
var G__25622 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__25619,G__25620,G__25621,G__25622) : f.call(null,G__25619,G__25620,G__25621,G__25622));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__25623 = cljs.core.meta(obj);
var G__25624 = a;
var G__25625 = b;
var G__25626 = c;
var G__25627 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__25623,G__25624,G__25625,G__25626,G__25627) : f.call(null,G__25623,G__25624,G__25625,G__25626,G__25627));
})());
});
var vary_meta__7 = (function() { 
var G__25628__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__25628 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__25629__i = 0, G__25629__a = new Array(arguments.length -  6);
while (G__25629__i < G__25629__a.length) {G__25629__a[G__25629__i] = arguments[G__25629__i + 6]; ++G__25629__i;}
  args = new cljs.core.IndexedSeq(G__25629__a,0);
} 
return G__25628__delegate.call(this,obj,f,a,b,c,d,args);};
G__25628.cljs$lang$maxFixedArity = 6;
G__25628.cljs$lang$applyTo = (function (arglist__25630){
var obj = cljs.core.first(arglist__25630);
arglist__25630 = cljs.core.next(arglist__25630);
var f = cljs.core.first(arglist__25630);
arglist__25630 = cljs.core.next(arglist__25630);
var a = cljs.core.first(arglist__25630);
arglist__25630 = cljs.core.next(arglist__25630);
var b = cljs.core.first(arglist__25630);
arglist__25630 = cljs.core.next(arglist__25630);
var c = cljs.core.first(arglist__25630);
arglist__25630 = cljs.core.next(arglist__25630);
var d = cljs.core.first(arglist__25630);
var args = cljs.core.rest(arglist__25630);
return G__25628__delegate(obj,f,a,b,c,d,args);
});
G__25628.cljs$core$IFn$_invoke$arity$variadic = G__25628__delegate;
return G__25628;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__25631 = null;
if (arguments.length > 6) {
var G__25632__i = 0, G__25632__a = new Array(arguments.length -  6);
while (G__25632__i < G__25632__a.length) {G__25632__a[G__25632__i] = arguments[G__25632__i + 6]; ++G__25632__i;}
G__25631 = new cljs.core.IndexedSeq(G__25632__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__25631);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__25633__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__25633 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25634__i = 0, G__25634__a = new Array(arguments.length -  2);
while (G__25634__i < G__25634__a.length) {G__25634__a[G__25634__i] = arguments[G__25634__i + 2]; ++G__25634__i;}
  more = new cljs.core.IndexedSeq(G__25634__a,0);
} 
return G__25633__delegate.call(this,x,y,more);};
G__25633.cljs$lang$maxFixedArity = 2;
G__25633.cljs$lang$applyTo = (function (arglist__25635){
var x = cljs.core.first(arglist__25635);
arglist__25635 = cljs.core.next(arglist__25635);
var y = cljs.core.first(arglist__25635);
var more = cljs.core.rest(arglist__25635);
return G__25633__delegate(x,y,more);
});
G__25633.cljs$core$IFn$_invoke$arity$variadic = G__25633__delegate;
return G__25633;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__25636 = null;
if (arguments.length > 2) {
var G__25637__i = 0, G__25637__a = new Array(arguments.length -  2);
while (G__25637__i < G__25637__a.length) {G__25637__a[G__25637__i] = arguments[G__25637__i + 2]; ++G__25637__i;}
G__25636 = new cljs.core.IndexedSeq(G__25637__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25636);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t25641 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t25641 = (function (nil_iter,meta25642){
this.nil_iter = nil_iter;
this.meta25642 = meta25642;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t25641.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t25641.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t25641.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t25641.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_25643){
var self__ = this;
var _25643__$1 = this;
return self__.meta25642;
});

cljs.core.t25641.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_25643,meta25642__$1){
var self__ = this;
var _25643__$1 = this;
return (new cljs.core.t25641(self__.nil_iter,meta25642__$1));
});

cljs.core.t25641.cljs$lang$type = true;

cljs.core.t25641.cljs$lang$ctorStr = "cljs.core/t25641";

cljs.core.t25641.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/t25641");
});

cljs.core.__GT_t25641 = (function __GT_t25641(nil_iter__$1,meta25642){
return (new cljs.core.t25641(nil_iter__$1,meta25642));
});

}

return (new cljs.core.t25641(nil_iter,cljs.core.PersistentArrayMap.EMPTY));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__15502__auto__ = !((lt.stepper == null));
if(and__15502__auto__){
return self__.iter.hasNext();
} else {
return and__15502__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__25644 = lt;
var G__25645 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__25644,G__25645) : self__.xform.call(null,G__25644,G__25645));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__25646 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__25646) : self__.xform.call(null,G__25646));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__25648 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__25648) : xform.call(null,G__25648));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__25650 = cljs.core.next(iters__$1);
iters__$1 = G__25650;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__16401__auto___25651 = self__.iters.length;
var i_25652 = (0);
while(true){
if((i_25652 < n__16401__auto___25651)){
(self__.nexts[i_25652] = (self__.iters[i_25652]).next());

var G__25653 = (i_25652 + (1));
i_25652 = G__25653;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__15502__auto__ = !((lt.stepper == null));
if(and__15502__auto__){
return this$.hasNext();
} else {
return and__15502__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__25649 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__25649) : self__.xform.call(null,G__25649));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__25658 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__25658) : xform.call(null,G__25658));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16492__auto__ = this;
return cljs.core.es6_iterator(this__16492__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__25659_25663 = cljs.core.seq(colls);
var chunk__25660_25664 = null;
var count__25661_25665 = (0);
var i__25662_25666 = (0);
while(true){
if((i__25662_25666 < count__25661_25665)){
var coll_25667 = chunk__25660_25664.cljs$core$IIndexed$_nth$arity$2(null,i__25662_25666);
iters.push(cljs.core.iter(coll_25667));

var G__25668 = seq__25659_25663;
var G__25669 = chunk__25660_25664;
var G__25670 = count__25661_25665;
var G__25671 = (i__25662_25666 + (1));
seq__25659_25663 = G__25668;
chunk__25660_25664 = G__25669;
count__25661_25665 = G__25670;
i__25662_25666 = G__25671;
continue;
} else {
var temp__4126__auto___25672 = cljs.core.seq(seq__25659_25663);
if(temp__4126__auto___25672){
var seq__25659_25673__$1 = temp__4126__auto___25672;
if(cljs.core.chunked_seq_QMARK_(seq__25659_25673__$1)){
var c__16301__auto___25674 = cljs.core.chunk_first(seq__25659_25673__$1);
var G__25675 = cljs.core.chunk_rest(seq__25659_25673__$1);
var G__25676 = c__16301__auto___25674;
var G__25677 = cljs.core.count(c__16301__auto___25674);
var G__25678 = (0);
seq__25659_25663 = G__25675;
chunk__25660_25664 = G__25676;
count__25661_25665 = G__25677;
i__25662_25666 = G__25678;
continue;
} else {
var coll_25679 = cljs.core.first(seq__25659_25673__$1);
iters.push(cljs.core.iter(coll_25679));

var G__25680 = cljs.core.next(seq__25659_25673__$1);
var G__25681 = null;
var G__25682 = (0);
var G__25683 = (0);
seq__25659_25663 = G__25680;
chunk__25660_25664 = G__25681;
count__25661_25665 = G__25682;
i__25662_25666 = G__25683;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__15514__auto__ = cljs.core.seq(coll);
if(or__15514__auto__){
return or__15514__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__25684__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__25684 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__25685__i = 0, G__25685__a = new Array(arguments.length -  2);
while (G__25685__i < G__25685__a.length) {G__25685__a[G__25685__i] = arguments[G__25685__i + 2]; ++G__25685__i;}
  colls = new cljs.core.IndexedSeq(G__25685__a,0);
} 
return G__25684__delegate.call(this,xform,coll,colls);};
G__25684.cljs$lang$maxFixedArity = 2;
G__25684.cljs$lang$applyTo = (function (arglist__25686){
var xform = cljs.core.first(arglist__25686);
arglist__25686 = cljs.core.next(arglist__25686);
var coll = cljs.core.first(arglist__25686);
var colls = cljs.core.rest(arglist__25686);
return G__25684__delegate(xform,coll,colls);
});
G__25684.cljs$core$IFn$_invoke$arity$variadic = G__25684__delegate;
return G__25684;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__25687 = null;
if (arguments.length > 2) {
var G__25688__i = 0, G__25688__a = new Array(arguments.length -  2);
while (G__25688__i < G__25688__a.length) {G__25688__a[G__25688__i] = arguments[G__25688__i + 2]; ++G__25688__i;}
G__25687 = new cljs.core.IndexedSeq(G__25688__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__25687);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__25690 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__25690) : pred.call(null,G__25690));
})())){
var G__25691 = pred;
var G__25692 = cljs.core.next(coll);
pred = G__25691;
coll = G__25692;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__15514__auto__ = (function (){var G__25696 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__25696) : pred.call(null,G__25696));
})();
if(cljs.core.truth_(or__15514__auto__)){
return or__15514__auto__;
} else {
var G__25697 = pred;
var G__25698 = cljs.core.next(coll);
pred = G__25697;
coll = G__25698;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__25705 = null;
var G__25705__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__25705__1 = (function (x){
return cljs.core.not((function (){var G__25702 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25702) : f.call(null,G__25702));
})());
});
var G__25705__2 = (function (x,y){
return cljs.core.not((function (){var G__25703 = x;
var G__25704 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25703,G__25704) : f.call(null,G__25703,G__25704));
})());
});
var G__25705__3 = (function() { 
var G__25706__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__25706 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__25707__i = 0, G__25707__a = new Array(arguments.length -  2);
while (G__25707__i < G__25707__a.length) {G__25707__a[G__25707__i] = arguments[G__25707__i + 2]; ++G__25707__i;}
  zs = new cljs.core.IndexedSeq(G__25707__a,0);
} 
return G__25706__delegate.call(this,x,y,zs);};
G__25706.cljs$lang$maxFixedArity = 2;
G__25706.cljs$lang$applyTo = (function (arglist__25708){
var x = cljs.core.first(arglist__25708);
arglist__25708 = cljs.core.next(arglist__25708);
var y = cljs.core.first(arglist__25708);
var zs = cljs.core.rest(arglist__25708);
return G__25706__delegate(x,y,zs);
});
G__25706.cljs$core$IFn$_invoke$arity$variadic = G__25706__delegate;
return G__25706;
})()
;
G__25705 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__25705__0.call(this);
case 1:
return G__25705__1.call(this,x);
case 2:
return G__25705__2.call(this,x,y);
default:
var G__25709 = null;
if (arguments.length > 2) {
var G__25710__i = 0, G__25710__a = new Array(arguments.length -  2);
while (G__25710__i < G__25710__a.length) {G__25710__a[G__25710__i] = arguments[G__25710__i + 2]; ++G__25710__i;}
G__25709 = new cljs.core.IndexedSeq(G__25710__a,0);
}
return G__25705__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25709);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25705.cljs$lang$maxFixedArity = 2;
G__25705.cljs$lang$applyTo = G__25705__3.cljs$lang$applyTo;
G__25705.cljs$core$IFn$_invoke$arity$0 = G__25705__0;
G__25705.cljs$core$IFn$_invoke$arity$1 = G__25705__1;
G__25705.cljs$core$IFn$_invoke$arity$2 = G__25705__2;
G__25705.cljs$core$IFn$_invoke$arity$variadic = G__25705__3.cljs$core$IFn$_invoke$arity$variadic;
return G__25705;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__25711__delegate = function (args){
return x;
};
var G__25711 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__25712__i = 0, G__25712__a = new Array(arguments.length -  0);
while (G__25712__i < G__25712__a.length) {G__25712__a[G__25712__i] = arguments[G__25712__i + 0]; ++G__25712__i;}
  args = new cljs.core.IndexedSeq(G__25712__a,0);
} 
return G__25711__delegate.call(this,args);};
G__25711.cljs$lang$maxFixedArity = 0;
G__25711.cljs$lang$applyTo = (function (arglist__25713){
var args = cljs.core.seq(arglist__25713);
return G__25711__delegate(args);
});
G__25711.cljs$core$IFn$_invoke$arity$variadic = G__25711__delegate;
return G__25711;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__25768 = null;
var G__25768__0 = (function (){
var G__25741 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25741) : f.call(null,G__25741));
});
var G__25768__1 = (function (x){
var G__25742 = (function (){var G__25743 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__25743) : g.call(null,G__25743));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25742) : f.call(null,G__25742));
});
var G__25768__2 = (function (x,y){
var G__25744 = (function (){var G__25745 = x;
var G__25746 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__25745,G__25746) : g.call(null,G__25745,G__25746));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25744) : f.call(null,G__25744));
});
var G__25768__3 = (function (x,y,z){
var G__25747 = (function (){var G__25748 = x;
var G__25749 = y;
var G__25750 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__25748,G__25749,G__25750) : g.call(null,G__25748,G__25749,G__25750));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25747) : f.call(null,G__25747));
});
var G__25768__4 = (function() { 
var G__25769__delegate = function (x,y,z,args){
var G__25751 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25751) : f.call(null,G__25751));
};
var G__25769 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25770__i = 0, G__25770__a = new Array(arguments.length -  3);
while (G__25770__i < G__25770__a.length) {G__25770__a[G__25770__i] = arguments[G__25770__i + 3]; ++G__25770__i;}
  args = new cljs.core.IndexedSeq(G__25770__a,0);
} 
return G__25769__delegate.call(this,x,y,z,args);};
G__25769.cljs$lang$maxFixedArity = 3;
G__25769.cljs$lang$applyTo = (function (arglist__25771){
var x = cljs.core.first(arglist__25771);
arglist__25771 = cljs.core.next(arglist__25771);
var y = cljs.core.first(arglist__25771);
arglist__25771 = cljs.core.next(arglist__25771);
var z = cljs.core.first(arglist__25771);
var args = cljs.core.rest(arglist__25771);
return G__25769__delegate(x,y,z,args);
});
G__25769.cljs$core$IFn$_invoke$arity$variadic = G__25769__delegate;
return G__25769;
})()
;
G__25768 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__25768__0.call(this);
case 1:
return G__25768__1.call(this,x);
case 2:
return G__25768__2.call(this,x,y);
case 3:
return G__25768__3.call(this,x,y,z);
default:
var G__25772 = null;
if (arguments.length > 3) {
var G__25773__i = 0, G__25773__a = new Array(arguments.length -  3);
while (G__25773__i < G__25773__a.length) {G__25773__a[G__25773__i] = arguments[G__25773__i + 3]; ++G__25773__i;}
G__25772 = new cljs.core.IndexedSeq(G__25773__a,0);
}
return G__25768__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25772);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25768.cljs$lang$maxFixedArity = 3;
G__25768.cljs$lang$applyTo = G__25768__4.cljs$lang$applyTo;
G__25768.cljs$core$IFn$_invoke$arity$0 = G__25768__0;
G__25768.cljs$core$IFn$_invoke$arity$1 = G__25768__1;
G__25768.cljs$core$IFn$_invoke$arity$2 = G__25768__2;
G__25768.cljs$core$IFn$_invoke$arity$3 = G__25768__3;
G__25768.cljs$core$IFn$_invoke$arity$variadic = G__25768__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25768;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__25774 = null;
var G__25774__0 = (function (){
var G__25752 = (function (){var G__25753 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__25753) : g.call(null,G__25753));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25752) : f.call(null,G__25752));
});
var G__25774__1 = (function (x){
var G__25754 = (function (){var G__25755 = (function (){var G__25756 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__25756) : h.call(null,G__25756));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__25755) : g.call(null,G__25755));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25754) : f.call(null,G__25754));
});
var G__25774__2 = (function (x,y){
var G__25757 = (function (){var G__25758 = (function (){var G__25759 = x;
var G__25760 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__25759,G__25760) : h.call(null,G__25759,G__25760));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__25758) : g.call(null,G__25758));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25757) : f.call(null,G__25757));
});
var G__25774__3 = (function (x,y,z){
var G__25761 = (function (){var G__25762 = (function (){var G__25763 = x;
var G__25764 = y;
var G__25765 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__25763,G__25764,G__25765) : h.call(null,G__25763,G__25764,G__25765));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__25762) : g.call(null,G__25762));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25761) : f.call(null,G__25761));
});
var G__25774__4 = (function() { 
var G__25775__delegate = function (x,y,z,args){
var G__25766 = (function (){var G__25767 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__25767) : g.call(null,G__25767));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25766) : f.call(null,G__25766));
};
var G__25775 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25776__i = 0, G__25776__a = new Array(arguments.length -  3);
while (G__25776__i < G__25776__a.length) {G__25776__a[G__25776__i] = arguments[G__25776__i + 3]; ++G__25776__i;}
  args = new cljs.core.IndexedSeq(G__25776__a,0);
} 
return G__25775__delegate.call(this,x,y,z,args);};
G__25775.cljs$lang$maxFixedArity = 3;
G__25775.cljs$lang$applyTo = (function (arglist__25777){
var x = cljs.core.first(arglist__25777);
arglist__25777 = cljs.core.next(arglist__25777);
var y = cljs.core.first(arglist__25777);
arglist__25777 = cljs.core.next(arglist__25777);
var z = cljs.core.first(arglist__25777);
var args = cljs.core.rest(arglist__25777);
return G__25775__delegate(x,y,z,args);
});
G__25775.cljs$core$IFn$_invoke$arity$variadic = G__25775__delegate;
return G__25775;
})()
;
G__25774 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__25774__0.call(this);
case 1:
return G__25774__1.call(this,x);
case 2:
return G__25774__2.call(this,x,y);
case 3:
return G__25774__3.call(this,x,y,z);
default:
var G__25778 = null;
if (arguments.length > 3) {
var G__25779__i = 0, G__25779__a = new Array(arguments.length -  3);
while (G__25779__i < G__25779__a.length) {G__25779__a[G__25779__i] = arguments[G__25779__i + 3]; ++G__25779__i;}
G__25778 = new cljs.core.IndexedSeq(G__25779__a,0);
}
return G__25774__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25778);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25774.cljs$lang$maxFixedArity = 3;
G__25774.cljs$lang$applyTo = G__25774__4.cljs$lang$applyTo;
G__25774.cljs$core$IFn$_invoke$arity$0 = G__25774__0;
G__25774.cljs$core$IFn$_invoke$arity$1 = G__25774__1;
G__25774.cljs$core$IFn$_invoke$arity$2 = G__25774__2;
G__25774.cljs$core$IFn$_invoke$arity$3 = G__25774__3;
G__25774.cljs$core$IFn$_invoke$arity$variadic = G__25774__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25774;
})()
});
var comp__4 = (function() { 
var G__25780__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__25781__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__25782 = cljs.core.first(fs__$2).call(null,ret);
var G__25783 = cljs.core.next(fs__$2);
ret = G__25782;
fs__$2 = G__25783;
continue;
} else {
return ret;
}
break;
}
};
var G__25781 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__25784__i = 0, G__25784__a = new Array(arguments.length -  0);
while (G__25784__i < G__25784__a.length) {G__25784__a[G__25784__i] = arguments[G__25784__i + 0]; ++G__25784__i;}
  args = new cljs.core.IndexedSeq(G__25784__a,0);
} 
return G__25781__delegate.call(this,args);};
G__25781.cljs$lang$maxFixedArity = 0;
G__25781.cljs$lang$applyTo = (function (arglist__25785){
var args = cljs.core.seq(arglist__25785);
return G__25781__delegate(args);
});
G__25781.cljs$core$IFn$_invoke$arity$variadic = G__25781__delegate;
return G__25781;
})()
;
;})(fs__$1))
};
var G__25780 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__25786__i = 0, G__25786__a = new Array(arguments.length -  3);
while (G__25786__i < G__25786__a.length) {G__25786__a[G__25786__i] = arguments[G__25786__i + 3]; ++G__25786__i;}
  fs = new cljs.core.IndexedSeq(G__25786__a,0);
} 
return G__25780__delegate.call(this,f1,f2,f3,fs);};
G__25780.cljs$lang$maxFixedArity = 3;
G__25780.cljs$lang$applyTo = (function (arglist__25787){
var f1 = cljs.core.first(arglist__25787);
arglist__25787 = cljs.core.next(arglist__25787);
var f2 = cljs.core.first(arglist__25787);
arglist__25787 = cljs.core.next(arglist__25787);
var f3 = cljs.core.first(arglist__25787);
var fs = cljs.core.rest(arglist__25787);
return G__25780__delegate(f1,f2,f3,fs);
});
G__25780.cljs$core$IFn$_invoke$arity$variadic = G__25780__delegate;
return G__25780;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__25788 = null;
if (arguments.length > 3) {
var G__25789__i = 0, G__25789__a = new Array(arguments.length -  3);
while (G__25789__i < G__25789__a.length) {G__25789__a[G__25789__i] = arguments[G__25789__i + 3]; ++G__25789__i;}
G__25788 = new cljs.core.IndexedSeq(G__25789__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__25788);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__25874 = null;
var G__25874__0 = (function (){
var G__25832 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25832) : f.call(null,G__25832));
});
var G__25874__1 = (function (x){
var G__25833 = arg1;
var G__25834 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25833,G__25834) : f.call(null,G__25833,G__25834));
});
var G__25874__2 = (function (x,y){
var G__25835 = arg1;
var G__25836 = x;
var G__25837 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25835,G__25836,G__25837) : f.call(null,G__25835,G__25836,G__25837));
});
var G__25874__3 = (function (x,y,z){
var G__25838 = arg1;
var G__25839 = x;
var G__25840 = y;
var G__25841 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__25838,G__25839,G__25840,G__25841) : f.call(null,G__25838,G__25839,G__25840,G__25841));
});
var G__25874__4 = (function() { 
var G__25875__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__25875 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25876__i = 0, G__25876__a = new Array(arguments.length -  3);
while (G__25876__i < G__25876__a.length) {G__25876__a[G__25876__i] = arguments[G__25876__i + 3]; ++G__25876__i;}
  args = new cljs.core.IndexedSeq(G__25876__a,0);
} 
return G__25875__delegate.call(this,x,y,z,args);};
G__25875.cljs$lang$maxFixedArity = 3;
G__25875.cljs$lang$applyTo = (function (arglist__25877){
var x = cljs.core.first(arglist__25877);
arglist__25877 = cljs.core.next(arglist__25877);
var y = cljs.core.first(arglist__25877);
arglist__25877 = cljs.core.next(arglist__25877);
var z = cljs.core.first(arglist__25877);
var args = cljs.core.rest(arglist__25877);
return G__25875__delegate(x,y,z,args);
});
G__25875.cljs$core$IFn$_invoke$arity$variadic = G__25875__delegate;
return G__25875;
})()
;
G__25874 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__25874__0.call(this);
case 1:
return G__25874__1.call(this,x);
case 2:
return G__25874__2.call(this,x,y);
case 3:
return G__25874__3.call(this,x,y,z);
default:
var G__25878 = null;
if (arguments.length > 3) {
var G__25879__i = 0, G__25879__a = new Array(arguments.length -  3);
while (G__25879__i < G__25879__a.length) {G__25879__a[G__25879__i] = arguments[G__25879__i + 3]; ++G__25879__i;}
G__25878 = new cljs.core.IndexedSeq(G__25879__a,0);
}
return G__25874__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25878);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25874.cljs$lang$maxFixedArity = 3;
G__25874.cljs$lang$applyTo = G__25874__4.cljs$lang$applyTo;
G__25874.cljs$core$IFn$_invoke$arity$0 = G__25874__0;
G__25874.cljs$core$IFn$_invoke$arity$1 = G__25874__1;
G__25874.cljs$core$IFn$_invoke$arity$2 = G__25874__2;
G__25874.cljs$core$IFn$_invoke$arity$3 = G__25874__3;
G__25874.cljs$core$IFn$_invoke$arity$variadic = G__25874__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25874;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__25880 = null;
var G__25880__0 = (function (){
var G__25842 = arg1;
var G__25843 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25842,G__25843) : f.call(null,G__25842,G__25843));
});
var G__25880__1 = (function (x){
var G__25844 = arg1;
var G__25845 = arg2;
var G__25846 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25844,G__25845,G__25846) : f.call(null,G__25844,G__25845,G__25846));
});
var G__25880__2 = (function (x,y){
var G__25847 = arg1;
var G__25848 = arg2;
var G__25849 = x;
var G__25850 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__25847,G__25848,G__25849,G__25850) : f.call(null,G__25847,G__25848,G__25849,G__25850));
});
var G__25880__3 = (function (x,y,z){
var G__25851 = arg1;
var G__25852 = arg2;
var G__25853 = x;
var G__25854 = y;
var G__25855 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__25851,G__25852,G__25853,G__25854,G__25855) : f.call(null,G__25851,G__25852,G__25853,G__25854,G__25855));
});
var G__25880__4 = (function() { 
var G__25881__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__25881 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25882__i = 0, G__25882__a = new Array(arguments.length -  3);
while (G__25882__i < G__25882__a.length) {G__25882__a[G__25882__i] = arguments[G__25882__i + 3]; ++G__25882__i;}
  args = new cljs.core.IndexedSeq(G__25882__a,0);
} 
return G__25881__delegate.call(this,x,y,z,args);};
G__25881.cljs$lang$maxFixedArity = 3;
G__25881.cljs$lang$applyTo = (function (arglist__25883){
var x = cljs.core.first(arglist__25883);
arglist__25883 = cljs.core.next(arglist__25883);
var y = cljs.core.first(arglist__25883);
arglist__25883 = cljs.core.next(arglist__25883);
var z = cljs.core.first(arglist__25883);
var args = cljs.core.rest(arglist__25883);
return G__25881__delegate(x,y,z,args);
});
G__25881.cljs$core$IFn$_invoke$arity$variadic = G__25881__delegate;
return G__25881;
})()
;
G__25880 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__25880__0.call(this);
case 1:
return G__25880__1.call(this,x);
case 2:
return G__25880__2.call(this,x,y);
case 3:
return G__25880__3.call(this,x,y,z);
default:
var G__25884 = null;
if (arguments.length > 3) {
var G__25885__i = 0, G__25885__a = new Array(arguments.length -  3);
while (G__25885__i < G__25885__a.length) {G__25885__a[G__25885__i] = arguments[G__25885__i + 3]; ++G__25885__i;}
G__25884 = new cljs.core.IndexedSeq(G__25885__a,0);
}
return G__25880__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25884);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25880.cljs$lang$maxFixedArity = 3;
G__25880.cljs$lang$applyTo = G__25880__4.cljs$lang$applyTo;
G__25880.cljs$core$IFn$_invoke$arity$0 = G__25880__0;
G__25880.cljs$core$IFn$_invoke$arity$1 = G__25880__1;
G__25880.cljs$core$IFn$_invoke$arity$2 = G__25880__2;
G__25880.cljs$core$IFn$_invoke$arity$3 = G__25880__3;
G__25880.cljs$core$IFn$_invoke$arity$variadic = G__25880__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25880;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__25886 = null;
var G__25886__0 = (function (){
var G__25856 = arg1;
var G__25857 = arg2;
var G__25858 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25856,G__25857,G__25858) : f.call(null,G__25856,G__25857,G__25858));
});
var G__25886__1 = (function (x){
var G__25859 = arg1;
var G__25860 = arg2;
var G__25861 = arg3;
var G__25862 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__25859,G__25860,G__25861,G__25862) : f.call(null,G__25859,G__25860,G__25861,G__25862));
});
var G__25886__2 = (function (x,y){
var G__25863 = arg1;
var G__25864 = arg2;
var G__25865 = arg3;
var G__25866 = x;
var G__25867 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__25863,G__25864,G__25865,G__25866,G__25867) : f.call(null,G__25863,G__25864,G__25865,G__25866,G__25867));
});
var G__25886__3 = (function (x,y,z){
var G__25868 = arg1;
var G__25869 = arg2;
var G__25870 = arg3;
var G__25871 = x;
var G__25872 = y;
var G__25873 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__25868,G__25869,G__25870,G__25871,G__25872,G__25873) : f.call(null,G__25868,G__25869,G__25870,G__25871,G__25872,G__25873));
});
var G__25886__4 = (function() { 
var G__25887__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__25887 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25888__i = 0, G__25888__a = new Array(arguments.length -  3);
while (G__25888__i < G__25888__a.length) {G__25888__a[G__25888__i] = arguments[G__25888__i + 3]; ++G__25888__i;}
  args = new cljs.core.IndexedSeq(G__25888__a,0);
} 
return G__25887__delegate.call(this,x,y,z,args);};
G__25887.cljs$lang$maxFixedArity = 3;
G__25887.cljs$lang$applyTo = (function (arglist__25889){
var x = cljs.core.first(arglist__25889);
arglist__25889 = cljs.core.next(arglist__25889);
var y = cljs.core.first(arglist__25889);
arglist__25889 = cljs.core.next(arglist__25889);
var z = cljs.core.first(arglist__25889);
var args = cljs.core.rest(arglist__25889);
return G__25887__delegate(x,y,z,args);
});
G__25887.cljs$core$IFn$_invoke$arity$variadic = G__25887__delegate;
return G__25887;
})()
;
G__25886 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__25886__0.call(this);
case 1:
return G__25886__1.call(this,x);
case 2:
return G__25886__2.call(this,x,y);
case 3:
return G__25886__3.call(this,x,y,z);
default:
var G__25890 = null;
if (arguments.length > 3) {
var G__25891__i = 0, G__25891__a = new Array(arguments.length -  3);
while (G__25891__i < G__25891__a.length) {G__25891__a[G__25891__i] = arguments[G__25891__i + 3]; ++G__25891__i;}
G__25890 = new cljs.core.IndexedSeq(G__25891__a,0);
}
return G__25886__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25890);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25886.cljs$lang$maxFixedArity = 3;
G__25886.cljs$lang$applyTo = G__25886__4.cljs$lang$applyTo;
G__25886.cljs$core$IFn$_invoke$arity$0 = G__25886__0;
G__25886.cljs$core$IFn$_invoke$arity$1 = G__25886__1;
G__25886.cljs$core$IFn$_invoke$arity$2 = G__25886__2;
G__25886.cljs$core$IFn$_invoke$arity$3 = G__25886__3;
G__25886.cljs$core$IFn$_invoke$arity$variadic = G__25886__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25886;
})()
});
var partial__5 = (function() { 
var G__25892__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__25893__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__25893 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__25894__i = 0, G__25894__a = new Array(arguments.length -  0);
while (G__25894__i < G__25894__a.length) {G__25894__a[G__25894__i] = arguments[G__25894__i + 0]; ++G__25894__i;}
  args = new cljs.core.IndexedSeq(G__25894__a,0);
} 
return G__25893__delegate.call(this,args);};
G__25893.cljs$lang$maxFixedArity = 0;
G__25893.cljs$lang$applyTo = (function (arglist__25895){
var args = cljs.core.seq(arglist__25895);
return G__25893__delegate(args);
});
G__25893.cljs$core$IFn$_invoke$arity$variadic = G__25893__delegate;
return G__25893;
})()
;
};
var G__25892 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__25896__i = 0, G__25896__a = new Array(arguments.length -  4);
while (G__25896__i < G__25896__a.length) {G__25896__a[G__25896__i] = arguments[G__25896__i + 4]; ++G__25896__i;}
  more = new cljs.core.IndexedSeq(G__25896__a,0);
} 
return G__25892__delegate.call(this,f,arg1,arg2,arg3,more);};
G__25892.cljs$lang$maxFixedArity = 4;
G__25892.cljs$lang$applyTo = (function (arglist__25897){
var f = cljs.core.first(arglist__25897);
arglist__25897 = cljs.core.next(arglist__25897);
var arg1 = cljs.core.first(arglist__25897);
arglist__25897 = cljs.core.next(arglist__25897);
var arg2 = cljs.core.first(arglist__25897);
arglist__25897 = cljs.core.next(arglist__25897);
var arg3 = cljs.core.first(arglist__25897);
var more = cljs.core.rest(arglist__25897);
return G__25892__delegate(f,arg1,arg2,arg3,more);
});
G__25892.cljs$core$IFn$_invoke$arity$variadic = G__25892__delegate;
return G__25892;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__25898 = null;
if (arguments.length > 4) {
var G__25899__i = 0, G__25899__a = new Array(arguments.length -  4);
while (G__25899__i < G__25899__a.length) {G__25899__a[G__25899__i] = arguments[G__25899__i + 4]; ++G__25899__i;}
G__25898 = new cljs.core.IndexedSeq(G__25899__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__25898);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__25932 = null;
var G__25932__1 = (function (a){
var G__25916 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25916) : f.call(null,G__25916));
});
var G__25932__2 = (function (a,b){
var G__25917 = (((a == null))?x:a);
var G__25918 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25917,G__25918) : f.call(null,G__25917,G__25918));
});
var G__25932__3 = (function (a,b,c){
var G__25919 = (((a == null))?x:a);
var G__25920 = b;
var G__25921 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25919,G__25920,G__25921) : f.call(null,G__25919,G__25920,G__25921));
});
var G__25932__4 = (function() { 
var G__25933__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__25933 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__25934__i = 0, G__25934__a = new Array(arguments.length -  3);
while (G__25934__i < G__25934__a.length) {G__25934__a[G__25934__i] = arguments[G__25934__i + 3]; ++G__25934__i;}
  ds = new cljs.core.IndexedSeq(G__25934__a,0);
} 
return G__25933__delegate.call(this,a,b,c,ds);};
G__25933.cljs$lang$maxFixedArity = 3;
G__25933.cljs$lang$applyTo = (function (arglist__25935){
var a = cljs.core.first(arglist__25935);
arglist__25935 = cljs.core.next(arglist__25935);
var b = cljs.core.first(arglist__25935);
arglist__25935 = cljs.core.next(arglist__25935);
var c = cljs.core.first(arglist__25935);
var ds = cljs.core.rest(arglist__25935);
return G__25933__delegate(a,b,c,ds);
});
G__25933.cljs$core$IFn$_invoke$arity$variadic = G__25933__delegate;
return G__25933;
})()
;
G__25932 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__25932__1.call(this,a);
case 2:
return G__25932__2.call(this,a,b);
case 3:
return G__25932__3.call(this,a,b,c);
default:
var G__25936 = null;
if (arguments.length > 3) {
var G__25937__i = 0, G__25937__a = new Array(arguments.length -  3);
while (G__25937__i < G__25937__a.length) {G__25937__a[G__25937__i] = arguments[G__25937__i + 3]; ++G__25937__i;}
G__25936 = new cljs.core.IndexedSeq(G__25937__a,0);
}
return G__25932__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__25936);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25932.cljs$lang$maxFixedArity = 3;
G__25932.cljs$lang$applyTo = G__25932__4.cljs$lang$applyTo;
G__25932.cljs$core$IFn$_invoke$arity$1 = G__25932__1;
G__25932.cljs$core$IFn$_invoke$arity$2 = G__25932__2;
G__25932.cljs$core$IFn$_invoke$arity$3 = G__25932__3;
G__25932.cljs$core$IFn$_invoke$arity$variadic = G__25932__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25932;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__25938 = null;
var G__25938__2 = (function (a,b){
var G__25922 = (((a == null))?x:a);
var G__25923 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25922,G__25923) : f.call(null,G__25922,G__25923));
});
var G__25938__3 = (function (a,b,c){
var G__25924 = (((a == null))?x:a);
var G__25925 = (((b == null))?y:b);
var G__25926 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25924,G__25925,G__25926) : f.call(null,G__25924,G__25925,G__25926));
});
var G__25938__4 = (function() { 
var G__25939__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__25939 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__25940__i = 0, G__25940__a = new Array(arguments.length -  3);
while (G__25940__i < G__25940__a.length) {G__25940__a[G__25940__i] = arguments[G__25940__i + 3]; ++G__25940__i;}
  ds = new cljs.core.IndexedSeq(G__25940__a,0);
} 
return G__25939__delegate.call(this,a,b,c,ds);};
G__25939.cljs$lang$maxFixedArity = 3;
G__25939.cljs$lang$applyTo = (function (arglist__25941){
var a = cljs.core.first(arglist__25941);
arglist__25941 = cljs.core.next(arglist__25941);
var b = cljs.core.first(arglist__25941);
arglist__25941 = cljs.core.next(arglist__25941);
var c = cljs.core.first(arglist__25941);
var ds = cljs.core.rest(arglist__25941);
return G__25939__delegate(a,b,c,ds);
});
G__25939.cljs$core$IFn$_invoke$arity$variadic = G__25939__delegate;
return G__25939;
})()
;
G__25938 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__25938__2.call(this,a,b);
case 3:
return G__25938__3.call(this,a,b,c);
default:
var G__25942 = null;
if (arguments.length > 3) {
var G__25943__i = 0, G__25943__a = new Array(arguments.length -  3);
while (G__25943__i < G__25943__a.length) {G__25943__a[G__25943__i] = arguments[G__25943__i + 3]; ++G__25943__i;}
G__25942 = new cljs.core.IndexedSeq(G__25943__a,0);
}
return G__25938__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__25942);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25938.cljs$lang$maxFixedArity = 3;
G__25938.cljs$lang$applyTo = G__25938__4.cljs$lang$applyTo;
G__25938.cljs$core$IFn$_invoke$arity$2 = G__25938__2;
G__25938.cljs$core$IFn$_invoke$arity$3 = G__25938__3;
G__25938.cljs$core$IFn$_invoke$arity$variadic = G__25938__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25938;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__25944 = null;
var G__25944__2 = (function (a,b){
var G__25927 = (((a == null))?x:a);
var G__25928 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25927,G__25928) : f.call(null,G__25927,G__25928));
});
var G__25944__3 = (function (a,b,c){
var G__25929 = (((a == null))?x:a);
var G__25930 = (((b == null))?y:b);
var G__25931 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25929,G__25930,G__25931) : f.call(null,G__25929,G__25930,G__25931));
});
var G__25944__4 = (function() { 
var G__25945__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__25945 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__25946__i = 0, G__25946__a = new Array(arguments.length -  3);
while (G__25946__i < G__25946__a.length) {G__25946__a[G__25946__i] = arguments[G__25946__i + 3]; ++G__25946__i;}
  ds = new cljs.core.IndexedSeq(G__25946__a,0);
} 
return G__25945__delegate.call(this,a,b,c,ds);};
G__25945.cljs$lang$maxFixedArity = 3;
G__25945.cljs$lang$applyTo = (function (arglist__25947){
var a = cljs.core.first(arglist__25947);
arglist__25947 = cljs.core.next(arglist__25947);
var b = cljs.core.first(arglist__25947);
arglist__25947 = cljs.core.next(arglist__25947);
var c = cljs.core.first(arglist__25947);
var ds = cljs.core.rest(arglist__25947);
return G__25945__delegate(a,b,c,ds);
});
G__25945.cljs$core$IFn$_invoke$arity$variadic = G__25945__delegate;
return G__25945;
})()
;
G__25944 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__25944__2.call(this,a,b);
case 3:
return G__25944__3.call(this,a,b,c);
default:
var G__25948 = null;
if (arguments.length > 3) {
var G__25949__i = 0, G__25949__a = new Array(arguments.length -  3);
while (G__25949__i < G__25949__a.length) {G__25949__a[G__25949__i] = arguments[G__25949__i + 3]; ++G__25949__i;}
G__25948 = new cljs.core.IndexedSeq(G__25949__a,0);
}
return G__25944__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__25948);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25944.cljs$lang$maxFixedArity = 3;
G__25944.cljs$lang$applyTo = G__25944__4.cljs$lang$applyTo;
G__25944.cljs$core$IFn$_invoke$arity$2 = G__25944__2;
G__25944.cljs$core$IFn$_invoke$arity$3 = G__25944__3;
G__25944.cljs$core$IFn$_invoke$arity$variadic = G__25944__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25944;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__25980 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__25980) : cljs.core.volatile_BANG_.call(null,G__25980));
})();
return ((function (i){
return (function() {
var G__26010 = null;
var G__26010__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__26010__1 = (function (result){
var G__25981 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__25981) : rf.call(null,G__25981));
});
var G__26010__2 = (function (result,input){
var G__25982 = result;
var G__25983 = (function (){var G__25984 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__25985 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25984,G__25985) : f.call(null,G__25984,G__25985));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25982,G__25983) : rf.call(null,G__25982,G__25983));
});
G__26010 = function(result,input){
switch(arguments.length){
case 0:
return G__26010__0.call(this);
case 1:
return G__26010__1.call(this,result);
case 2:
return G__26010__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26010.cljs$core$IFn$_invoke$arity$0 = G__26010__0;
G__26010.cljs$core$IFn$_invoke$arity$1 = G__26010__1;
G__26010.cljs$core$IFn$_invoke$arity$2 = G__26010__2;
return G__26010;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__16401__auto___26011 = size;
var i_26012 = (0);
while(true){
if((i_26012 < n__16401__auto___26011)){
cljs.core.chunk_append(b,(function (){var G__26006 = (idx + i_26012);
var G__26007 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_26012);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26006,G__26007) : f.call(null,G__26006,G__26007));
})());

var G__26013 = (i_26012 + (1));
i_26012 = G__26013;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__26008 = idx;
var G__26009 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26008,G__26009) : f.call(null,G__26008,G__26009));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__26032 = null;
var G__26032__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__26032__1 = (function (result){
var G__26026 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__26026) : rf.call(null,G__26026));
});
var G__26032__2 = (function (result,input){
var v = (function (){var G__26027 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26027) : f.call(null,G__26027));
})();
if((v == null)){
return result;
} else {
var G__26028 = result;
var G__26029 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26028,G__26029) : rf.call(null,G__26028,G__26029));
}
});
G__26032 = function(result,input){
switch(arguments.length){
case 0:
return G__26032__0.call(this);
case 1:
return G__26032__1.call(this,result);
case 2:
return G__26032__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26032.cljs$core$IFn$_invoke$arity$0 = G__26032__0;
G__26032.cljs$core$IFn$_invoke$arity$1 = G__26032__1;
G__26032.cljs$core$IFn$_invoke$arity$2 = G__26032__2;
return G__26032;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__16401__auto___26033 = size;
var i_26034 = (0);
while(true){
if((i_26034 < n__16401__auto___26033)){
var x_26035 = (function (){var G__26030 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_26034);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26030) : f.call(null,G__26030));
})();
if((x_26035 == null)){
} else {
cljs.core.chunk_append(b,x_26035);
}

var G__26036 = (i_26034 + (1));
i_26034 = G__26036;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__26031 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26031) : f.call(null,G__26031));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__26037 = this$__$1;
return goog.getUid(G__26037);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__26038 = cljs.core.seq(self__.watches);
var chunk__26039 = null;
var count__26040 = (0);
var i__26041 = (0);
while(true){
if((i__26041 < count__26040)){
var vec__26042 = chunk__26039.cljs$core$IIndexed$_nth$arity$2(null,i__26041);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26042,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26042,(1),null);
var G__26043_26052 = key;
var G__26044_26053 = this$__$1;
var G__26045_26054 = oldval;
var G__26046_26055 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__26043_26052,G__26044_26053,G__26045_26054,G__26046_26055) : f.call(null,G__26043_26052,G__26044_26053,G__26045_26054,G__26046_26055));

var G__26056 = seq__26038;
var G__26057 = chunk__26039;
var G__26058 = count__26040;
var G__26059 = (i__26041 + (1));
seq__26038 = G__26056;
chunk__26039 = G__26057;
count__26040 = G__26058;
i__26041 = G__26059;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__26038);
if(temp__4126__auto__){
var seq__26038__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__26038__$1)){
var c__16301__auto__ = cljs.core.chunk_first(seq__26038__$1);
var G__26060 = cljs.core.chunk_rest(seq__26038__$1);
var G__26061 = c__16301__auto__;
var G__26062 = cljs.core.count(c__16301__auto__);
var G__26063 = (0);
seq__26038 = G__26060;
chunk__26039 = G__26061;
count__26040 = G__26062;
i__26041 = G__26063;
continue;
} else {
var vec__26047 = cljs.core.first(seq__26038__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26047,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26047,(1),null);
var G__26048_26064 = key;
var G__26049_26065 = this$__$1;
var G__26050_26066 = oldval;
var G__26051_26067 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__26048_26064,G__26049_26065,G__26050_26066,G__26051_26067) : f.call(null,G__26048_26064,G__26049_26065,G__26050_26066,G__26051_26067));

var G__26068 = cljs.core.next(seq__26038__$1);
var G__26069 = null;
var G__26070 = (0);
var G__26071 = (0);
seq__26038 = G__26068;
chunk__26039 = G__26069;
count__26040 = G__26070;
i__26041 = G__26071;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__26075__delegate = function (x,p__26072){
var map__26074 = p__26072;
var map__26074__$1 = ((cljs.core.seq_QMARK_(map__26074))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__26074):map__26074);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__26074__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__26074__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__26075 = function (x,var_args){
var p__26072 = null;
if (arguments.length > 1) {
var G__26076__i = 0, G__26076__a = new Array(arguments.length -  1);
while (G__26076__i < G__26076__a.length) {G__26076__a[G__26076__i] = arguments[G__26076__i + 1]; ++G__26076__i;}
  p__26072 = new cljs.core.IndexedSeq(G__26076__a,0);
} 
return G__26075__delegate.call(this,x,p__26072);};
G__26075.cljs$lang$maxFixedArity = 1;
G__26075.cljs$lang$applyTo = (function (arglist__26077){
var x = cljs.core.first(arglist__26077);
var p__26072 = cljs.core.rest(arglist__26077);
return G__26075__delegate(x,p__26072);
});
G__26075.cljs$core$IFn$_invoke$arity$variadic = G__26075__delegate;
return G__26075;
})()
;
atom = function(x,var_args){
var p__26072 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__26078 = null;
if (arguments.length > 1) {
var G__26079__i = 0, G__26079__a = new Array(arguments.length -  1);
while (G__26079__i < G__26079__a.length) {G__26079__a[G__26079__i] = arguments[G__26079__i + 1]; ++G__26079__i;}
G__26078 = new cljs.core.IndexedSeq(G__26079__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__26078);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__26082 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__26082) : validate.call(null,G__26082));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__26083 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__26083) : cljs.core.pr_str.call(null,G__26083));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__26090 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26090) : f.call(null,G__26090));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__26091 = a.state;
var G__26092 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26091,G__26092) : f.call(null,G__26091,G__26092));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__26093 = a.state;
var G__26094 = x;
var G__26095 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26093,G__26094,G__26095) : f.call(null,G__26093,G__26094,G__26095));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__26096__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__26096 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__26097__i = 0, G__26097__a = new Array(arguments.length -  4);
while (G__26097__i < G__26097__a.length) {G__26097__a[G__26097__i] = arguments[G__26097__i + 4]; ++G__26097__i;}
  more = new cljs.core.IndexedSeq(G__26097__a,0);
} 
return G__26096__delegate.call(this,a,f,x,y,more);};
G__26096.cljs$lang$maxFixedArity = 4;
G__26096.cljs$lang$applyTo = (function (arglist__26098){
var a = cljs.core.first(arglist__26098);
arglist__26098 = cljs.core.next(arglist__26098);
var f = cljs.core.first(arglist__26098);
arglist__26098 = cljs.core.next(arglist__26098);
var x = cljs.core.first(arglist__26098);
arglist__26098 = cljs.core.next(arglist__26098);
var y = cljs.core.first(arglist__26098);
var more = cljs.core.rest(arglist__26098);
return G__26096__delegate(a,f,x,y,more);
});
G__26096.cljs$core$IFn$_invoke$arity$variadic = G__26096__delegate;
return G__26096;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__26099 = null;
if (arguments.length > 4) {
var G__26100__i = 0, G__26100__a = new Array(arguments.length -  4);
while (G__26100__i < G__26100__a.length) {G__26100__a[G__26100__i] = arguments[G__26100__i + 4]; ++G__26100__i;}
G__26099 = new cljs.core.IndexedSeq(G__26100__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__26099);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__26167 = null;
var G__26167__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__26167__1 = (function (result){
var G__26134 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__26134) : rf.call(null,G__26134));
});
var G__26167__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__26135 = i;
var G__26136 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26135,G__26136) : f.call(null,G__26135,G__26136));
})();
if((v == null)){
return result;
} else {
var G__26137 = result;
var G__26138 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26137,G__26138) : rf.call(null,G__26137,G__26138));
}
});
G__26167 = function(result,input){
switch(arguments.length){
case 0:
return G__26167__0.call(this);
case 1:
return G__26167__1.call(this,result);
case 2:
return G__26167__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26167.cljs$core$IFn$_invoke$arity$0 = G__26167__0;
G__26167.cljs$core$IFn$_invoke$arity$1 = G__26167__1;
G__26167.cljs$core$IFn$_invoke$arity$2 = G__26167__2;
return G__26167;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__16401__auto___26168 = size;
var i_26169 = (0);
while(true){
if((i_26169 < n__16401__auto___26168)){
var x_26170 = (function (){var G__26163 = (idx + i_26169);
var G__26164 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_26169);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26163,G__26164) : f.call(null,G__26163,G__26164));
})();
if((x_26170 == null)){
} else {
cljs.core.chunk_append(b,x_26170);
}

var G__26171 = (i_26169 + (1));
i_26169 = G__26171;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__26165 = idx;
var G__26166 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26165,G__26166) : f.call(null,G__26165,G__26166));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__26385 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26385) : p.call(null,G__26385));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__15502__auto__ = (function (){var G__26387 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26387) : p.call(null,G__26387));
})();
if(cljs.core.truth_(and__15502__auto__)){
var G__26388 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26388) : p.call(null,G__26388));
} else {
return and__15502__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__15502__auto__ = (function (){var G__26390 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26390) : p.call(null,G__26390));
})();
if(cljs.core.truth_(and__15502__auto__)){
var and__15502__auto____$1 = (function (){var G__26392 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26392) : p.call(null,G__26392));
})();
if(cljs.core.truth_(and__15502__auto____$1)){
var G__26393 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26393) : p.call(null,G__26393));
} else {
return and__15502__auto____$1;
}
} else {
return and__15502__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__26562__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__26562 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26563__i = 0, G__26563__a = new Array(arguments.length -  3);
while (G__26563__i < G__26563__a.length) {G__26563__a[G__26563__i] = arguments[G__26563__i + 3]; ++G__26563__i;}
  args = new cljs.core.IndexedSeq(G__26563__a,0);
} 
return G__26562__delegate.call(this,x,y,z,args);};
G__26562.cljs$lang$maxFixedArity = 3;
G__26562.cljs$lang$applyTo = (function (arglist__26564){
var x = cljs.core.first(arglist__26564);
arglist__26564 = cljs.core.next(arglist__26564);
var y = cljs.core.first(arglist__26564);
arglist__26564 = cljs.core.next(arglist__26564);
var z = cljs.core.first(arglist__26564);
var args = cljs.core.rest(arglist__26564);
return G__26562__delegate(x,y,z,args);
});
G__26562.cljs$core$IFn$_invoke$arity$variadic = G__26562__delegate;
return G__26562;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__26565 = null;
if (arguments.length > 3) {
var G__26566__i = 0, G__26566__a = new Array(arguments.length -  3);
while (G__26566__i < G__26566__a.length) {G__26566__a[G__26566__i] = arguments[G__26566__i + 3]; ++G__26566__i;}
G__26565 = new cljs.core.IndexedSeq(G__26566__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26565);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__15502__auto__ = (function (){var G__26425 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26425) : p1.call(null,G__26425));
})();
if(cljs.core.truth_(and__15502__auto__)){
var G__26426 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26426) : p2.call(null,G__26426));
} else {
return and__15502__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__15502__auto__ = (function (){var G__26428 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26428) : p1.call(null,G__26428));
})();
if(cljs.core.truth_(and__15502__auto__)){
var and__15502__auto____$1 = (function (){var G__26430 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26430) : p1.call(null,G__26430));
})();
if(cljs.core.truth_(and__15502__auto____$1)){
var and__15502__auto____$2 = (function (){var G__26432 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26432) : p2.call(null,G__26432));
})();
if(cljs.core.truth_(and__15502__auto____$2)){
var G__26433 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26433) : p2.call(null,G__26433));
} else {
return and__15502__auto____$2;
}
} else {
return and__15502__auto____$1;
}
} else {
return and__15502__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__15502__auto__ = (function (){var G__26435 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26435) : p1.call(null,G__26435));
})();
if(cljs.core.truth_(and__15502__auto__)){
var and__15502__auto____$1 = (function (){var G__26437 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26437) : p1.call(null,G__26437));
})();
if(cljs.core.truth_(and__15502__auto____$1)){
var and__15502__auto____$2 = (function (){var G__26439 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26439) : p1.call(null,G__26439));
})();
if(cljs.core.truth_(and__15502__auto____$2)){
var and__15502__auto____$3 = (function (){var G__26441 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26441) : p2.call(null,G__26441));
})();
if(cljs.core.truth_(and__15502__auto____$3)){
var and__15502__auto____$4 = (function (){var G__26443 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26443) : p2.call(null,G__26443));
})();
if(cljs.core.truth_(and__15502__auto____$4)){
var G__26444 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26444) : p2.call(null,G__26444));
} else {
return and__15502__auto____$4;
}
} else {
return and__15502__auto____$3;
}
} else {
return and__15502__auto____$2;
}
} else {
return and__15502__auto____$1;
}
} else {
return and__15502__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__26567__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__26172_SHARP_){
var and__15502__auto__ = (function (){var G__26449 = p1__26172_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26449) : p1.call(null,G__26449));
})();
if(cljs.core.truth_(and__15502__auto__)){
var G__26450 = p1__26172_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26450) : p2.call(null,G__26450));
} else {
return and__15502__auto__;
}
}),args)));
};
var G__26567 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26568__i = 0, G__26568__a = new Array(arguments.length -  3);
while (G__26568__i < G__26568__a.length) {G__26568__a[G__26568__i] = arguments[G__26568__i + 3]; ++G__26568__i;}
  args = new cljs.core.IndexedSeq(G__26568__a,0);
} 
return G__26567__delegate.call(this,x,y,z,args);};
G__26567.cljs$lang$maxFixedArity = 3;
G__26567.cljs$lang$applyTo = (function (arglist__26569){
var x = cljs.core.first(arglist__26569);
arglist__26569 = cljs.core.next(arglist__26569);
var y = cljs.core.first(arglist__26569);
arglist__26569 = cljs.core.next(arglist__26569);
var z = cljs.core.first(arglist__26569);
var args = cljs.core.rest(arglist__26569);
return G__26567__delegate(x,y,z,args);
});
G__26567.cljs$core$IFn$_invoke$arity$variadic = G__26567__delegate;
return G__26567;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__26570 = null;
if (arguments.length > 3) {
var G__26571__i = 0, G__26571__a = new Array(arguments.length -  3);
while (G__26571__i < G__26571__a.length) {G__26571__a[G__26571__i] = arguments[G__26571__i + 3]; ++G__26571__i;}
G__26570 = new cljs.core.IndexedSeq(G__26571__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26570);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__15502__auto__ = (function (){var G__26496 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26496) : p1.call(null,G__26496));
})();
if(cljs.core.truth_(and__15502__auto__)){
var and__15502__auto____$1 = (function (){var G__26498 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26498) : p2.call(null,G__26498));
})();
if(cljs.core.truth_(and__15502__auto____$1)){
var G__26499 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26499) : p3.call(null,G__26499));
} else {
return and__15502__auto____$1;
}
} else {
return and__15502__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__15502__auto__ = (function (){var G__26501 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26501) : p1.call(null,G__26501));
})();
if(cljs.core.truth_(and__15502__auto__)){
var and__15502__auto____$1 = (function (){var G__26503 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26503) : p2.call(null,G__26503));
})();
if(cljs.core.truth_(and__15502__auto____$1)){
var and__15502__auto____$2 = (function (){var G__26505 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26505) : p3.call(null,G__26505));
})();
if(cljs.core.truth_(and__15502__auto____$2)){
var and__15502__auto____$3 = (function (){var G__26507 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26507) : p1.call(null,G__26507));
})();
if(cljs.core.truth_(and__15502__auto____$3)){
var and__15502__auto____$4 = (function (){var G__26509 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26509) : p2.call(null,G__26509));
})();
if(cljs.core.truth_(and__15502__auto____$4)){
var G__26510 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26510) : p3.call(null,G__26510));
} else {
return and__15502__auto____$4;
}
} else {
return and__15502__auto____$3;
}
} else {
return and__15502__auto____$2;
}
} else {
return and__15502__auto____$1;
}
} else {
return and__15502__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__15502__auto__ = (function (){var G__26512 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26512) : p1.call(null,G__26512));
})();
if(cljs.core.truth_(and__15502__auto__)){
var and__15502__auto____$1 = (function (){var G__26514 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26514) : p2.call(null,G__26514));
})();
if(cljs.core.truth_(and__15502__auto____$1)){
var and__15502__auto____$2 = (function (){var G__26516 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26516) : p3.call(null,G__26516));
})();
if(cljs.core.truth_(and__15502__auto____$2)){
var and__15502__auto____$3 = (function (){var G__26518 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26518) : p1.call(null,G__26518));
})();
if(cljs.core.truth_(and__15502__auto____$3)){
var and__15502__auto____$4 = (function (){var G__26520 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26520) : p2.call(null,G__26520));
})();
if(cljs.core.truth_(and__15502__auto____$4)){
var and__15502__auto____$5 = (function (){var G__26522 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26522) : p3.call(null,G__26522));
})();
if(cljs.core.truth_(and__15502__auto____$5)){
var and__15502__auto____$6 = (function (){var G__26524 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26524) : p1.call(null,G__26524));
})();
if(cljs.core.truth_(and__15502__auto____$6)){
var and__15502__auto____$7 = (function (){var G__26526 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26526) : p2.call(null,G__26526));
})();
if(cljs.core.truth_(and__15502__auto____$7)){
var G__26527 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26527) : p3.call(null,G__26527));
} else {
return and__15502__auto____$7;
}
} else {
return and__15502__auto____$6;
}
} else {
return and__15502__auto____$5;
}
} else {
return and__15502__auto____$4;
}
} else {
return and__15502__auto____$3;
}
} else {
return and__15502__auto____$2;
}
} else {
return and__15502__auto____$1;
}
} else {
return and__15502__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__26572__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__26173_SHARP_){
var and__15502__auto__ = (function (){var G__26534 = p1__26173_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26534) : p1.call(null,G__26534));
})();
if(cljs.core.truth_(and__15502__auto__)){
var and__15502__auto____$1 = (function (){var G__26536 = p1__26173_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26536) : p2.call(null,G__26536));
})();
if(cljs.core.truth_(and__15502__auto____$1)){
var G__26537 = p1__26173_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26537) : p3.call(null,G__26537));
} else {
return and__15502__auto____$1;
}
} else {
return and__15502__auto__;
}
}),args)));
};
var G__26572 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26573__i = 0, G__26573__a = new Array(arguments.length -  3);
while (G__26573__i < G__26573__a.length) {G__26573__a[G__26573__i] = arguments[G__26573__i + 3]; ++G__26573__i;}
  args = new cljs.core.IndexedSeq(G__26573__a,0);
} 
return G__26572__delegate.call(this,x,y,z,args);};
G__26572.cljs$lang$maxFixedArity = 3;
G__26572.cljs$lang$applyTo = (function (arglist__26574){
var x = cljs.core.first(arglist__26574);
arglist__26574 = cljs.core.next(arglist__26574);
var y = cljs.core.first(arglist__26574);
arglist__26574 = cljs.core.next(arglist__26574);
var z = cljs.core.first(arglist__26574);
var args = cljs.core.rest(arglist__26574);
return G__26572__delegate(x,y,z,args);
});
G__26572.cljs$core$IFn$_invoke$arity$variadic = G__26572__delegate;
return G__26572;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__26575 = null;
if (arguments.length > 3) {
var G__26576__i = 0, G__26576__a = new Array(arguments.length -  3);
while (G__26576__i < G__26576__a.length) {G__26576__a[G__26576__i] = arguments[G__26576__i + 3]; ++G__26576__i;}
G__26575 = new cljs.core.IndexedSeq(G__26576__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26575);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__26577__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__26174_SHARP_){
var G__26553 = x;
return (p1__26174_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26174_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26553) : p1__26174_SHARP_.call(null,G__26553));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__26175_SHARP_){
var and__15502__auto__ = (function (){var G__26555 = x;
return (p1__26175_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26175_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26555) : p1__26175_SHARP_.call(null,G__26555));
})();
if(cljs.core.truth_(and__15502__auto__)){
var G__26556 = y;
return (p1__26175_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26175_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26556) : p1__26175_SHARP_.call(null,G__26556));
} else {
return and__15502__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__26176_SHARP_){
var and__15502__auto__ = (function (){var G__26558 = x;
return (p1__26176_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26176_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26558) : p1__26176_SHARP_.call(null,G__26558));
})();
if(cljs.core.truth_(and__15502__auto__)){
var and__15502__auto____$1 = (function (){var G__26560 = y;
return (p1__26176_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26176_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26560) : p1__26176_SHARP_.call(null,G__26560));
})();
if(cljs.core.truth_(and__15502__auto____$1)){
var G__26561 = z;
return (p1__26176_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26176_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26561) : p1__26176_SHARP_.call(null,G__26561));
} else {
return and__15502__auto____$1;
}
} else {
return and__15502__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__26578__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__26177_SHARP_){
return cljs.core.every_QMARK_(p1__26177_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__26578 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26579__i = 0, G__26579__a = new Array(arguments.length -  3);
while (G__26579__i < G__26579__a.length) {G__26579__a[G__26579__i] = arguments[G__26579__i + 3]; ++G__26579__i;}
  args = new cljs.core.IndexedSeq(G__26579__a,0);
} 
return G__26578__delegate.call(this,x,y,z,args);};
G__26578.cljs$lang$maxFixedArity = 3;
G__26578.cljs$lang$applyTo = (function (arglist__26580){
var x = cljs.core.first(arglist__26580);
arglist__26580 = cljs.core.next(arglist__26580);
var y = cljs.core.first(arglist__26580);
arglist__26580 = cljs.core.next(arglist__26580);
var z = cljs.core.first(arglist__26580);
var args = cljs.core.rest(arglist__26580);
return G__26578__delegate(x,y,z,args);
});
G__26578.cljs$core$IFn$_invoke$arity$variadic = G__26578__delegate;
return G__26578;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__26581 = null;
if (arguments.length > 3) {
var G__26582__i = 0, G__26582__a = new Array(arguments.length -  3);
while (G__26582__i < G__26582__a.length) {G__26582__a[G__26582__i] = arguments[G__26582__i + 3]; ++G__26582__i;}
G__26581 = new cljs.core.IndexedSeq(G__26582__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26581);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__26577 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__26583__i = 0, G__26583__a = new Array(arguments.length -  3);
while (G__26583__i < G__26583__a.length) {G__26583__a[G__26583__i] = arguments[G__26583__i + 3]; ++G__26583__i;}
  ps = new cljs.core.IndexedSeq(G__26583__a,0);
} 
return G__26577__delegate.call(this,p1,p2,p3,ps);};
G__26577.cljs$lang$maxFixedArity = 3;
G__26577.cljs$lang$applyTo = (function (arglist__26584){
var p1 = cljs.core.first(arglist__26584);
arglist__26584 = cljs.core.next(arglist__26584);
var p2 = cljs.core.first(arglist__26584);
arglist__26584 = cljs.core.next(arglist__26584);
var p3 = cljs.core.first(arglist__26584);
var ps = cljs.core.rest(arglist__26584);
return G__26577__delegate(p1,p2,p3,ps);
});
G__26577.cljs$core$IFn$_invoke$arity$variadic = G__26577__delegate;
return G__26577;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__26585 = null;
if (arguments.length > 3) {
var G__26586__i = 0, G__26586__a = new Array(arguments.length -  3);
while (G__26586__i < G__26586__a.length) {G__26586__a[G__26586__i] = arguments[G__26586__i + 3]; ++G__26586__i;}
G__26585 = new cljs.core.IndexedSeq(G__26586__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__26585);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__26792 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26792) : p.call(null,G__26792));
});
var sp1__2 = (function (x,y){
var or__15514__auto__ = (function (){var G__26794 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26794) : p.call(null,G__26794));
})();
if(cljs.core.truth_(or__15514__auto__)){
return or__15514__auto__;
} else {
var G__26795 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26795) : p.call(null,G__26795));
}
});
var sp1__3 = (function (x,y,z){
var or__15514__auto__ = (function (){var G__26797 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26797) : p.call(null,G__26797));
})();
if(cljs.core.truth_(or__15514__auto__)){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (function (){var G__26799 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26799) : p.call(null,G__26799));
})();
if(cljs.core.truth_(or__15514__auto____$1)){
return or__15514__auto____$1;
} else {
var G__26800 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26800) : p.call(null,G__26800));
}
}
});
var sp1__4 = (function() { 
var G__26961__delegate = function (x,y,z,args){
var or__15514__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__15514__auto__)){
return or__15514__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__26961 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26962__i = 0, G__26962__a = new Array(arguments.length -  3);
while (G__26962__i < G__26962__a.length) {G__26962__a[G__26962__i] = arguments[G__26962__i + 3]; ++G__26962__i;}
  args = new cljs.core.IndexedSeq(G__26962__a,0);
} 
return G__26961__delegate.call(this,x,y,z,args);};
G__26961.cljs$lang$maxFixedArity = 3;
G__26961.cljs$lang$applyTo = (function (arglist__26963){
var x = cljs.core.first(arglist__26963);
arglist__26963 = cljs.core.next(arglist__26963);
var y = cljs.core.first(arglist__26963);
arglist__26963 = cljs.core.next(arglist__26963);
var z = cljs.core.first(arglist__26963);
var args = cljs.core.rest(arglist__26963);
return G__26961__delegate(x,y,z,args);
});
G__26961.cljs$core$IFn$_invoke$arity$variadic = G__26961__delegate;
return G__26961;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__26964 = null;
if (arguments.length > 3) {
var G__26965__i = 0, G__26965__a = new Array(arguments.length -  3);
while (G__26965__i < G__26965__a.length) {G__26965__a[G__26965__i] = arguments[G__26965__i + 3]; ++G__26965__i;}
G__26964 = new cljs.core.IndexedSeq(G__26965__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26964);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__15514__auto__ = (function (){var G__26832 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26832) : p1.call(null,G__26832));
})();
if(cljs.core.truth_(or__15514__auto__)){
return or__15514__auto__;
} else {
var G__26833 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26833) : p2.call(null,G__26833));
}
});
var sp2__2 = (function (x,y){
var or__15514__auto__ = (function (){var G__26835 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26835) : p1.call(null,G__26835));
})();
if(cljs.core.truth_(or__15514__auto__)){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (function (){var G__26837 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26837) : p1.call(null,G__26837));
})();
if(cljs.core.truth_(or__15514__auto____$1)){
return or__15514__auto____$1;
} else {
var or__15514__auto____$2 = (function (){var G__26839 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26839) : p2.call(null,G__26839));
})();
if(cljs.core.truth_(or__15514__auto____$2)){
return or__15514__auto____$2;
} else {
var G__26840 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26840) : p2.call(null,G__26840));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__15514__auto__ = (function (){var G__26842 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26842) : p1.call(null,G__26842));
})();
if(cljs.core.truth_(or__15514__auto__)){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (function (){var G__26844 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26844) : p1.call(null,G__26844));
})();
if(cljs.core.truth_(or__15514__auto____$1)){
return or__15514__auto____$1;
} else {
var or__15514__auto____$2 = (function (){var G__26846 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26846) : p1.call(null,G__26846));
})();
if(cljs.core.truth_(or__15514__auto____$2)){
return or__15514__auto____$2;
} else {
var or__15514__auto____$3 = (function (){var G__26848 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26848) : p2.call(null,G__26848));
})();
if(cljs.core.truth_(or__15514__auto____$3)){
return or__15514__auto____$3;
} else {
var or__15514__auto____$4 = (function (){var G__26850 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26850) : p2.call(null,G__26850));
})();
if(cljs.core.truth_(or__15514__auto____$4)){
return or__15514__auto____$4;
} else {
var G__26851 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26851) : p2.call(null,G__26851));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__26966__delegate = function (x,y,z,args){
var or__15514__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__15514__auto__)){
return or__15514__auto__;
} else {
return cljs.core.some(((function (or__15514__auto__){
return (function (p1__26587_SHARP_){
var or__15514__auto____$1 = (function (){var G__26853 = p1__26587_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26853) : p1.call(null,G__26853));
})();
if(cljs.core.truth_(or__15514__auto____$1)){
return or__15514__auto____$1;
} else {
var G__26854 = p1__26587_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26854) : p2.call(null,G__26854));
}
});})(or__15514__auto__))
,args);
}
};
var G__26966 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26967__i = 0, G__26967__a = new Array(arguments.length -  3);
while (G__26967__i < G__26967__a.length) {G__26967__a[G__26967__i] = arguments[G__26967__i + 3]; ++G__26967__i;}
  args = new cljs.core.IndexedSeq(G__26967__a,0);
} 
return G__26966__delegate.call(this,x,y,z,args);};
G__26966.cljs$lang$maxFixedArity = 3;
G__26966.cljs$lang$applyTo = (function (arglist__26968){
var x = cljs.core.first(arglist__26968);
arglist__26968 = cljs.core.next(arglist__26968);
var y = cljs.core.first(arglist__26968);
arglist__26968 = cljs.core.next(arglist__26968);
var z = cljs.core.first(arglist__26968);
var args = cljs.core.rest(arglist__26968);
return G__26966__delegate(x,y,z,args);
});
G__26966.cljs$core$IFn$_invoke$arity$variadic = G__26966__delegate;
return G__26966;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__26969 = null;
if (arguments.length > 3) {
var G__26970__i = 0, G__26970__a = new Array(arguments.length -  3);
while (G__26970__i < G__26970__a.length) {G__26970__a[G__26970__i] = arguments[G__26970__i + 3]; ++G__26970__i;}
G__26969 = new cljs.core.IndexedSeq(G__26970__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26969);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__15514__auto__ = (function (){var G__26900 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26900) : p1.call(null,G__26900));
})();
if(cljs.core.truth_(or__15514__auto__)){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (function (){var G__26902 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26902) : p2.call(null,G__26902));
})();
if(cljs.core.truth_(or__15514__auto____$1)){
return or__15514__auto____$1;
} else {
var G__26903 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26903) : p3.call(null,G__26903));
}
}
});
var sp3__2 = (function (x,y){
var or__15514__auto__ = (function (){var G__26905 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26905) : p1.call(null,G__26905));
})();
if(cljs.core.truth_(or__15514__auto__)){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (function (){var G__26907 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26907) : p2.call(null,G__26907));
})();
if(cljs.core.truth_(or__15514__auto____$1)){
return or__15514__auto____$1;
} else {
var or__15514__auto____$2 = (function (){var G__26909 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26909) : p3.call(null,G__26909));
})();
if(cljs.core.truth_(or__15514__auto____$2)){
return or__15514__auto____$2;
} else {
var or__15514__auto____$3 = (function (){var G__26911 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26911) : p1.call(null,G__26911));
})();
if(cljs.core.truth_(or__15514__auto____$3)){
return or__15514__auto____$3;
} else {
var or__15514__auto____$4 = (function (){var G__26913 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26913) : p2.call(null,G__26913));
})();
if(cljs.core.truth_(or__15514__auto____$4)){
return or__15514__auto____$4;
} else {
var G__26914 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26914) : p3.call(null,G__26914));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__15514__auto__ = (function (){var G__26916 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26916) : p1.call(null,G__26916));
})();
if(cljs.core.truth_(or__15514__auto__)){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (function (){var G__26918 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26918) : p2.call(null,G__26918));
})();
if(cljs.core.truth_(or__15514__auto____$1)){
return or__15514__auto____$1;
} else {
var or__15514__auto____$2 = (function (){var G__26920 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26920) : p3.call(null,G__26920));
})();
if(cljs.core.truth_(or__15514__auto____$2)){
return or__15514__auto____$2;
} else {
var or__15514__auto____$3 = (function (){var G__26922 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26922) : p1.call(null,G__26922));
})();
if(cljs.core.truth_(or__15514__auto____$3)){
return or__15514__auto____$3;
} else {
var or__15514__auto____$4 = (function (){var G__26924 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26924) : p2.call(null,G__26924));
})();
if(cljs.core.truth_(or__15514__auto____$4)){
return or__15514__auto____$4;
} else {
var or__15514__auto____$5 = (function (){var G__26926 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26926) : p3.call(null,G__26926));
})();
if(cljs.core.truth_(or__15514__auto____$5)){
return or__15514__auto____$5;
} else {
var or__15514__auto____$6 = (function (){var G__26928 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26928) : p1.call(null,G__26928));
})();
if(cljs.core.truth_(or__15514__auto____$6)){
return or__15514__auto____$6;
} else {
var or__15514__auto____$7 = (function (){var G__26930 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26930) : p2.call(null,G__26930));
})();
if(cljs.core.truth_(or__15514__auto____$7)){
return or__15514__auto____$7;
} else {
var G__26931 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26931) : p3.call(null,G__26931));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__26971__delegate = function (x,y,z,args){
var or__15514__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__15514__auto__)){
return or__15514__auto__;
} else {
return cljs.core.some(((function (or__15514__auto__){
return (function (p1__26588_SHARP_){
var or__15514__auto____$1 = (function (){var G__26933 = p1__26588_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26933) : p1.call(null,G__26933));
})();
if(cljs.core.truth_(or__15514__auto____$1)){
return or__15514__auto____$1;
} else {
var or__15514__auto____$2 = (function (){var G__26935 = p1__26588_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26935) : p2.call(null,G__26935));
})();
if(cljs.core.truth_(or__15514__auto____$2)){
return or__15514__auto____$2;
} else {
var G__26936 = p1__26588_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26936) : p3.call(null,G__26936));
}
}
});})(or__15514__auto__))
,args);
}
};
var G__26971 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26972__i = 0, G__26972__a = new Array(arguments.length -  3);
while (G__26972__i < G__26972__a.length) {G__26972__a[G__26972__i] = arguments[G__26972__i + 3]; ++G__26972__i;}
  args = new cljs.core.IndexedSeq(G__26972__a,0);
} 
return G__26971__delegate.call(this,x,y,z,args);};
G__26971.cljs$lang$maxFixedArity = 3;
G__26971.cljs$lang$applyTo = (function (arglist__26973){
var x = cljs.core.first(arglist__26973);
arglist__26973 = cljs.core.next(arglist__26973);
var y = cljs.core.first(arglist__26973);
arglist__26973 = cljs.core.next(arglist__26973);
var z = cljs.core.first(arglist__26973);
var args = cljs.core.rest(arglist__26973);
return G__26971__delegate(x,y,z,args);
});
G__26971.cljs$core$IFn$_invoke$arity$variadic = G__26971__delegate;
return G__26971;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__26974 = null;
if (arguments.length > 3) {
var G__26975__i = 0, G__26975__a = new Array(arguments.length -  3);
while (G__26975__i < G__26975__a.length) {G__26975__a[G__26975__i] = arguments[G__26975__i + 3]; ++G__26975__i;}
G__26974 = new cljs.core.IndexedSeq(G__26975__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26974);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__26976__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__26589_SHARP_){
var G__26952 = x;
return (p1__26589_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26589_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26952) : p1__26589_SHARP_.call(null,G__26952));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__26590_SHARP_){
var or__15514__auto__ = (function (){var G__26954 = x;
return (p1__26590_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26590_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26954) : p1__26590_SHARP_.call(null,G__26954));
})();
if(cljs.core.truth_(or__15514__auto__)){
return or__15514__auto__;
} else {
var G__26955 = y;
return (p1__26590_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26590_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26955) : p1__26590_SHARP_.call(null,G__26955));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__26591_SHARP_){
var or__15514__auto__ = (function (){var G__26957 = x;
return (p1__26591_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26591_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26957) : p1__26591_SHARP_.call(null,G__26957));
})();
if(cljs.core.truth_(or__15514__auto__)){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (function (){var G__26959 = y;
return (p1__26591_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26591_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26959) : p1__26591_SHARP_.call(null,G__26959));
})();
if(cljs.core.truth_(or__15514__auto____$1)){
return or__15514__auto____$1;
} else {
var G__26960 = z;
return (p1__26591_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26591_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26960) : p1__26591_SHARP_.call(null,G__26960));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__26977__delegate = function (x,y,z,args){
var or__15514__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__15514__auto__)){
return or__15514__auto__;
} else {
return cljs.core.some(((function (or__15514__auto__,ps__$1){
return (function (p1__26592_SHARP_){
return cljs.core.some(p1__26592_SHARP_,args);
});})(or__15514__auto__,ps__$1))
,ps__$1);
}
};
var G__26977 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26978__i = 0, G__26978__a = new Array(arguments.length -  3);
while (G__26978__i < G__26978__a.length) {G__26978__a[G__26978__i] = arguments[G__26978__i + 3]; ++G__26978__i;}
  args = new cljs.core.IndexedSeq(G__26978__a,0);
} 
return G__26977__delegate.call(this,x,y,z,args);};
G__26977.cljs$lang$maxFixedArity = 3;
G__26977.cljs$lang$applyTo = (function (arglist__26979){
var x = cljs.core.first(arglist__26979);
arglist__26979 = cljs.core.next(arglist__26979);
var y = cljs.core.first(arglist__26979);
arglist__26979 = cljs.core.next(arglist__26979);
var z = cljs.core.first(arglist__26979);
var args = cljs.core.rest(arglist__26979);
return G__26977__delegate(x,y,z,args);
});
G__26977.cljs$core$IFn$_invoke$arity$variadic = G__26977__delegate;
return G__26977;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__26980 = null;
if (arguments.length > 3) {
var G__26981__i = 0, G__26981__a = new Array(arguments.length -  3);
while (G__26981__i < G__26981__a.length) {G__26981__a[G__26981__i] = arguments[G__26981__i + 3]; ++G__26981__i;}
G__26980 = new cljs.core.IndexedSeq(G__26981__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26980);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__26976 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__26982__i = 0, G__26982__a = new Array(arguments.length -  3);
while (G__26982__i < G__26982__a.length) {G__26982__a[G__26982__i] = arguments[G__26982__i + 3]; ++G__26982__i;}
  ps = new cljs.core.IndexedSeq(G__26982__a,0);
} 
return G__26976__delegate.call(this,p1,p2,p3,ps);};
G__26976.cljs$lang$maxFixedArity = 3;
G__26976.cljs$lang$applyTo = (function (arglist__26983){
var p1 = cljs.core.first(arglist__26983);
arglist__26983 = cljs.core.next(arglist__26983);
var p2 = cljs.core.first(arglist__26983);
arglist__26983 = cljs.core.next(arglist__26983);
var p3 = cljs.core.first(arglist__26983);
var ps = cljs.core.rest(arglist__26983);
return G__26976__delegate(p1,p2,p3,ps);
});
G__26976.cljs$core$IFn$_invoke$arity$variadic = G__26976__delegate;
return G__26976;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__26984 = null;
if (arguments.length > 3) {
var G__26985__i = 0, G__26985__a = new Array(arguments.length -  3);
while (G__26985__i < G__26985__a.length) {G__26985__a[G__26985__i] = arguments[G__26985__i + 3]; ++G__26985__i;}
G__26984 = new cljs.core.IndexedSeq(G__26985__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__26984);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__27040 = null;
var G__27040__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27040__1 = (function (result){
var G__27026 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27026) : rf.call(null,G__27026));
});
var G__27040__2 = (function (result,input){
var G__27027 = result;
var G__27028 = (function (){var G__27029 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27029) : f.call(null,G__27029));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27027,G__27028) : rf.call(null,G__27027,G__27028));
});
var G__27040__3 = (function() { 
var G__27041__delegate = function (result,input,inputs){
var G__27030 = result;
var G__27031 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27030,G__27031) : rf.call(null,G__27030,G__27031));
};
var G__27041 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__27042__i = 0, G__27042__a = new Array(arguments.length -  2);
while (G__27042__i < G__27042__a.length) {G__27042__a[G__27042__i] = arguments[G__27042__i + 2]; ++G__27042__i;}
  inputs = new cljs.core.IndexedSeq(G__27042__a,0);
} 
return G__27041__delegate.call(this,result,input,inputs);};
G__27041.cljs$lang$maxFixedArity = 2;
G__27041.cljs$lang$applyTo = (function (arglist__27043){
var result = cljs.core.first(arglist__27043);
arglist__27043 = cljs.core.next(arglist__27043);
var input = cljs.core.first(arglist__27043);
var inputs = cljs.core.rest(arglist__27043);
return G__27041__delegate(result,input,inputs);
});
G__27041.cljs$core$IFn$_invoke$arity$variadic = G__27041__delegate;
return G__27041;
})()
;
G__27040 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__27040__0.call(this);
case 1:
return G__27040__1.call(this,result);
case 2:
return G__27040__2.call(this,result,input);
default:
var G__27044 = null;
if (arguments.length > 2) {
var G__27045__i = 0, G__27045__a = new Array(arguments.length -  2);
while (G__27045__i < G__27045__a.length) {G__27045__a[G__27045__i] = arguments[G__27045__i + 2]; ++G__27045__i;}
G__27044 = new cljs.core.IndexedSeq(G__27045__a,0);
}
return G__27040__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__27044);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27040.cljs$lang$maxFixedArity = 2;
G__27040.cljs$lang$applyTo = G__27040__3.cljs$lang$applyTo;
G__27040.cljs$core$IFn$_invoke$arity$0 = G__27040__0;
G__27040.cljs$core$IFn$_invoke$arity$1 = G__27040__1;
G__27040.cljs$core$IFn$_invoke$arity$2 = G__27040__2;
G__27040.cljs$core$IFn$_invoke$arity$variadic = G__27040__3.cljs$core$IFn$_invoke$arity$variadic;
return G__27040;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__16401__auto___27046 = size;
var i_27047 = (0);
while(true){
if((i_27047 < n__16401__auto___27046)){
cljs.core.chunk_append(b,(function (){var G__27032 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_27047);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27032) : f.call(null,G__27032));
})());

var G__27048 = (i_27047 + (1));
i_27047 = G__27048;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__27033 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27033) : f.call(null,G__27033));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__27034 = cljs.core.first(s1);
var G__27035 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27034,G__27035) : f.call(null,G__27034,G__27035));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__27036 = cljs.core.first(s1);
var G__27037 = cljs.core.first(s2);
var G__27038 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27036,G__27037,G__27038) : f.call(null,G__27036,G__27037,G__27038));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__27049__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__26986_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__26986_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__27049 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__27050__i = 0, G__27050__a = new Array(arguments.length -  4);
while (G__27050__i < G__27050__a.length) {G__27050__a[G__27050__i] = arguments[G__27050__i + 4]; ++G__27050__i;}
  colls = new cljs.core.IndexedSeq(G__27050__a,0);
} 
return G__27049__delegate.call(this,f,c1,c2,c3,colls);};
G__27049.cljs$lang$maxFixedArity = 4;
G__27049.cljs$lang$applyTo = (function (arglist__27051){
var f = cljs.core.first(arglist__27051);
arglist__27051 = cljs.core.next(arglist__27051);
var c1 = cljs.core.first(arglist__27051);
arglist__27051 = cljs.core.next(arglist__27051);
var c2 = cljs.core.first(arglist__27051);
arglist__27051 = cljs.core.next(arglist__27051);
var c3 = cljs.core.first(arglist__27051);
var colls = cljs.core.rest(arglist__27051);
return G__27049__delegate(f,c1,c2,c3,colls);
});
G__27049.cljs$core$IFn$_invoke$arity$variadic = G__27049__delegate;
return G__27049;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__27052 = null;
if (arguments.length > 4) {
var G__27053__i = 0, G__27053__a = new Array(arguments.length -  4);
while (G__27053__i < G__27053__a.length) {G__27053__a[G__27053__i] = arguments[G__27053__i + 4]; ++G__27053__i;}
G__27052 = new cljs.core.IndexedSeq(G__27053__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__27052);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__27062 = null;
var G__27062__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27062__1 = (function (result){
var G__27059 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27059) : rf.call(null,G__27059));
});
var G__27062__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__27060 = result;
var G__27061 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27060,G__27061) : rf.call(null,G__27060,G__27061));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__27062 = function(result,input){
switch(arguments.length){
case 0:
return G__27062__0.call(this);
case 1:
return G__27062__1.call(this,result);
case 2:
return G__27062__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27062.cljs$core$IFn$_invoke$arity$0 = G__27062__0;
G__27062.cljs$core$IFn$_invoke$arity$1 = G__27062__1;
G__27062.cljs$core$IFn$_invoke$arity$2 = G__27062__2;
return G__27062;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__27069 = null;
var G__27069__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27069__1 = (function (result){
var G__27066 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27066) : rf.call(null,G__27066));
});
var G__27069__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__27067 = result;
var G__27068 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27067,G__27068) : rf.call(null,G__27067,G__27068));
}
});
G__27069 = function(result,input){
switch(arguments.length){
case 0:
return G__27069__0.call(this);
case 1:
return G__27069__1.call(this,result);
case 2:
return G__27069__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27069.cljs$core$IFn$_invoke$arity$0 = G__27069__0;
G__27069.cljs$core$IFn$_invoke$arity$1 = G__27069__1;
G__27069.cljs$core$IFn$_invoke$arity$2 = G__27069__2;
return G__27069;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__27070 = (n__$1 - (1));
var G__27071 = cljs.core.rest(s);
n__$1 = G__27070;
coll__$1 = G__27071;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__27074 = cljs.core.next(s);
var G__27075 = cljs.core.next(lead);
s = G__27074;
lead = G__27075;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__27088 = null;
var G__27088__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27088__1 = (function (result){
var G__27082 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27082) : rf.call(null,G__27082));
});
var G__27088__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__15502__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__15502__auto__)){
var G__27083 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__27083) : pred.call(null,G__27083));
} else {
return and__15502__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__27084 = result;
var G__27085 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27084,G__27085) : rf.call(null,G__27084,G__27085));
}
});
G__27088 = function(result,input){
switch(arguments.length){
case 0:
return G__27088__0.call(this);
case 1:
return G__27088__1.call(this,result);
case 2:
return G__27088__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27088.cljs$core$IFn$_invoke$arity$0 = G__27088__0;
G__27088.cljs$core$IFn$_invoke$arity$1 = G__27088__1;
G__27088.cljs$core$IFn$_invoke$arity$2 = G__27088__2;
return G__27088;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__15502__auto__ = s;
if(and__15502__auto__){
var G__27087 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__27087) : pred__$1.call(null,G__27087));
} else {
return and__15502__auto__;
}
})())){
var G__27089 = pred__$1;
var G__27090 = cljs.core.rest(s);
pred__$1 = G__27089;
coll__$1 = G__27090;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__27099 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27099) : f.call(null,G__27099));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__27102__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__27102 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__27103__i = 0, G__27103__a = new Array(arguments.length -  2);
while (G__27103__i < G__27103__a.length) {G__27103__a[G__27103__i] = arguments[G__27103__i + 2]; ++G__27103__i;}
  colls = new cljs.core.IndexedSeq(G__27103__a,0);
} 
return G__27102__delegate.call(this,c1,c2,colls);};
G__27102.cljs$lang$maxFixedArity = 2;
G__27102.cljs$lang$applyTo = (function (arglist__27104){
var c1 = cljs.core.first(arglist__27104);
arglist__27104 = cljs.core.next(arglist__27104);
var c2 = cljs.core.first(arglist__27104);
var colls = cljs.core.rest(arglist__27104);
return G__27102__delegate(c1,c2,colls);
});
G__27102.cljs$core$IFn$_invoke$arity$variadic = G__27102__delegate;
return G__27102;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__27105 = null;
if (arguments.length > 2) {
var G__27106__i = 0, G__27106__a = new Array(arguments.length -  2);
while (G__27106__i < G__27106__a.length) {G__27106__a[G__27106__i] = arguments[G__27106__i + 2]; ++G__27106__i;}
G__27105 = new cljs.core.IndexedSeq(G__27106__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__27105);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__27121 = null;
var G__27121__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27121__1 = (function (result){
var G__27114 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27114) : rf.call(null,G__27114));
});
var G__27121__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__27115 = result;
var G__27116 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27115,G__27116) : rf.call(null,G__27115,G__27116));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__27117 = sepr;
var G__27118 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27117,G__27118) : rf.call(null,G__27117,G__27118));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__27119 = result;
var G__27120 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27119,G__27120) : rf.call(null,G__27119,G__27120));
}
});
G__27121 = function(result,input){
switch(arguments.length){
case 0:
return G__27121__0.call(this);
case 1:
return G__27121__1.call(this,result);
case 2:
return G__27121__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27121.cljs$core$IFn$_invoke$arity$0 = G__27121__0;
G__27121.cljs$core$IFn$_invoke$arity$1 = G__27121__1;
G__27121.cljs$core$IFn$_invoke$arity$2 = G__27121__2;
return G__27121;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__27130__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__27130 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__27131__i = 0, G__27131__a = new Array(arguments.length -  1);
while (G__27131__i < G__27131__a.length) {G__27131__a[G__27131__i] = arguments[G__27131__i + 1]; ++G__27131__i;}
  colls = new cljs.core.IndexedSeq(G__27131__a,0);
} 
return G__27130__delegate.call(this,f,colls);};
G__27130.cljs$lang$maxFixedArity = 1;
G__27130.cljs$lang$applyTo = (function (arglist__27132){
var f = cljs.core.first(arglist__27132);
var colls = cljs.core.rest(arglist__27132);
return G__27130__delegate(f,colls);
});
G__27130.cljs$core$IFn$_invoke$arity$variadic = G__27130__delegate;
return G__27130;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__27133 = null;
if (arguments.length > 1) {
var G__27134__i = 0, G__27134__a = new Array(arguments.length -  1);
while (G__27134__i < G__27134__a.length) {G__27134__a[G__27134__i] = arguments[G__27134__i + 1]; ++G__27134__i;}
G__27133 = new cljs.core.IndexedSeq(G__27134__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__27133);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__27153 = null;
var G__27153__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27153__1 = (function (result){
var G__27147 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27147) : rf.call(null,G__27147));
});
var G__27153__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__27148 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__27148) : pred.call(null,G__27148));
})())){
var G__27149 = result;
var G__27150 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27149,G__27150) : rf.call(null,G__27149,G__27150));
} else {
return result;
}
});
G__27153 = function(result,input){
switch(arguments.length){
case 0:
return G__27153__0.call(this);
case 1:
return G__27153__1.call(this,result);
case 2:
return G__27153__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27153.cljs$core$IFn$_invoke$arity$0 = G__27153__0;
G__27153.cljs$core$IFn$_invoke$arity$1 = G__27153__1;
G__27153.cljs$core$IFn$_invoke$arity$2 = G__27153__2;
return G__27153;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__16401__auto___27154 = size;
var i_27155 = (0);
while(true){
if((i_27155 < n__16401__auto___27154)){
if(cljs.core.truth_((function (){var G__27151 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_27155);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__27151) : pred.call(null,G__27151));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_27155));
} else {
}

var G__27156 = (i_27155 + (1));
i_27155 = G__27156;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__27152 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__27152) : pred.call(null,G__27152));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__27163 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__27163) : branch_QMARK_.call(null,G__27163));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__27164 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__27164) : children.call(null,G__27164));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__27165_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__27165_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__27168 = to;
if(G__27168){
var bit__16188__auto__ = (G__27168.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__16188__auto__) || (G__27168.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__27169 = to;
if(G__27169){
var bit__16188__auto__ = (G__27169.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__16188__auto__) || (G__27169.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__27171 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27171) : f.call(null,G__27171));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__27172__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__27172 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__27173__i = 0, G__27173__a = new Array(arguments.length -  4);
while (G__27173__i < G__27173__a.length) {G__27173__a[G__27173__i] = arguments[G__27173__i + 4]; ++G__27173__i;}
  colls = new cljs.core.IndexedSeq(G__27173__a,0);
} 
return G__27172__delegate.call(this,f,c1,c2,c3,colls);};
G__27172.cljs$lang$maxFixedArity = 4;
G__27172.cljs$lang$applyTo = (function (arglist__27174){
var f = cljs.core.first(arglist__27174);
arglist__27174 = cljs.core.next(arglist__27174);
var c1 = cljs.core.first(arglist__27174);
arglist__27174 = cljs.core.next(arglist__27174);
var c2 = cljs.core.first(arglist__27174);
arglist__27174 = cljs.core.next(arglist__27174);
var c3 = cljs.core.first(arglist__27174);
var colls = cljs.core.rest(arglist__27174);
return G__27172__delegate(f,c1,c2,c3,colls);
});
G__27172.cljs$core$IFn$_invoke$arity$variadic = G__27172__delegate;
return G__27172;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__27175 = null;
if (arguments.length > 4) {
var G__27176__i = 0, G__27176__a = new Array(arguments.length -  4);
while (G__27176__i < G__27176__a.length) {G__27176__a[G__27176__i] = arguments[G__27176__i + 4]; ++G__27176__i;}
G__27175 = new cljs.core.IndexedSeq(G__27176__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__27175);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__27178 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__27178) : pred.call(null,G__27178));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__27193 = m__$1;
if(G__27193){
var bit__16195__auto__ = (G__27193.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__16195__auto__) || (G__27193.cljs$core$ILookup$)){
return true;
} else {
if((!G__27193.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__27193);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__27193);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__27194 = sentinel;
var G__27195 = m__$2;
var G__27196 = cljs.core.next(ks__$1);
sentinel = G__27194;
m__$1 = G__27195;
ks__$1 = G__27196;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__27197,v){
var vec__27202 = p__27197;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27202,(0),null);
var ks = cljs.core.nthnext(vec__27202,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__27203,f){
var vec__27241 = p__27203;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27241,(0),null);
var ks = cljs.core.nthnext(vec__27241,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__27242 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27242) : f.call(null,G__27242));
})());
}
});
var update_in__4 = (function (m,p__27204,f,a){
var vec__27243 = p__27204;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27243,(0),null);
var ks = cljs.core.nthnext(vec__27243,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__27244 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__27245 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27244,G__27245) : f.call(null,G__27244,G__27245));
})());
}
});
var update_in__5 = (function (m,p__27205,f,a,b){
var vec__27246 = p__27205;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27246,(0),null);
var ks = cljs.core.nthnext(vec__27246,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__27247 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__27248 = a;
var G__27249 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27247,G__27248,G__27249) : f.call(null,G__27247,G__27248,G__27249));
})());
}
});
var update_in__6 = (function (m,p__27206,f,a,b,c){
var vec__27250 = p__27206;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27250,(0),null);
var ks = cljs.core.nthnext(vec__27250,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__27251 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__27252 = a;
var G__27253 = b;
var G__27254 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__27251,G__27252,G__27253,G__27254) : f.call(null,G__27251,G__27252,G__27253,G__27254));
})());
}
});
var update_in__7 = (function() { 
var G__27256__delegate = function (m,p__27207,f,a,b,c,args){
var vec__27255 = p__27207;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27255,(0),null);
var ks = cljs.core.nthnext(vec__27255,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__27256 = function (m,p__27207,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__27257__i = 0, G__27257__a = new Array(arguments.length -  6);
while (G__27257__i < G__27257__a.length) {G__27257__a[G__27257__i] = arguments[G__27257__i + 6]; ++G__27257__i;}
  args = new cljs.core.IndexedSeq(G__27257__a,0);
} 
return G__27256__delegate.call(this,m,p__27207,f,a,b,c,args);};
G__27256.cljs$lang$maxFixedArity = 6;
G__27256.cljs$lang$applyTo = (function (arglist__27258){
var m = cljs.core.first(arglist__27258);
arglist__27258 = cljs.core.next(arglist__27258);
var p__27207 = cljs.core.first(arglist__27258);
arglist__27258 = cljs.core.next(arglist__27258);
var f = cljs.core.first(arglist__27258);
arglist__27258 = cljs.core.next(arglist__27258);
var a = cljs.core.first(arglist__27258);
arglist__27258 = cljs.core.next(arglist__27258);
var b = cljs.core.first(arglist__27258);
arglist__27258 = cljs.core.next(arglist__27258);
var c = cljs.core.first(arglist__27258);
var args = cljs.core.rest(arglist__27258);
return G__27256__delegate(m,p__27207,f,a,b,c,args);
});
G__27256.cljs$core$IFn$_invoke$arity$variadic = G__27256__delegate;
return G__27256;
})()
;
update_in = function(m,p__27207,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__27207,f);
case 4:
return update_in__4.call(this,m,p__27207,f,a);
case 5:
return update_in__5.call(this,m,p__27207,f,a,b);
case 6:
return update_in__6.call(this,m,p__27207,f,a,b,c);
default:
var G__27259 = null;
if (arguments.length > 6) {
var G__27260__i = 0, G__27260__a = new Array(arguments.length -  6);
while (G__27260__i < G__27260__a.length) {G__27260__a[G__27260__i] = arguments[G__27260__i + 6]; ++G__27260__i;}
G__27259 = new cljs.core.IndexedSeq(G__27260__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__27207,f,a,b,c, G__27259);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__27271 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27271) : f.call(null,G__27271));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__27272 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__27273 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27272,G__27273) : f.call(null,G__27272,G__27273));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__27274 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__27275 = x;
var G__27276 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27274,G__27275,G__27276) : f.call(null,G__27274,G__27275,G__27276));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__27277 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__27278 = x;
var G__27279 = y;
var G__27280 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__27277,G__27278,G__27279,G__27280) : f.call(null,G__27277,G__27278,G__27279,G__27280));
})());
});
var update__7 = (function() { 
var G__27281__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__27281 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__27282__i = 0, G__27282__a = new Array(arguments.length -  6);
while (G__27282__i < G__27282__a.length) {G__27282__a[G__27282__i] = arguments[G__27282__i + 6]; ++G__27282__i;}
  more = new cljs.core.IndexedSeq(G__27282__a,0);
} 
return G__27281__delegate.call(this,m,k,f,x,y,z,more);};
G__27281.cljs$lang$maxFixedArity = 6;
G__27281.cljs$lang$applyTo = (function (arglist__27283){
var m = cljs.core.first(arglist__27283);
arglist__27283 = cljs.core.next(arglist__27283);
var k = cljs.core.first(arglist__27283);
arglist__27283 = cljs.core.next(arglist__27283);
var f = cljs.core.first(arglist__27283);
arglist__27283 = cljs.core.next(arglist__27283);
var x = cljs.core.first(arglist__27283);
arglist__27283 = cljs.core.next(arglist__27283);
var y = cljs.core.first(arglist__27283);
arglist__27283 = cljs.core.next(arglist__27283);
var z = cljs.core.first(arglist__27283);
var more = cljs.core.rest(arglist__27283);
return G__27281__delegate(m,k,f,x,y,z,more);
});
G__27281.cljs$core$IFn$_invoke$arity$variadic = G__27281__delegate;
return G__27281;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__27284 = null;
if (arguments.length > 6) {
var G__27285__i = 0, G__27285__a = new Array(arguments.length -  6);
while (G__27285__i < G__27285__a.length) {G__27285__a[G__27285__i] = arguments[G__27285__i + 6]; ++G__27285__i;}
G__27284 = new cljs.core.IndexedSeq(G__27285__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__27284);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__27286 = (ll - (5));
var G__27287 = r;
ll = G__27286;
ret = G__27287;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__27292 = cljs.core.pv_aget(node,(0));
var G__27293 = (level - (5));
node = G__27292;
level = G__27293;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__27294 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__27295 = (level - (5));
node = G__27294;
level = G__27295;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__27305 = init__$2;
var G__27306 = (j + i);
var G__27307 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27305,G__27306,G__27307) : f.call(null,G__27305,G__27306,G__27307));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__27318 = (j + (1));
var G__27319 = init__$3;
j = G__27318;
init__$2 = G__27319;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__27308 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27308) : cljs.core.deref.call(null,G__27308));
} else {
var G__27320 = (i + len);
var G__27321 = init__$2;
i = G__27320;
init__$1 = G__27321;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__15935__auto__ = self__.__hash;
if(!((h__15935__auto__ == null))){
return h__15935__auto__;
} else {
var h__15935__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__15935__auto____$1;

return h__15935__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__27309 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__27309) : cljs.core.tv_editable_root.call(null,G__27309));
})(),(function (){var G__27310 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__27310) : cljs.core.tv_editable_tail.call(null,G__27310));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__27311 = init__$2;
var G__27312 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27311,G__27312) : f.call(null,G__27311,G__27312));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__27322 = (j + (1));
var G__27323 = init__$3;
j = G__27322;
init__$2 = G__27323;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__27313 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27313) : cljs.core.deref.call(null,G__27313));
} else {
var G__27324 = (i + len);
var G__27325 = init__$2;
i = G__27324;
init__$1 = G__27325;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__27314 = coll__$1;
var G__27315 = cljs.core.first_array_for_longvec(coll__$1);
var G__27316 = (0);
var G__27317 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__27314,G__27315,G__27316,G__27317) : cljs.core.chunked_seq.call(null,G__27314,G__27315,G__27316,G__27317));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__16401__auto___27326 = len;
var i_27327 = (0);
while(true){
if((i_27327 < n__16401__auto___27326)){
(new_tail[i_27327] = (self__.tail[i_27327]));

var G__27328 = (i_27327 + (1));
i_27327 = G__27328;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__27329 = null;
var G__27329__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__27329__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__27329 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27329__2.call(this,self__,k);
case 3:
return G__27329__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27329.cljs$core$IFn$_invoke$arity$2 = G__27329__2;
G__27329.cljs$core$IFn$_invoke$arity$3 = G__27329__3;
return G__27329;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args27304){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27304)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__27330 = (i + (1));
var G__27331 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__27330;
out = G__27331;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16492__auto__ = this;
return cljs.core.es6_iterator(this__16492__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__27332__i = 0, G__27332__a = new Array(arguments.length -  0);
while (G__27332__i < G__27332__a.length) {G__27332__a[G__27332__i] = arguments[G__27332__i + 0]; ++G__27332__i;}
  args = new cljs.core.IndexedSeq(G__27332__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__27333){
var args = cljs.core.seq(arglist__27333);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__27334 = self__.vec;
var G__27335 = self__.node;
var G__27336 = self__.i;
var G__27337 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__27334,G__27335,G__27336,G__27337) : cljs.core.chunked_seq.call(null,G__27334,G__27335,G__27336,G__27337));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__15935__auto__ = self__.__hash;
if(!((h__15935__auto__ == null))){
return h__15935__auto__;
} else {
var h__15935__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__15935__auto____$1;

return h__15935__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__27338 = self__.vec;
var G__27339 = (self__.i + self__.off);
var G__27340 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__27338,G__27339,G__27340) : cljs.core.subvec.call(null,G__27338,G__27339,G__27340));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__27341 = self__.vec;
var G__27342 = (self__.i + self__.off);
var G__27343 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__27341,G__27342,G__27343) : cljs.core.subvec.call(null,G__27341,G__27342,G__27343));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__27344 = self__.vec;
var G__27345 = self__.node;
var G__27346 = self__.i;
var G__27347 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__27344,G__27345,G__27346,G__27347) : cljs.core.chunked_seq.call(null,G__27344,G__27345,G__27346,G__27347));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__27348 = self__.vec;
var G__27349 = cljs.core.unchecked_array_for(self__.vec,end);
var G__27350 = end;
var G__27351 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__27348,G__27349,G__27350,G__27351) : cljs.core.chunked_seq.call(null,G__27348,G__27349,G__27350,G__27351));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__27352 = self__.vec;
var G__27353 = self__.node;
var G__27354 = self__.i;
var G__27355 = self__.off;
var G__27356 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__27352,G__27353,G__27354,G__27355,G__27356) : cljs.core.chunked_seq.call(null,G__27352,G__27353,G__27354,G__27355,G__27356));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__27357 = self__.vec;
var G__27358 = cljs.core.unchecked_array_for(self__.vec,end);
var G__27359 = end;
var G__27360 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__27357,G__27358,G__27359,G__27360) : cljs.core.chunked_seq.call(null,G__27357,G__27358,G__27359,G__27360));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16492__auto__ = this;
return cljs.core.es6_iterator(this__16492__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__27362 = self__.meta;
var G__27363 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__27364 = self__.start;
var G__27365 = (function (){var x__15831__auto__ = self__.end;
var y__15832__auto__ = (v_pos + (1));
return ((x__15831__auto__ > y__15832__auto__) ? x__15831__auto__ : y__15832__auto__);
})();
var G__27366 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__27362,G__27363,G__27364,G__27365,G__27366) : cljs.core.build_subvec.call(null,G__27362,G__27363,G__27364,G__27365,G__27366));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__27367 = self__.meta;
var G__27368 = self__.v;
var G__27369 = self__.start;
var G__27370 = (self__.end - (1));
var G__27371 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__27367,G__27368,G__27369,G__27370,G__27371) : cljs.core.build_subvec.call(null,G__27367,G__27368,G__27369,G__27370,G__27371));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__15935__auto__ = self__.__hash;
if(!((h__15935__auto__ == null))){
return h__15935__auto__;
} else {
var h__15935__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__15935__auto____$1;

return h__15935__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__27373 = meta__$1;
var G__27374 = self__.v;
var G__27375 = self__.start;
var G__27376 = self__.end;
var G__27377 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__27373,G__27374,G__27375,G__27376,G__27377) : cljs.core.build_subvec.call(null,G__27373,G__27374,G__27375,G__27376,G__27377));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__27378 = self__.meta;
var G__27379 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__27380 = self__.start;
var G__27381 = (self__.end + (1));
var G__27382 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__27378,G__27379,G__27380,G__27381,G__27382) : cljs.core.build_subvec.call(null,G__27378,G__27379,G__27380,G__27381,G__27382));
});

cljs.core.Subvec.prototype.call = (function() {
var G__27383 = null;
var G__27383__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__27383__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__27383 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27383__2.call(this,self__,k);
case 3:
return G__27383__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27383.cljs$core$IFn$_invoke$arity$2 = G__27383__2;
G__27383.cljs$core$IFn$_invoke$arity$3 = G__27383__3;
return G__27383;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args27361){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27361)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16492__auto__ = this;
return cljs.core.es6_iterator(this__16492__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__27384 = meta;
var G__27385 = v.v;
var G__27386 = (v.start + start);
var G__27387 = (v.start + end);
var G__27388 = __hash;
meta = G__27384;
v = G__27385;
start = G__27386;
end = G__27387;
__hash = G__27388;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj27395 = {};
return obj27395;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__27403 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__27404 = (level - (5));
node = G__27403;
level = G__27404;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__27408 = null;
var G__27408__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__27408__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__27408 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27408__2.call(this,self__,k);
case 3:
return G__27408__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27408.cljs$core$IFn$_invoke$arity$2 = G__27408__2;
G__27408.cljs$core$IFn$_invoke$arity$3 = G__27408__3;
return G__27408;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args27405){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27405)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__15935__auto__ = self__.__hash;
if(!((h__15935__auto__ == null))){
return h__15935__auto__;
} else {
var h__15935__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__15935__auto____$1;

return h__15935__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16492__auto__ = this;
return cljs.core.es6_iterator(this__16492__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__15935__auto__ = self__.__hash;
if(!((h__15935__auto__ == null))){
return h__15935__auto__;
} else {
var h__15935__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__15935__auto____$1;

return h__15935__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__15514__auto__ = self__.front;
if(cljs.core.truth_(or__15514__auto__)){
return or__15514__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__15514__auto__ = self__.rear;
if(cljs.core.truth_(or__15514__auto__)){
return or__15514__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16492__auto__ = this;
return cljs.core.es6_iterator(this__16492__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__27409 = (i + incr);
i = G__27409;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__27410 = (i + (1));
var G__27411 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__27410;
out = G__27411;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj27415 = {};
return obj27415;
})();
var l = ks.length;
var i_27416 = (0);
while(true){
if((i_27416 < l)){
var k_27417 = (ks[i_27416]);
(new_obj[k_27417] = (obj[k_27417]));

var G__27418 = (i_27416 + (1));
i_27416 = G__27418;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__15502__auto__ = (function (){var G__27422 = k;
return goog.isString(G__27422);
})();
if(cljs.core.truth_(and__15502__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__15502__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__27423 = init__$1;
var G__27424 = k;
var G__27425 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27423,G__27424,G__27425) : f.call(null,G__27423,G__27424,G__27425));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__27426 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27426) : cljs.core.deref.call(null,G__27426));
} else {
var G__27432 = cljs.core.rest(keys__$1);
var G__27433 = init__$2;
keys__$1 = G__27432;
init__$1 = G__27433;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__15935__auto__ = self__.__hash;
if(!((h__15935__auto__ == null))){
return h__15935__auto__;
} else {
var h__15935__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__15935__auto____$1;

return h__15935__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__15502__auto__ = (function (){var G__27428 = k;
return goog.isString(G__27428);
})();
if(cljs.core.truth_(and__15502__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__15502__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__27429 = k;
return goog.isString(G__27429);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__15502__auto__ = (function (){var G__27431 = k;
return goog.isString(G__27431);
})();
if(cljs.core.truth_(and__15502__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__15502__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__27419_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__27419_SHARP_,(self__.strobj[p1__27419_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__27434 = null;
var G__27434__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__27434__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__27434 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27434__2.call(this,self__,k);
case 3:
return G__27434__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27434.cljs$core$IFn$_invoke$arity$2 = G__27434__2;
G__27434.cljs$core$IFn$_invoke$arity$3 = G__27434__3;
return G__27434;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args27420){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27420)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj27436 = {};
return obj27436;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__27437 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27437,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27437,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__27438 = (i + (2));
i = G__27438;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__27439 = (i + (2));
i = G__27439;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__27440 = (i + (2));
i = G__27440;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__27441 = (i + (2));
i = G__27441;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__27442 = (i + (2));
i = G__27442;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__15514__auto__ = (function (){var G__27446 = k;
return goog.isString(G__27446);
})();
if(cljs.core.truth_(or__15514__auto__)){
return or__15514__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_27447 = (0);
while(true){
if((i_27447 < l)){
(narr[i_27447] = (arr[i_27447]));

var G__27448 = (i_27447 + (1));
i_27447 = G__27448;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16492__auto__ = this;
return cljs.core.es6_iterator(this__16492__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__27450 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__27450) : cljs.core.keys.call(null,G__27450));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__27451 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__27451) : cljs.core.vals.call(null,G__27451));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__27452 = cljs.core.seq(coll);
var chunk__27453 = null;
var count__27454 = (0);
var i__27455 = (0);
while(true){
if((i__27455 < count__27454)){
var vec__27456 = chunk__27453.cljs$core$IIndexed$_nth$arity$2(null,i__27455);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27456,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27456,(1),null);
var G__27457_27470 = v;
var G__27458_27471 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27457_27470,G__27458_27471) : f.call(null,G__27457_27470,G__27458_27471));

var G__27472 = seq__27452;
var G__27473 = chunk__27453;
var G__27474 = count__27454;
var G__27475 = (i__27455 + (1));
seq__27452 = G__27472;
chunk__27453 = G__27473;
count__27454 = G__27474;
i__27455 = G__27475;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__27452);
if(temp__4126__auto__){
var seq__27452__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__27452__$1)){
var c__16301__auto__ = cljs.core.chunk_first(seq__27452__$1);
var G__27476 = cljs.core.chunk_rest(seq__27452__$1);
var G__27477 = c__16301__auto__;
var G__27478 = cljs.core.count(c__16301__auto__);
var G__27479 = (0);
seq__27452 = G__27476;
chunk__27453 = G__27477;
count__27454 = G__27478;
i__27455 = G__27479;
continue;
} else {
var vec__27459 = cljs.core.first(seq__27452__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27459,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27459,(1),null);
var G__27460_27480 = v;
var G__27461_27481 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27460_27480,G__27461_27481) : f.call(null,G__27460_27480,G__27461_27481));

var G__27482 = cljs.core.next(seq__27452__$1);
var G__27483 = null;
var G__27484 = (0);
var G__27485 = (0);
seq__27452 = G__27482;
chunk__27453 = G__27483;
count__27454 = G__27484;
i__27455 = G__27485;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__27462 = init__$1;
var G__27463 = (self__.arr[i]);
var G__27464 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27462,G__27463,G__27464) : f.call(null,G__27462,G__27463,G__27464));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__27465 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27465) : cljs.core.deref.call(null,G__27465));
} else {
var G__27486 = (i + (2));
var G__27487 = init__$2;
i = G__27486;
init__$1 = G__27487;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__15935__auto__ = self__.__hash;
if(!((h__15935__auto__ == null))){
return h__15935__auto__;
} else {
var h__15935__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__15935__auto____$1;

return h__15935__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__27466 = other;
if(G__27466){
var bit__16188__auto__ = (G__27466.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__16188__auto__) || (G__27466.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__27488 = (i + (2));
i = G__27488;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj27468 = {};
return obj27468;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__27489 = (s + (2));
var G__27490 = d;
s = G__27489;
d = G__27490;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__27491 = (s + (2));
var G__27492 = (d + (2));
s = G__27491;
d = G__27492;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__27469 = cljs.core.aclone(self__.arr);
(G__27469[(idx + (1))] = v);

return G__27469;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__27493 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__27494 = cljs.core.next(es);
ret = G__27493;
es = G__27494;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__27495 = null;
var G__27495__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__27495__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__27495 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27495__2.call(this,self__,k);
case 3:
return G__27495__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27495.cljs$core$IFn$_invoke$arity$2 = G__27495__2;
G__27495.cljs$core$IFn$_invoke$arity$3 = G__27495__3;
return G__27495;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args27449){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27449)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__27496 = (i + (2));
var G__27497 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__27496;
ret = G__27497;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16492__auto__ = this;
return cljs.core.es6_iterator(this__16492__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__27498_27506 = self__.arr;
G__27498_27506.pop();

G__27498_27506.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__27499 = self__.len;
var G__27500 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__27499,G__27500) : cljs.core.array__GT_transient_hash_map.call(null,G__27499,G__27500));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__27501 = o;
if(G__27501){
var bit__16195__auto__ = (G__27501.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__16195__auto__) || (G__27501.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__27501.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__27501);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__27501);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__27502 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__27502) : cljs.core.key.call(null,G__27502));
})(),(function (){var G__27503 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__27503) : cljs.core.val.call(null,G__27503));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__27507 = cljs.core.next(es);
var G__27508 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__27504 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__27504) : cljs.core.key.call(null,G__27504));
})(),(function (){var G__27505 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__27505) : cljs.core.val.call(null,G__27505));
})());
es = G__27507;
tcoll__$2 = G__27508;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__27509 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__27510 = (i + (2));
out = G__27509;
i = G__27510;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__27513 = cljs.core.aclone(arr);
(G__27513[i] = a);

return G__27513;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__27514 = cljs.core.aclone(arr);
(G__27514[i] = a);

(G__27514[j] = b);

return G__27514;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__27519 = init__$1;
var G__27520 = k;
var G__27521 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27519,G__27520,G__27521) : f.call(null,G__27519,G__27520,G__27521));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__27522 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27522) : cljs.core.deref.call(null,G__27522));
} else {
var G__27523 = (i + (2));
var G__27524 = init__$2;
i = G__27523;
init__$1 = G__27524;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__27525 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__27525) : cljs.core.create_inode_seq.call(null,G__27525));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_27539 = (0);
var j_27540 = (0);
while(true){
if((i_27539 < (32))){
if((((self__.bitmap >>> i_27539) & (1)) === (0))){
var G__27541 = (i_27539 + (1));
var G__27542 = j_27540;
i_27539 = G__27541;
j_27540 = G__27542;
continue;
} else {
(nodes[i_27539] = ((!(((self__.arr[j_27540]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_27540])),(self__.arr[j_27540]),(self__.arr[(j_27540 + (1))]),added_leaf_QMARK_):(self__.arr[(j_27540 + (1))])));

var G__27543 = (i_27539 + (1));
var G__27544 = (j_27540 + (2));
i_27539 = G__27543;
j_27540 = G__27544;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__27526 = edit__$1;
var G__27527 = (shift + (5));
var G__27528 = key_or_nil;
var G__27529 = val_or_node;
var G__27530 = hash;
var G__27531 = key;
var G__27532 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__27526,G__27527,G__27528,G__27529,G__27530,G__27531,G__27532) : cljs.core.create_node.call(null,G__27526,G__27527,G__27528,G__27529,G__27530,G__27531,G__27532));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_27545 = (0);
var j_27546 = (0);
while(true){
if((i_27545 < (32))){
if((((self__.bitmap >>> i_27545) & (1)) === (0))){
var G__27547 = (i_27545 + (1));
var G__27548 = j_27546;
i_27545 = G__27547;
j_27546 = G__27548;
continue;
} else {
(nodes[i_27545] = ((!(((self__.arr[j_27546]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_27546])),(self__.arr[j_27546]),(self__.arr[(j_27546 + (1))]),added_leaf_QMARK_):(self__.arr[(j_27546 + (1))])));

var G__27549 = (i_27545 + (1));
var G__27550 = (j_27546 + (2));
i_27545 = G__27549;
j_27546 = G__27550;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__27533 = (shift + (5));
var G__27534 = key_or_nil;
var G__27535 = val_or_node;
var G__27536 = hash;
var G__27537 = key;
var G__27538 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__27533,G__27534,G__27535,G__27536,G__27537,G__27538) : cljs.core.create_node.call(null,G__27533,G__27534,G__27535,G__27536,G__27537,G__27538));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__27551 = (i + (1));
var G__27552 = (j + (2));
var G__27553 = (bitmap | ((1) << i));
i = G__27551;
j = G__27552;
bitmap = G__27553;
continue;
} else {
var G__27554 = (i + (1));
var G__27555 = j;
var G__27556 = bitmap;
i = G__27554;
j = G__27555;
bitmap = G__27556;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__27557 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__27557) : cljs.core.create_array_node_seq.call(null,G__27557));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__27558 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27558) : cljs.core.deref.call(null,G__27558));
} else {
var G__27559 = (i + (1));
var G__27560 = init__$2;
i = G__27559;
init__$1 = G__27560;
continue;
}
} else {
var G__27561 = (i + (1));
var G__27562 = init__$1;
i = G__27561;
init__$1 = G__27562;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__27563 = (i + (2));
i = G__27563;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__27564 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__27564) : cljs.core.create_inode_seq.call(null,G__27564));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__15935__auto__ = self__.__hash;
if(!((h__15935__auto__ == null))){
return h__15935__auto__;
} else {
var h__15935__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__15935__auto____$1;

return h__15935__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__27565 = self__.nodes;
var G__27566 = (self__.i + (2));
var G__27567 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__27565,G__27566,G__27567) : cljs.core.create_inode_seq.call(null,G__27565,G__27566,G__27567));
} else {
var G__27568 = self__.nodes;
var G__27569 = self__.i;
var G__27570 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__27568,G__27569,G__27570) : cljs.core.create_inode_seq.call(null,G__27568,G__27569,G__27570));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16492__auto__ = this;
return cljs.core.es6_iterator(this__16492__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__27574 = (j + (2));
j = G__27574;
continue;
}
} else {
var G__27575 = (j + (2));
j = G__27575;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__15935__auto__ = self__.__hash;
if(!((h__15935__auto__ == null))){
return h__15935__auto__;
} else {
var h__15935__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__15935__auto____$1;

return h__15935__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__27576 = null;
var G__27577 = self__.nodes;
var G__27578 = self__.i;
var G__27579 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__27576,G__27577,G__27578,G__27579) : cljs.core.create_array_node_seq.call(null,G__27576,G__27577,G__27578,G__27579));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16492__auto__ = this;
return cljs.core.es6_iterator(this__16492__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__27584 = (j + (1));
j = G__27584;
continue;
}
} else {
var G__27585 = (j + (1));
j = G__27585;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__27587 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__27587) : cljs.core.keys.call(null,G__27587));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__27588 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__27588) : cljs.core.vals.call(null,G__27588));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__27589 = cljs.core.seq(coll);
var chunk__27590 = null;
var count__27591 = (0);
var i__27592 = (0);
while(true){
if((i__27592 < count__27591)){
var vec__27593 = chunk__27590.cljs$core$IIndexed$_nth$arity$2(null,i__27592);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27593,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27593,(1),null);
var G__27594_27605 = v;
var G__27595_27606 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27594_27605,G__27595_27606) : f.call(null,G__27594_27605,G__27595_27606));

var G__27607 = seq__27589;
var G__27608 = chunk__27590;
var G__27609 = count__27591;
var G__27610 = (i__27592 + (1));
seq__27589 = G__27607;
chunk__27590 = G__27608;
count__27591 = G__27609;
i__27592 = G__27610;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__27589);
if(temp__4126__auto__){
var seq__27589__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__27589__$1)){
var c__16301__auto__ = cljs.core.chunk_first(seq__27589__$1);
var G__27611 = cljs.core.chunk_rest(seq__27589__$1);
var G__27612 = c__16301__auto__;
var G__27613 = cljs.core.count(c__16301__auto__);
var G__27614 = (0);
seq__27589 = G__27611;
chunk__27590 = G__27612;
count__27591 = G__27613;
i__27592 = G__27614;
continue;
} else {
var vec__27596 = cljs.core.first(seq__27589__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27596,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27596,(1),null);
var G__27597_27615 = v;
var G__27598_27616 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27597_27615,G__27598_27616) : f.call(null,G__27597_27615,G__27598_27616));

var G__27617 = cljs.core.next(seq__27589__$1);
var G__27618 = null;
var G__27619 = (0);
var G__27620 = (0);
seq__27589 = G__27617;
chunk__27590 = G__27618;
count__27591 = G__27619;
i__27592 = G__27620;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__27599 = init;
var G__27600 = null;
var G__27601 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27599,G__27600,G__27601) : f.call(null,G__27599,G__27600,G__27601));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__27602 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27602) : cljs.core.deref.call(null,G__27602));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__15935__auto__ = self__.__hash;
if(!((h__15935__auto__ == null))){
return h__15935__auto__;
} else {
var h__15935__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__15935__auto____$1;

return h__15935__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj27604 = {};
return obj27604;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__27621 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__27622 = cljs.core.next(es);
ret = G__27621;
es = G__27622;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__27623 = null;
var G__27623__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__27623__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__27623 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27623__2.call(this,self__,k);
case 3:
return G__27623__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27623.cljs$core$IFn$_invoke$arity$2 = G__27623__2;
G__27623.cljs$core$IFn$_invoke$arity$3 = G__27623__3;
return G__27623;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args27586){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27586)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__27624 = (i + (2));
var G__27625 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__27624;
ret = G__27625;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__27626 = (i + (1));
var G__27627 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__27626;
out = G__27627;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16492__auto__ = this;
return cljs.core.es6_iterator(this__16492__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__27628 = o;
if(G__27628){
var bit__16195__auto__ = (G__27628.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__16195__auto__) || (G__27628.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__27628.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__27628);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__27628);
}
})()){
return tcoll.assoc_BANG_((function (){var G__27629 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__27629) : cljs.core.key.call(null,G__27629));
})(),(function (){var G__27630 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__27630) : cljs.core.val.call(null,G__27630));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__27633 = cljs.core.next(es);
var G__27634 = tcoll__$1.assoc_BANG_((function (){var G__27631 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__27631) : cljs.core.key.call(null,G__27631));
})(),(function (){var G__27632 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__27632) : cljs.core.val.call(null,G__27632));
})());
es = G__27633;
tcoll__$1 = G__27634;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__27635 = ((ascending_QMARK_)?t.left:t.right);
var G__27636 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__27635;
stack__$1 = G__27636;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__15935__auto__ = self__.__hash;
if(!((h__15935__auto__ == null))){
return h__15935__auto__;
} else {
var h__15935__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__15935__auto____$1;

return h__15935__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16492__auto__ = this;
return cljs.core.es6_iterator(this__16492__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__27649 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27649) : cljs.core.deref.call(null,G__27649));
} else {
var init__$2 = (function (){var G__27650 = init__$1;
var G__27651 = node.key;
var G__27652 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27650,G__27651,G__27652) : f.call(null,G__27650,G__27651,G__27652));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__27653 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27653) : cljs.core.deref.call(null,G__27653));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__27654 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27654) : cljs.core.deref.call(null,G__27654));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__15935__auto__ = self__.__hash;
if(!((h__15935__auto__ == null))){
return h__15935__auto__;
} else {
var h__15935__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__15935__auto____$1;

return h__15935__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__27656 = null;
var G__27656__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__27656__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__27656 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27656__2.call(this,self__,k);
case 3:
return G__27656__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27656.cljs$core$IFn$_invoke$arity$2 = G__27656__2;
G__27656.cljs$core$IFn$_invoke$arity$3 = G__27656__3;
return G__27656;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args27655){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27655)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16492__auto__ = this;
return cljs.core.es6_iterator(this__16492__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__15935__auto__ = self__.__hash;
if(!((h__15935__auto__ == null))){
return h__15935__auto__;
} else {
var h__15935__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__15935__auto____$1;

return h__15935__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__27658 = null;
var G__27658__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__27658__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__27658 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27658__2.call(this,self__,k);
case 3:
return G__27658__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27658.cljs$core$IFn$_invoke$arity$2 = G__27658__2;
G__27658.cljs$core$IFn$_invoke$arity$3 = G__27658__3;
return G__27658;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args27657){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27657)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16492__auto__ = this;
return cljs.core.es6_iterator(this__16492__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__27671 = k;
var G__27672 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__27671,G__27672) : comp.call(null,G__27671,G__27672));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__27691 = k;
var G__27692 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__27691,G__27692) : comp.call(null,G__27691,G__27692));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__27703 = k;
var G__27704 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__27703,G__27704) : comp.call(null,G__27703,G__27704));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__27706 = cljs.core.seq(coll);
var chunk__27707 = null;
var count__27708 = (0);
var i__27709 = (0);
while(true){
if((i__27709 < count__27708)){
var vec__27710 = chunk__27707.cljs$core$IIndexed$_nth$arity$2(null,i__27709);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27710,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27710,(1),null);
var G__27711_27723 = v;
var G__27712_27724 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27711_27723,G__27712_27724) : f.call(null,G__27711_27723,G__27712_27724));

var G__27725 = seq__27706;
var G__27726 = chunk__27707;
var G__27727 = count__27708;
var G__27728 = (i__27709 + (1));
seq__27706 = G__27725;
chunk__27707 = G__27726;
count__27708 = G__27727;
i__27709 = G__27728;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__27706);
if(temp__4126__auto__){
var seq__27706__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__27706__$1)){
var c__16301__auto__ = cljs.core.chunk_first(seq__27706__$1);
var G__27729 = cljs.core.chunk_rest(seq__27706__$1);
var G__27730 = c__16301__auto__;
var G__27731 = cljs.core.count(c__16301__auto__);
var G__27732 = (0);
seq__27706 = G__27729;
chunk__27707 = G__27730;
count__27708 = G__27731;
i__27709 = G__27732;
continue;
} else {
var vec__27713 = cljs.core.first(seq__27706__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27713,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27713,(1),null);
var G__27714_27733 = v;
var G__27715_27734 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27714_27733,G__27715_27734) : f.call(null,G__27714_27733,G__27715_27734));

var G__27735 = cljs.core.next(seq__27706__$1);
var G__27736 = null;
var G__27737 = (0);
var G__27738 = (0);
seq__27706 = G__27735;
chunk__27707 = G__27736;
count__27708 = G__27737;
i__27709 = G__27738;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__27716 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__27716) : cljs.core.keys.call(null,G__27716));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__27717 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__27717) : cljs.core.vals.call(null,G__27717));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__27718 = k;
var G__27719 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__27718,G__27719) : self__.comp.call(null,G__27718,G__27719));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__27739 = t.left;
t = G__27739;
continue;
} else {
var G__27740 = t.right;
t = G__27740;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__15935__auto__ = self__.__hash;
if(!((h__15935__auto__ == null))){
return h__15935__auto__;
} else {
var h__15935__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__15935__auto____$1;

return h__15935__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__27741 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__27742 = cljs.core.next(es);
ret = G__27741;
es = G__27742;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__27743 = null;
var G__27743__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__27743__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__27743 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27743__2.call(this,self__,k);
case 3:
return G__27743__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27743.cljs$core$IFn$_invoke$arity$2 = G__27743__2;
G__27743.cljs$core$IFn$_invoke$arity$3 = G__27743__3;
return G__27743;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args27705){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27705)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__27720 = k;
var G__27721 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__27720,G__27721) : self__.comp.call(null,G__27720,G__27721));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__27744 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__27745 = t.left;
stack = G__27744;
t = G__27745;
continue;
} else {
var G__27746 = stack;
var G__27747 = t.right;
stack = G__27746;
t = G__27747;
continue;
}
} else {
if((c > (0))){
var G__27748 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__27749 = t.right;
stack = G__27748;
t = G__27749;
continue;
} else {
var G__27750 = stack;
var G__27751 = t.left;
stack = G__27750;
t = G__27751;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__27722 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__27722) : cljs.core.key.call(null,G__27722));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16492__auto__ = this;
return cljs.core.es6_iterator(this__16492__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__27752 = cljs.core.nnext(in$);
var G__27753 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__27752;
out = G__27753;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__27754__i = 0, G__27754__a = new Array(arguments.length -  0);
while (G__27754__i < G__27754__a.length) {G__27754__a[G__27754__i] = arguments[G__27754__i + 0]; ++G__27754__i;}
  keyvals = new cljs.core.IndexedSeq(G__27754__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__27755){
var keyvals = cljs.core.seq(arglist__27755);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__27756__i = 0, G__27756__a = new Array(arguments.length -  0);
while (G__27756__i < G__27756__a.length) {G__27756__a[G__27756__i] = arguments[G__27756__i + 0]; ++G__27756__i;}
  keyvals = new cljs.core.IndexedSeq(G__27756__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__27757){
var keyvals = cljs.core.seq(arglist__27757);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj27761 = {};
return obj27761;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__27762 = cljs.core.nnext(kvs);
kvs = G__27762;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__27763__i = 0, G__27763__a = new Array(arguments.length -  0);
while (G__27763__i < G__27763__a.length) {G__27763__a[G__27763__i] = arguments[G__27763__i + 0]; ++G__27763__i;}
  keyvals = new cljs.core.IndexedSeq(G__27763__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__27764){
var keyvals = cljs.core.seq(arglist__27764);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__27765 = cljs.core.nnext(in$);
var G__27766 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__27765;
out = G__27766;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__27767__i = 0, G__27767__a = new Array(arguments.length -  0);
while (G__27767__i < G__27767__a.length) {G__27767__a[G__27767__i] = arguments[G__27767__i + 0]; ++G__27767__i;}
  keyvals = new cljs.core.IndexedSeq(G__27767__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__27768){
var keyvals = cljs.core.seq(arglist__27768);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__27769 = cljs.core.nnext(in$);
var G__27770 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__27769;
out = G__27770;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__27771__i = 0, G__27771__a = new Array(arguments.length -  1);
while (G__27771__i < G__27771__a.length) {G__27771__a[G__27771__i] = arguments[G__27771__i + 1]; ++G__27771__i;}
  keyvals = new cljs.core.IndexedSeq(G__27771__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__27772){
var comparator = cljs.core.first(arglist__27772);
var keyvals = cljs.core.rest(arglist__27772);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__27773 = self__.mseq;
if(G__27773){
var bit__16195__auto__ = (G__27773.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__16195__auto__) || (G__27773.cljs$core$INext$)){
return true;
} else {
if((!G__27773.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__27773);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__27773);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__27774 = self__.mseq;
if(G__27774){
var bit__16195__auto__ = (G__27774.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__16195__auto__) || (G__27774.cljs$core$INext$)){
return true;
} else {
if((!G__27774.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__27774);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__27774);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16492__auto__ = this;
return cljs.core.es6_iterator(this__16492__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__27775 = self__.mseq;
if(G__27775){
var bit__16195__auto__ = (G__27775.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__16195__auto__) || (G__27775.cljs$core$INext$)){
return true;
} else {
if((!G__27775.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__27775);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__27775);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__27776 = self__.mseq;
if(G__27776){
var bit__16195__auto__ = (G__27776.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__16195__auto__) || (G__27776.cljs$core$INext$)){
return true;
} else {
if((!G__27776.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__27776);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__27776);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16492__auto__ = this;
return cljs.core.es6_iterator(this__16492__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__27777_SHARP_,p2__27778_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__15514__auto__ = p1__27777_SHARP_;
if(cljs.core.truth_(or__15514__auto__)){
return or__15514__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__27778_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__27779__i = 0, G__27779__a = new Array(arguments.length -  0);
while (G__27779__i < G__27779__a.length) {G__27779__a[G__27779__i] = arguments[G__27779__i + 0]; ++G__27779__i;}
  maps = new cljs.core.IndexedSeq(G__27779__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__27780){
var maps = cljs.core.seq(arglist__27780);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__27783 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__27784 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27783,G__27784) : f.call(null,G__27783,G__27784));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__15514__auto__ = m1;
if(cljs.core.truth_(or__15514__auto__)){
return or__15514__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__27785__i = 0, G__27785__a = new Array(arguments.length -  1);
while (G__27785__i < G__27785__a.length) {G__27785__a[G__27785__i] = arguments[G__27785__i + 1]; ++G__27785__i;}
  maps = new cljs.core.IndexedSeq(G__27785__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__27786){
var f = cljs.core.first(arglist__27786);
var maps = cljs.core.rest(arglist__27786);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__27787 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__27788 = cljs.core.next(keys);
ret = G__27787;
keys = G__27788;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__27791 = cljs.core.seq(coll);
var chunk__27792 = null;
var count__27793 = (0);
var i__27794 = (0);
while(true){
if((i__27794 < count__27793)){
var vec__27795 = chunk__27792.cljs$core$IIndexed$_nth$arity$2(null,i__27794);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27795,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27795,(1),null);
var G__27796_27801 = v;
var G__27797_27802 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27796_27801,G__27797_27802) : f.call(null,G__27796_27801,G__27797_27802));

var G__27803 = seq__27791;
var G__27804 = chunk__27792;
var G__27805 = count__27793;
var G__27806 = (i__27794 + (1));
seq__27791 = G__27803;
chunk__27792 = G__27804;
count__27793 = G__27805;
i__27794 = G__27806;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__27791);
if(temp__4126__auto__){
var seq__27791__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__27791__$1)){
var c__16301__auto__ = cljs.core.chunk_first(seq__27791__$1);
var G__27807 = cljs.core.chunk_rest(seq__27791__$1);
var G__27808 = c__16301__auto__;
var G__27809 = cljs.core.count(c__16301__auto__);
var G__27810 = (0);
seq__27791 = G__27807;
chunk__27792 = G__27808;
count__27793 = G__27809;
i__27794 = G__27810;
continue;
} else {
var vec__27798 = cljs.core.first(seq__27791__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27798,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27798,(1),null);
var G__27799_27811 = v;
var G__27800_27812 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27799_27811,G__27800_27812) : f.call(null,G__27799_27811,G__27800_27812));

var G__27813 = cljs.core.next(seq__27791__$1);
var G__27814 = null;
var G__27815 = (0);
var G__27816 = (0);
seq__27791 = G__27813;
chunk__27792 = G__27814;
count__27793 = G__27815;
i__27794 = G__27816;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__15935__auto__ = self__.__hash;
if(!((h__15935__auto__ == null))){
return h__15935__auto__;
} else {
var h__15935__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__15935__auto____$1;

return h__15935__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__27789_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__27789_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__27817 = null;
var G__27817__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__27817__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__27817 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27817__2.call(this,self__,k);
case 3:
return G__27817__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27817.cljs$core$IFn$_invoke$arity$2 = G__27817__2;
G__27817.cljs$core$IFn$_invoke$arity$3 = G__27817__3;
return G__27817;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args27790){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27790)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__27818 = (i + (1));
var G__27819 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__27818;
out = G__27819;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__27820 = (i + (1));
var G__27821 = cljs.core._conj_BANG_(out,(items[i]));
i = G__27820;
out = G__27821;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16492__auto__ = this;
return cljs.core.es6_iterator(this__16492__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__27823 = null;
var G__27823__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__27823__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__27823 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27823__2.call(this,self__,k);
case 3:
return G__27823__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27823.cljs$core$IFn$_invoke$arity$2 = G__27823__2;
G__27823.cljs$core$IFn$_invoke$arity$3 = G__27823__3;
return G__27823;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args27822){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27822)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__27826 = cljs.core.seq(coll);
var chunk__27827 = null;
var count__27828 = (0);
var i__27829 = (0);
while(true){
if((i__27829 < count__27828)){
var vec__27830 = chunk__27827.cljs$core$IIndexed$_nth$arity$2(null,i__27829);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27830,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27830,(1),null);
var G__27831_27836 = v;
var G__27832_27837 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27831_27836,G__27832_27837) : f.call(null,G__27831_27836,G__27832_27837));

var G__27838 = seq__27826;
var G__27839 = chunk__27827;
var G__27840 = count__27828;
var G__27841 = (i__27829 + (1));
seq__27826 = G__27838;
chunk__27827 = G__27839;
count__27828 = G__27840;
i__27829 = G__27841;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__27826);
if(temp__4126__auto__){
var seq__27826__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__27826__$1)){
var c__16301__auto__ = cljs.core.chunk_first(seq__27826__$1);
var G__27842 = cljs.core.chunk_rest(seq__27826__$1);
var G__27843 = c__16301__auto__;
var G__27844 = cljs.core.count(c__16301__auto__);
var G__27845 = (0);
seq__27826 = G__27842;
chunk__27827 = G__27843;
count__27828 = G__27844;
i__27829 = G__27845;
continue;
} else {
var vec__27833 = cljs.core.first(seq__27826__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27833,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27833,(1),null);
var G__27834_27846 = v;
var G__27835_27847 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27834_27846,G__27835_27847) : f.call(null,G__27834_27846,G__27835_27847));

var G__27848 = cljs.core.next(seq__27826__$1);
var G__27849 = null;
var G__27850 = (0);
var G__27851 = (0);
seq__27826 = G__27848;
chunk__27827 = G__27849;
count__27828 = G__27850;
i__27829 = G__27851;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__15935__auto__ = self__.__hash;
if(!((h__15935__auto__ == null))){
return h__15935__auto__;
} else {
var h__15935__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__15935__auto____$1;

return h__15935__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__27824_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__27824_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__27852 = null;
var G__27852__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__27852__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__27852 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27852__2.call(this,self__,k);
case 3:
return G__27852__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27852.cljs$core$IFn$_invoke$arity$2 = G__27852__2;
G__27852.cljs$core$IFn$_invoke$arity$3 = G__27852__3;
return G__27852;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args27825){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27825)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16492__auto__ = this;
return cljs.core.es6_iterator(this__16492__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__16395__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__16395__auto__.length)){
var G__27853 = (i + (1));
var G__27854 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__27853;
res = G__27854;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__27855 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__27856 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__27855;
out = G__27856;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__27857__delegate = function (keys){
return cljs.core.set(keys);
};
var G__27857 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__27858__i = 0, G__27858__a = new Array(arguments.length -  0);
while (G__27858__i < G__27858__a.length) {G__27858__a[G__27858__i] = arguments[G__27858__i + 0]; ++G__27858__i;}
  keys = new cljs.core.IndexedSeq(G__27858__a,0);
} 
return G__27857__delegate.call(this,keys);};
G__27857.cljs$lang$maxFixedArity = 0;
G__27857.cljs$lang$applyTo = (function (arglist__27859){
var keys = cljs.core.seq(arglist__27859);
return G__27857__delegate(keys);
});
G__27857.cljs$core$IFn$_invoke$arity$variadic = G__27857__delegate;
return G__27857;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__27860 = null;
if (arguments.length > 0) {
var G__27861__i = 0, G__27861__a = new Array(arguments.length -  0);
while (G__27861__i < G__27861__a.length) {G__27861__a[G__27861__i] = arguments[G__27861__i + 0]; ++G__27861__i;}
G__27860 = new cljs.core.IndexedSeq(G__27861__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__27860);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__27862__i = 0, G__27862__a = new Array(arguments.length -  0);
while (G__27862__i < G__27862__a.length) {G__27862__a[G__27862__i] = arguments[G__27862__i + 0]; ++G__27862__i;}
  keys = new cljs.core.IndexedSeq(G__27862__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__27863){
var keys = cljs.core.seq(arglist__27863);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__27864__i = 0, G__27864__a = new Array(arguments.length -  1);
while (G__27864__i < G__27864__a.length) {G__27864__a[G__27864__i] = arguments[G__27864__i + 1]; ++G__27864__i;}
  keys = new cljs.core.IndexedSeq(G__27864__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__27865){
var comparator = cljs.core.first(arglist__27865);
var keys = cljs.core.rest(arglist__27865);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__27866_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__27866_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__27866_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__27867_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__27867_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__27867_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__27888 = null;
var G__27888__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27888__1 = (function (result){
var G__27878 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27878) : rf.call(null,G__27878));
});
var G__27888__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__27879 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27879) : cljs.core.deref.call(null,G__27879));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__27880 = result;
var G__27881 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27880,G__27881) : rf.call(null,G__27880,G__27881));
}
});
G__27888 = function(result,input){
switch(arguments.length){
case 0:
return G__27888__0.call(this);
case 1:
return G__27888__1.call(this,result);
case 2:
return G__27888__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27888.cljs$core$IFn$_invoke$arity$0 = G__27888__0;
G__27888.cljs$core$IFn$_invoke$arity$1 = G__27888__1;
G__27888.cljs$core$IFn$_invoke$arity$2 = G__27888__2;
return G__27888;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__27886,seen__$1){
while(true){
var vec__27887 = p__27886;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27887,(0),null);
var xs__$1 = vec__27887;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__27889 = cljs.core.rest(s);
var G__27890 = seen__$1;
p__27886 = G__27889;
seen__$1 = G__27890;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__27891 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__27892 = cljs.core.next(s__$1);
ret = G__27891;
s__$1 = G__27892;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__27894 = x;
if(G__27894){
var bit__16188__auto__ = (G__27894.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__16188__auto__) || (G__27894.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__27895 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__27896 = cljs.core.next(ks);
var G__27897 = cljs.core.next(vs);
map = G__27895;
ks = G__27896;
vs = G__27897;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__27908 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__27908) : k.call(null,G__27908));
})() > (function (){var G__27909 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__27909) : k.call(null,G__27909));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__27910__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__27898_SHARP_,p2__27899_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__27898_SHARP_,p2__27899_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__27910 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__27911__i = 0, G__27911__a = new Array(arguments.length -  3);
while (G__27911__i < G__27911__a.length) {G__27911__a[G__27911__i] = arguments[G__27911__i + 3]; ++G__27911__i;}
  more = new cljs.core.IndexedSeq(G__27911__a,0);
} 
return G__27910__delegate.call(this,k,x,y,more);};
G__27910.cljs$lang$maxFixedArity = 3;
G__27910.cljs$lang$applyTo = (function (arglist__27912){
var k = cljs.core.first(arglist__27912);
arglist__27912 = cljs.core.next(arglist__27912);
var x = cljs.core.first(arglist__27912);
arglist__27912 = cljs.core.next(arglist__27912);
var y = cljs.core.first(arglist__27912);
var more = cljs.core.rest(arglist__27912);
return G__27910__delegate(k,x,y,more);
});
G__27910.cljs$core$IFn$_invoke$arity$variadic = G__27910__delegate;
return G__27910;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__27913 = null;
if (arguments.length > 3) {
var G__27914__i = 0, G__27914__a = new Array(arguments.length -  3);
while (G__27914__i < G__27914__a.length) {G__27914__a[G__27914__i] = arguments[G__27914__i + 3]; ++G__27914__i;}
G__27913 = new cljs.core.IndexedSeq(G__27914__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__27913);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__27925 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__27925) : k.call(null,G__27925));
})() < (function (){var G__27926 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__27926) : k.call(null,G__27926));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__27927__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__27915_SHARP_,p2__27916_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__27915_SHARP_,p2__27916_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__27927 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__27928__i = 0, G__27928__a = new Array(arguments.length -  3);
while (G__27928__i < G__27928__a.length) {G__27928__a[G__27928__i] = arguments[G__27928__i + 3]; ++G__27928__i;}
  more = new cljs.core.IndexedSeq(G__27928__a,0);
} 
return G__27927__delegate.call(this,k,x,y,more);};
G__27927.cljs$lang$maxFixedArity = 3;
G__27927.cljs$lang$applyTo = (function (arglist__27929){
var k = cljs.core.first(arglist__27929);
arglist__27929 = cljs.core.next(arglist__27929);
var x = cljs.core.first(arglist__27929);
arglist__27929 = cljs.core.next(arglist__27929);
var y = cljs.core.first(arglist__27929);
var more = cljs.core.rest(arglist__27929);
return G__27927__delegate(k,x,y,more);
});
G__27927.cljs$core$IFn$_invoke$arity$variadic = G__27927__delegate;
return G__27927;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__27930 = null;
if (arguments.length > 3) {
var G__27931__i = 0, G__27931__a = new Array(arguments.length -  3);
while (G__27931__i < G__27931__a.length) {G__27931__a[G__27931__i] = arguments[G__27931__i + 3]; ++G__27931__i;}
G__27930 = new cljs.core.IndexedSeq(G__27931__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__27930);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__27948 = null;
var G__27948__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27948__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__27943 = result;
var G__27944 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27943,G__27944) : rf.call(null,G__27943,G__27944));
})());
})());
var G__27945 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27945) : rf.call(null,G__27945));
});
var G__27948__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__27946 = result;
var G__27947 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27946,G__27947) : rf.call(null,G__27946,G__27947));
} else {
return result;
}
});
G__27948 = function(result,input){
switch(arguments.length){
case 0:
return G__27948__0.call(this);
case 1:
return G__27948__1.call(this,result);
case 2:
return G__27948__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27948.cljs$core$IFn$_invoke$arity$0 = G__27948__0;
G__27948.cljs$core$IFn$_invoke$arity$1 = G__27948__1;
G__27948.cljs$core$IFn$_invoke$arity$2 = G__27948__2;
return G__27948;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__27961 = null;
var G__27961__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27961__1 = (function (result){
var G__27956 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27956) : rf.call(null,G__27956));
});
var G__27961__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__27957 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__27957) : pred.call(null,G__27957));
})())){
var G__27958 = result;
var G__27959 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27958,G__27959) : rf.call(null,G__27958,G__27959));
} else {
return cljs.core.reduced(result);
}
});
G__27961 = function(result,input){
switch(arguments.length){
case 0:
return G__27961__0.call(this);
case 1:
return G__27961__1.call(this,result);
case 2:
return G__27961__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27961.cljs$core$IFn$_invoke$arity$0 = G__27961__0;
G__27961.cljs$core$IFn$_invoke$arity$1 = G__27961__1;
G__27961.cljs$core$IFn$_invoke$arity$2 = G__27961__2;
return G__27961;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__27960 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__27960) : pred.call(null,G__27960));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__27966 = (function (){var G__27968 = cljs.core._entry_key(sc,e);
var G__27969 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__27968,G__27969) : comp.call(null,G__27968,G__27969));
})();
var G__27967 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__27966,G__27967) : test.call(null,G__27966,G__27967));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__27973 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27973,(0),null);
var s = vec__27973;
if(cljs.core.truth_((function (){var G__27974 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__27974) : include.call(null,G__27974));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__27975 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27975,(0),null);
var s = vec__27975;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__27979 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27979,(0),null);
var s = vec__27979;
if(cljs.core.truth_((function (){var G__27980 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__27980) : include.call(null,G__27980));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__27981 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27981,(0),null);
var s = vec__27981;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__27982 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__27982) : Math.ceil.call(null,G__27982));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__15935__auto__ = self__.__hash;
if(!((h__15935__auto__ == null))){
return h__15935__auto__;
} else {
var h__15935__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__15935__auto____$1;

return h__15935__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__27983 = ret;
var G__27984 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27983,G__27984) : f.call(null,G__27983,G__27984));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__27985 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27985) : cljs.core.deref.call(null,G__27985));
} else {
var G__27986 = (i + self__.step);
var G__27987 = ret__$1;
i = G__27986;
ret = G__27987;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16492__auto__ = this;
return cljs.core.es6_iterator(this__16492__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__28005 = null;
var G__28005__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__28005__1 = (function (result){
var G__28002 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__28002) : rf.call(null,G__28002));
});
var G__28005__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__28003 = result;
var G__28004 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__28003,G__28004) : rf.call(null,G__28003,G__28004));
} else {
return result;
}
});
G__28005 = function(result,input){
switch(arguments.length){
case 0:
return G__28005__0.call(this);
case 1:
return G__28005__1.call(this,result);
case 2:
return G__28005__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28005.cljs$core$IFn$_invoke$arity$0 = G__28005__0;
G__28005.cljs$core$IFn$_invoke$arity$1 = G__28005__1;
G__28005.cljs$core$IFn$_invoke$arity$2 = G__28005__2;
return G__28005;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__28027 = null;
var G__28027__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__28027__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__28018 = result;
var G__28019 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__28018,G__28019) : rf.call(null,G__28018,G__28019));
})());
})());
var G__28020 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__28020) : rf.call(null,G__28020));
});
var G__28027__2 = (function (result,input){
var pval = (function (){var G__28021 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28021) : cljs.core.deref.call(null,G__28021));
})();
var val = (function (){var G__28022 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28022) : f.call(null,G__28022));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__28023 = result;
var G__28024 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__28023,G__28024) : rf.call(null,G__28023,G__28024));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__28027 = function(result,input){
switch(arguments.length){
case 0:
return G__28027__0.call(this);
case 1:
return G__28027__1.call(this,result);
case 2:
return G__28027__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28027.cljs$core$IFn$_invoke$arity$0 = G__28027__0;
G__28027.cljs$core$IFn$_invoke$arity$1 = G__28027__1;
G__28027.cljs$core$IFn$_invoke$arity$2 = G__28027__2;
return G__28027;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__28025 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28025) : f.call(null,G__28025));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__28006_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__28026 = p1__28006_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28026) : f.call(null,G__28026));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__28036 = init;
var G__28037 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28036,G__28037) : f.call(null,G__28036,G__28037));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__28132 = null;
var G__28132__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__28132__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__28090 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28090) : f.call(null,G__28090));
})()],null));
});
var G__28132__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__28091 = x;
var G__28092 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28091,G__28092) : f.call(null,G__28091,G__28092));
})()],null));
});
var G__28132__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__28093 = x;
var G__28094 = y;
var G__28095 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__28093,G__28094,G__28095) : f.call(null,G__28093,G__28094,G__28095));
})()],null));
});
var G__28132__4 = (function() { 
var G__28133__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__28133 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__28134__i = 0, G__28134__a = new Array(arguments.length -  3);
while (G__28134__i < G__28134__a.length) {G__28134__a[G__28134__i] = arguments[G__28134__i + 3]; ++G__28134__i;}
  args = new cljs.core.IndexedSeq(G__28134__a,0);
} 
return G__28133__delegate.call(this,x,y,z,args);};
G__28133.cljs$lang$maxFixedArity = 3;
G__28133.cljs$lang$applyTo = (function (arglist__28135){
var x = cljs.core.first(arglist__28135);
arglist__28135 = cljs.core.next(arglist__28135);
var y = cljs.core.first(arglist__28135);
arglist__28135 = cljs.core.next(arglist__28135);
var z = cljs.core.first(arglist__28135);
var args = cljs.core.rest(arglist__28135);
return G__28133__delegate(x,y,z,args);
});
G__28133.cljs$core$IFn$_invoke$arity$variadic = G__28133__delegate;
return G__28133;
})()
;
G__28132 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__28132__0.call(this);
case 1:
return G__28132__1.call(this,x);
case 2:
return G__28132__2.call(this,x,y);
case 3:
return G__28132__3.call(this,x,y,z);
default:
var G__28136 = null;
if (arguments.length > 3) {
var G__28137__i = 0, G__28137__a = new Array(arguments.length -  3);
while (G__28137__i < G__28137__a.length) {G__28137__a[G__28137__i] = arguments[G__28137__i + 3]; ++G__28137__i;}
G__28136 = new cljs.core.IndexedSeq(G__28137__a,0);
}
return G__28132__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__28136);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28132.cljs$lang$maxFixedArity = 3;
G__28132.cljs$lang$applyTo = G__28132__4.cljs$lang$applyTo;
G__28132.cljs$core$IFn$_invoke$arity$0 = G__28132__0;
G__28132.cljs$core$IFn$_invoke$arity$1 = G__28132__1;
G__28132.cljs$core$IFn$_invoke$arity$2 = G__28132__2;
G__28132.cljs$core$IFn$_invoke$arity$3 = G__28132__3;
G__28132.cljs$core$IFn$_invoke$arity$variadic = G__28132__4.cljs$core$IFn$_invoke$arity$variadic;
return G__28132;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__28138 = null;
var G__28138__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__28138__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__28096 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28096) : f.call(null,G__28096));
})(),(function (){var G__28097 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__28097) : g.call(null,G__28097));
})()],null));
});
var G__28138__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__28098 = x;
var G__28099 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28098,G__28099) : f.call(null,G__28098,G__28099));
})(),(function (){var G__28100 = x;
var G__28101 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__28100,G__28101) : g.call(null,G__28100,G__28101));
})()],null));
});
var G__28138__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__28102 = x;
var G__28103 = y;
var G__28104 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__28102,G__28103,G__28104) : f.call(null,G__28102,G__28103,G__28104));
})(),(function (){var G__28105 = x;
var G__28106 = y;
var G__28107 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__28105,G__28106,G__28107) : g.call(null,G__28105,G__28106,G__28107));
})()],null));
});
var G__28138__4 = (function() { 
var G__28139__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__28139 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__28140__i = 0, G__28140__a = new Array(arguments.length -  3);
while (G__28140__i < G__28140__a.length) {G__28140__a[G__28140__i] = arguments[G__28140__i + 3]; ++G__28140__i;}
  args = new cljs.core.IndexedSeq(G__28140__a,0);
} 
return G__28139__delegate.call(this,x,y,z,args);};
G__28139.cljs$lang$maxFixedArity = 3;
G__28139.cljs$lang$applyTo = (function (arglist__28141){
var x = cljs.core.first(arglist__28141);
arglist__28141 = cljs.core.next(arglist__28141);
var y = cljs.core.first(arglist__28141);
arglist__28141 = cljs.core.next(arglist__28141);
var z = cljs.core.first(arglist__28141);
var args = cljs.core.rest(arglist__28141);
return G__28139__delegate(x,y,z,args);
});
G__28139.cljs$core$IFn$_invoke$arity$variadic = G__28139__delegate;
return G__28139;
})()
;
G__28138 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__28138__0.call(this);
case 1:
return G__28138__1.call(this,x);
case 2:
return G__28138__2.call(this,x,y);
case 3:
return G__28138__3.call(this,x,y,z);
default:
var G__28142 = null;
if (arguments.length > 3) {
var G__28143__i = 0, G__28143__a = new Array(arguments.length -  3);
while (G__28143__i < G__28143__a.length) {G__28143__a[G__28143__i] = arguments[G__28143__i + 3]; ++G__28143__i;}
G__28142 = new cljs.core.IndexedSeq(G__28143__a,0);
}
return G__28138__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__28142);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28138.cljs$lang$maxFixedArity = 3;
G__28138.cljs$lang$applyTo = G__28138__4.cljs$lang$applyTo;
G__28138.cljs$core$IFn$_invoke$arity$0 = G__28138__0;
G__28138.cljs$core$IFn$_invoke$arity$1 = G__28138__1;
G__28138.cljs$core$IFn$_invoke$arity$2 = G__28138__2;
G__28138.cljs$core$IFn$_invoke$arity$3 = G__28138__3;
G__28138.cljs$core$IFn$_invoke$arity$variadic = G__28138__4.cljs$core$IFn$_invoke$arity$variadic;
return G__28138;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__28144 = null;
var G__28144__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__28144__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__28108 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28108) : f.call(null,G__28108));
})(),(function (){var G__28109 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__28109) : g.call(null,G__28109));
})(),(function (){var G__28110 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__28110) : h.call(null,G__28110));
})()],null));
});
var G__28144__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__28111 = x;
var G__28112 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28111,G__28112) : f.call(null,G__28111,G__28112));
})(),(function (){var G__28113 = x;
var G__28114 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__28113,G__28114) : g.call(null,G__28113,G__28114));
})(),(function (){var G__28115 = x;
var G__28116 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__28115,G__28116) : h.call(null,G__28115,G__28116));
})()],null));
});
var G__28144__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__28117 = x;
var G__28118 = y;
var G__28119 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__28117,G__28118,G__28119) : f.call(null,G__28117,G__28118,G__28119));
})(),(function (){var G__28120 = x;
var G__28121 = y;
var G__28122 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__28120,G__28121,G__28122) : g.call(null,G__28120,G__28121,G__28122));
})(),(function (){var G__28123 = x;
var G__28124 = y;
var G__28125 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__28123,G__28124,G__28125) : h.call(null,G__28123,G__28124,G__28125));
})()],null));
});
var G__28144__4 = (function() { 
var G__28145__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__28145 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__28146__i = 0, G__28146__a = new Array(arguments.length -  3);
while (G__28146__i < G__28146__a.length) {G__28146__a[G__28146__i] = arguments[G__28146__i + 3]; ++G__28146__i;}
  args = new cljs.core.IndexedSeq(G__28146__a,0);
} 
return G__28145__delegate.call(this,x,y,z,args);};
G__28145.cljs$lang$maxFixedArity = 3;
G__28145.cljs$lang$applyTo = (function (arglist__28147){
var x = cljs.core.first(arglist__28147);
arglist__28147 = cljs.core.next(arglist__28147);
var y = cljs.core.first(arglist__28147);
arglist__28147 = cljs.core.next(arglist__28147);
var z = cljs.core.first(arglist__28147);
var args = cljs.core.rest(arglist__28147);
return G__28145__delegate(x,y,z,args);
});
G__28145.cljs$core$IFn$_invoke$arity$variadic = G__28145__delegate;
return G__28145;
})()
;
G__28144 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__28144__0.call(this);
case 1:
return G__28144__1.call(this,x);
case 2:
return G__28144__2.call(this,x,y);
case 3:
return G__28144__3.call(this,x,y,z);
default:
var G__28148 = null;
if (arguments.length > 3) {
var G__28149__i = 0, G__28149__a = new Array(arguments.length -  3);
while (G__28149__i < G__28149__a.length) {G__28149__a[G__28149__i] = arguments[G__28149__i + 3]; ++G__28149__i;}
G__28148 = new cljs.core.IndexedSeq(G__28149__a,0);
}
return G__28144__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__28148);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28144.cljs$lang$maxFixedArity = 3;
G__28144.cljs$lang$applyTo = G__28144__4.cljs$lang$applyTo;
G__28144.cljs$core$IFn$_invoke$arity$0 = G__28144__0;
G__28144.cljs$core$IFn$_invoke$arity$1 = G__28144__1;
G__28144.cljs$core$IFn$_invoke$arity$2 = G__28144__2;
G__28144.cljs$core$IFn$_invoke$arity$3 = G__28144__3;
G__28144.cljs$core$IFn$_invoke$arity$variadic = G__28144__4.cljs$core$IFn$_invoke$arity$variadic;
return G__28144;
})()
});
var juxt__4 = (function() { 
var G__28150__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__28151 = null;
var G__28151__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__28038_SHARP_,p2__28039_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__28038_SHARP_,(function (){return (p2__28039_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__28039_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__28039_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__28151__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__28040_SHARP_,p2__28041_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__28040_SHARP_,(function (){var G__28126 = x;
return (p2__28041_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__28041_SHARP_.cljs$core$IFn$_invoke$arity$1(G__28126) : p2__28041_SHARP_.call(null,G__28126));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__28151__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__28042_SHARP_,p2__28043_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__28042_SHARP_,(function (){var G__28127 = x;
var G__28128 = y;
return (p2__28043_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__28043_SHARP_.cljs$core$IFn$_invoke$arity$2(G__28127,G__28128) : p2__28043_SHARP_.call(null,G__28127,G__28128));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__28151__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__28044_SHARP_,p2__28045_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__28044_SHARP_,(function (){var G__28129 = x;
var G__28130 = y;
var G__28131 = z;
return (p2__28045_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__28045_SHARP_.cljs$core$IFn$_invoke$arity$3(G__28129,G__28130,G__28131) : p2__28045_SHARP_.call(null,G__28129,G__28130,G__28131));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__28151__4 = (function() { 
var G__28152__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__28046_SHARP_,p2__28047_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__28046_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__28047_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__28152 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__28153__i = 0, G__28153__a = new Array(arguments.length -  3);
while (G__28153__i < G__28153__a.length) {G__28153__a[G__28153__i] = arguments[G__28153__i + 3]; ++G__28153__i;}
  args = new cljs.core.IndexedSeq(G__28153__a,0);
} 
return G__28152__delegate.call(this,x,y,z,args);};
G__28152.cljs$lang$maxFixedArity = 3;
G__28152.cljs$lang$applyTo = (function (arglist__28154){
var x = cljs.core.first(arglist__28154);
arglist__28154 = cljs.core.next(arglist__28154);
var y = cljs.core.first(arglist__28154);
arglist__28154 = cljs.core.next(arglist__28154);
var z = cljs.core.first(arglist__28154);
var args = cljs.core.rest(arglist__28154);
return G__28152__delegate(x,y,z,args);
});
G__28152.cljs$core$IFn$_invoke$arity$variadic = G__28152__delegate;
return G__28152;
})()
;
G__28151 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__28151__0.call(this);
case 1:
return G__28151__1.call(this,x);
case 2:
return G__28151__2.call(this,x,y);
case 3:
return G__28151__3.call(this,x,y,z);
default:
var G__28155 = null;
if (arguments.length > 3) {
var G__28156__i = 0, G__28156__a = new Array(arguments.length -  3);
while (G__28156__i < G__28156__a.length) {G__28156__a[G__28156__i] = arguments[G__28156__i + 3]; ++G__28156__i;}
G__28155 = new cljs.core.IndexedSeq(G__28156__a,0);
}
return G__28151__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__28155);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28151.cljs$lang$maxFixedArity = 3;
G__28151.cljs$lang$applyTo = G__28151__4.cljs$lang$applyTo;
G__28151.cljs$core$IFn$_invoke$arity$0 = G__28151__0;
G__28151.cljs$core$IFn$_invoke$arity$1 = G__28151__1;
G__28151.cljs$core$IFn$_invoke$arity$2 = G__28151__2;
G__28151.cljs$core$IFn$_invoke$arity$3 = G__28151__3;
G__28151.cljs$core$IFn$_invoke$arity$variadic = G__28151__4.cljs$core$IFn$_invoke$arity$variadic;
return G__28151;
})()
;})(fs__$1))
};
var G__28150 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__28157__i = 0, G__28157__a = new Array(arguments.length -  3);
while (G__28157__i < G__28157__a.length) {G__28157__a[G__28157__i] = arguments[G__28157__i + 3]; ++G__28157__i;}
  fs = new cljs.core.IndexedSeq(G__28157__a,0);
} 
return G__28150__delegate.call(this,f,g,h,fs);};
G__28150.cljs$lang$maxFixedArity = 3;
G__28150.cljs$lang$applyTo = (function (arglist__28158){
var f = cljs.core.first(arglist__28158);
arglist__28158 = cljs.core.next(arglist__28158);
var g = cljs.core.first(arglist__28158);
arglist__28158 = cljs.core.next(arglist__28158);
var h = cljs.core.first(arglist__28158);
var fs = cljs.core.rest(arglist__28158);
return G__28150__delegate(f,g,h,fs);
});
G__28150.cljs$core$IFn$_invoke$arity$variadic = G__28150__delegate;
return G__28150;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__28159 = null;
if (arguments.length > 3) {
var G__28160__i = 0, G__28160__a = new Array(arguments.length -  3);
while (G__28160__i < G__28160__a.length) {G__28160__a[G__28160__i] = arguments[G__28160__i + 3]; ++G__28160__i;}
G__28159 = new cljs.core.IndexedSeq(G__28160__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__28159);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__28161 = cljs.core.next(coll);
coll = G__28161;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__28162 = (n - (1));
var G__28163 = cljs.core.next(coll);
n = G__28162;
coll = G__28163;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__28167 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28167,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28167,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28167,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_28175 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,(function (){var or__15514__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__15514__auto__)){
return or__15514__auto__;
} else {
return "...";
}
})());
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__28176_28182 = cljs.core.first(coll);
var G__28177_28183 = writer;
var G__28178_28184 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__28176_28182,G__28177_28183,G__28178_28184) : print_one.call(null,G__28176_28182,G__28177_28183,G__28178_28184));
} else {
}

var coll_28185__$1 = cljs.core.next(coll);
var n_28186 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_28185__$1) && (((n_28186 == null)) || (!((n_28186 === (0)))))){
cljs.core._write(writer,sep);

var G__28179_28187 = cljs.core.first(coll_28185__$1);
var G__28180_28188 = writer;
var G__28181_28189 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__28179_28187,G__28180_28188,G__28181_28189) : print_one.call(null,G__28179_28187,G__28180_28188,G__28181_28189));

var G__28190 = cljs.core.next(coll_28185__$1);
var G__28191 = (n_28186 - (1));
coll_28185__$1 = G__28190;
n_28186 = G__28191;
continue;
} else {
if((cljs.core.seq(coll_28185__$1)) && ((n_28186 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,(function (){var or__15514__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__15514__auto__)){
return or__15514__auto__;
} else {
return "...";
}
})());
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_28175;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__28196 = cljs.core.seq(ss);
var chunk__28197 = null;
var count__28198 = (0);
var i__28199 = (0);
while(true){
if((i__28199 < count__28198)){
var s = chunk__28197.cljs$core$IIndexed$_nth$arity$2(null,i__28199);
cljs.core._write(writer,s);

var G__28200 = seq__28196;
var G__28201 = chunk__28197;
var G__28202 = count__28198;
var G__28203 = (i__28199 + (1));
seq__28196 = G__28200;
chunk__28197 = G__28201;
count__28198 = G__28202;
i__28199 = G__28203;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__28196);
if(temp__4126__auto__){
var seq__28196__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__28196__$1)){
var c__16301__auto__ = cljs.core.chunk_first(seq__28196__$1);
var G__28204 = cljs.core.chunk_rest(seq__28196__$1);
var G__28205 = c__16301__auto__;
var G__28206 = cljs.core.count(c__16301__auto__);
var G__28207 = (0);
seq__28196 = G__28204;
chunk__28197 = G__28205;
count__28198 = G__28206;
i__28199 = G__28207;
continue;
} else {
var s = cljs.core.first(seq__28196__$1);
cljs.core._write(writer,s);

var G__28208 = cljs.core.next(seq__28196__$1);
var G__28209 = null;
var G__28210 = (0);
var G__28211 = (0);
seq__28196 = G__28208;
chunk__28197 = G__28209;
count__28198 = G__28210;
i__28199 = G__28211;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__28212__i = 0, G__28212__a = new Array(arguments.length -  1);
while (G__28212__i < G__28212__a.length) {G__28212__a[G__28212__i] = arguments[G__28212__i + 1]; ++G__28212__i;}
  ss = new cljs.core.IndexedSeq(G__28212__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__28213){
var writer = cljs.core.first(arglist__28213);
var ss = cljs.core.rest(arglist__28213);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj28215 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj28215;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__28218 = "[\\\\\"\b\f\n\r\t]";
var G__28219 = "g";
return RegExp(G__28218,G__28219);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
cljs.core.pr_writer_impl = (function pr_writer_impl(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__15502__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__15502__auto__)){
var and__15502__auto____$1 = (function (){var G__28233 = obj;
if(G__28233){
var bit__16195__auto__ = (G__28233.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__16195__auto__) || (G__28233.cljs$core$IMeta$)){
return true;
} else {
if((!G__28233.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__28233);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__28233);
}
})();
if(and__15502__auto____$1){
return cljs.core.meta(obj);
} else {
return and__15502__auto____$1;
}
} else {
return and__15502__auto__;
}
})())){
cljs.core._write(writer,"^");

var G__28234_28244 = cljs.core.meta(obj);
var G__28235_28245 = writer;
var G__28236_28246 = opts;
(cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__28234_28244,G__28235_28245,G__28236_28246) : cljs.core.pr_writer.call(null,G__28234_28244,G__28235_28245,G__28236_28246));

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__28237 = obj;
if(G__28237){
var bit__16188__auto__ = (G__28237.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__16188__auto__) || (G__28237.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__28238 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__28239 = cljs.core.pr_writer;
var G__28240 = writer;
var G__28241 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__28238,G__28239,G__28240,G__28241) : cljs.core.print_map.call(null,G__28238,G__28239,G__28240,G__28241));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__28242 = obj;
return goog.isString(G__28242);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__28247 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__28247;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__28243 = obj;
if(G__28243){
var bit__16195__auto__ = (G__28243.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__16195__auto__) || (G__28243.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__28243.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__28243);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__28243);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
var temp__4124__auto__ = new cljs.core.Keyword(null,"alt-impl","alt-impl",670969595).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(temp__4124__auto__)){
var alt_impl = temp__4124__auto__;
var G__28251 = obj;
var G__28252 = writer;
var G__28253 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,new cljs.core.Keyword(null,"fallback-impl","fallback-impl",-1501286995),cljs.core.pr_writer_impl);
return (alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__28251,G__28252,G__28253) : alt_impl.call(null,G__28251,G__28252,G__28253));
} else {
return cljs.core.pr_writer_impl(obj,writer,opts);
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__28258 = cljs.core.seq(cljs.core.next(objs));
var chunk__28259 = null;
var count__28260 = (0);
var i__28261 = (0);
while(true){
if((i__28261 < count__28260)){
var obj = chunk__28259.cljs$core$IIndexed$_nth$arity$2(null,i__28261);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__28262 = seq__28258;
var G__28263 = chunk__28259;
var G__28264 = count__28260;
var G__28265 = (i__28261 + (1));
seq__28258 = G__28262;
chunk__28259 = G__28263;
count__28260 = G__28264;
i__28261 = G__28265;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__28258);
if(temp__4126__auto__){
var seq__28258__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__28258__$1)){
var c__16301__auto__ = cljs.core.chunk_first(seq__28258__$1);
var G__28266 = cljs.core.chunk_rest(seq__28258__$1);
var G__28267 = c__16301__auto__;
var G__28268 = cljs.core.count(c__16301__auto__);
var G__28269 = (0);
seq__28258 = G__28266;
chunk__28259 = G__28267;
count__28260 = G__28268;
i__28261 = G__28269;
continue;
} else {
var obj = cljs.core.first(seq__28258__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__28270 = cljs.core.next(seq__28258__$1);
var G__28271 = null;
var G__28272 = (0);
var G__28273 = (0);
seq__28258 = G__28270;
chunk__28259 = G__28271;
count__28260 = G__28272;
i__28261 = G__28273;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__28274__i = 0, G__28274__a = new Array(arguments.length -  0);
while (G__28274__i < G__28274__a.length) {G__28274__a[G__28274__i] = arguments[G__28274__i + 0]; ++G__28274__i;}
  objs = new cljs.core.IndexedSeq(G__28274__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__28275){
var objs = cljs.core.seq(arglist__28275);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__28276__i = 0, G__28276__a = new Array(arguments.length -  0);
while (G__28276__i < G__28276__a.length) {G__28276__a[G__28276__i] = arguments[G__28276__i + 0]; ++G__28276__i;}
  objs = new cljs.core.IndexedSeq(G__28276__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__28277){
var objs = cljs.core.seq(arglist__28277);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__28278__i = 0, G__28278__a = new Array(arguments.length -  0);
while (G__28278__i < G__28278__a.length) {G__28278__a[G__28278__i] = arguments[G__28278__i + 0]; ++G__28278__i;}
  objs = new cljs.core.IndexedSeq(G__28278__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__28279){
var objs = cljs.core.seq(arglist__28279);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__28280__i = 0, G__28280__a = new Array(arguments.length -  0);
while (G__28280__i < G__28280__a.length) {G__28280__a[G__28280__i] = arguments[G__28280__i + 0]; ++G__28280__i;}
  objs = new cljs.core.IndexedSeq(G__28280__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__28281){
var objs = cljs.core.seq(arglist__28281);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__28282__i = 0, G__28282__a = new Array(arguments.length -  0);
while (G__28282__i < G__28282__a.length) {G__28282__a[G__28282__i] = arguments[G__28282__i + 0]; ++G__28282__i;}
  objs = new cljs.core.IndexedSeq(G__28282__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__28283){
var objs = cljs.core.seq(arglist__28283);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__28284__i = 0, G__28284__a = new Array(arguments.length -  0);
while (G__28284__i < G__28284__a.length) {G__28284__a[G__28284__i] = arguments[G__28284__i + 0]; ++G__28284__i;}
  objs = new cljs.core.IndexedSeq(G__28284__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__28285){
var objs = cljs.core.seq(arglist__28285);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__28286__i = 0, G__28286__a = new Array(arguments.length -  0);
while (G__28286__i < G__28286__a.length) {G__28286__a[G__28286__i] = arguments[G__28286__i + 0]; ++G__28286__i;}
  objs = new cljs.core.IndexedSeq(G__28286__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__28287){
var objs = cljs.core.seq(arglist__28287);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__28288__i = 0, G__28288__a = new Array(arguments.length -  0);
while (G__28288__i < G__28288__a.length) {G__28288__a[G__28288__i] = arguments[G__28288__i + 0]; ++G__28288__i;}
  objs = new cljs.core.IndexedSeq(G__28288__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__28289){
var objs = cljs.core.seq(arglist__28289);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__28296_28302 = cljs.core.key(e);
var G__28297_28303 = w;
var G__28298_28304 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__28296_28302,G__28297_28303,G__28298_28304) : print_one.call(null,G__28296_28302,G__28297_28303,G__28298_28304));

cljs.core._write(w," ");

var G__28299 = cljs.core.val(e);
var G__28300 = w;
var G__28301 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__28299,G__28300,G__28301) : print_one.call(null,G__28299,G__28300,G__28301));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__28305__i = 0, G__28305__a = new Array(arguments.length -  2);
while (G__28305__i < G__28305__a.length) {G__28305__a[G__28305__i] = arguments[G__28305__i + 2]; ++G__28305__i;}
  args = new cljs.core.IndexedSeq(G__28305__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__28306){
var iref = cljs.core.first(arglist__28306);
arglist__28306 = cljs.core.next(arglist__28306);
var f = cljs.core.first(arglist__28306);
var args = cljs.core.rest(arglist__28306);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__28309 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__28309) : cljs.core.atom.call(null,G__28309));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__28311 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28311) : cljs.core.deref.call(null,G__28311));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__28312_SHARP_,p2__28313_SHARP_){
var ret = (function (){var G__28316 = p1__28312_SHARP_;
var G__28317 = p2__28313_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__28316,G__28317) : rf.call(null,G__28316,G__28317));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__28320 = null;
var G__28320__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__28320__1 = (function (result){
var G__28319 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__28319) : rf.call(null,G__28319));
});
var G__28320__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__28320 = function(result,input){
switch(arguments.length){
case 0:
return G__28320__0.call(this);
case 1:
return G__28320__1.call(this,result);
case 2:
return G__28320__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28320.cljs$core$IFn$_invoke$arity$0 = G__28320__0;
G__28320.cljs$core$IFn$_invoke$arity$1 = G__28320__1;
G__28320.cljs$core$IFn$_invoke$arity$2 = G__28320__2;
return G__28320;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__28329 = null;
var G__28329__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__28329__1 = (function (result){
var G__28325 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__28325) : rf.call(null,G__28325));
});
var G__28329__2 = (function (result,input){
var prior = (function (){var G__28326 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28326) : cljs.core.deref.call(null,G__28326));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__28327 = result;
var G__28328 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__28327,G__28328) : rf.call(null,G__28327,G__28328));
}
});
G__28329 = function(result,input){
switch(arguments.length){
case 0:
return G__28329__0.call(this);
case 1:
return G__28329__1.call(this,result);
case 2:
return G__28329__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28329.cljs$core$IFn$_invoke$arity$0 = G__28329__0;
G__28329.cljs$core$IFn$_invoke$arity$1 = G__28329__1;
G__28329.cljs$core$IFn$_invoke$arity$2 = G__28329__2;
return G__28329;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16492__auto__ = this;
return cljs.core.es6_iterator(this__16492__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__28331_SHARP_,p2__28330_SHARP_){
var G__28333 = p2__28330_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__28333) : proc.call(null,G__28333));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj28335 = {};
return obj28335;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__15502__auto__ = x;
if(and__15502__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__15502__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__16158__auto__ = (((x == null))?null:x);
return (function (){var or__15514__auto__ = (cljs.core._clj__GT_js[(function (){var G__28339 = x__16158__auto__;
return goog.typeOf(G__28339);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__15502__auto__ = x;
if(and__15502__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__15502__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__16158__auto__ = (((x == null))?null:x);
return (function (){var or__15514__auto__ = (cljs.core._key__GT_js[(function (){var G__28343 = x__16158__auto__;
return goog.typeOf(G__28343);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__28346 = k;
if(G__28346){
var bit__16195__auto__ = null;
if(cljs.core.truth_((function (){var or__15514__auto__ = bit__16195__auto__;
if(cljs.core.truth_(or__15514__auto__)){
return or__15514__auto__;
} else {
return G__28346.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__28346.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__28346);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__28346);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__28347 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__28347) : cljs.core.clj__GT_js.call(null,G__28347));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__28363 = x;
if(G__28363){
var bit__16195__auto__ = null;
if(cljs.core.truth_((function (){var or__15514__auto__ = bit__16195__auto__;
if(cljs.core.truth_(or__15514__auto__)){
return or__15514__auto__;
} else {
return G__28363.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__28363.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__28363);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__28363);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj28365 = {};
return obj28365;
})();
var seq__28366_28376 = cljs.core.seq(x);
var chunk__28367_28377 = null;
var count__28368_28378 = (0);
var i__28369_28379 = (0);
while(true){
if((i__28369_28379 < count__28368_28378)){
var vec__28370_28380 = chunk__28367_28377.cljs$core$IIndexed$_nth$arity$2(null,i__28369_28379);
var k_28381 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28370_28380,(0),null);
var v_28382 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28370_28380,(1),null);
(m[cljs.core.key__GT_js(k_28381)] = clj__GT_js(v_28382));

var G__28383 = seq__28366_28376;
var G__28384 = chunk__28367_28377;
var G__28385 = count__28368_28378;
var G__28386 = (i__28369_28379 + (1));
seq__28366_28376 = G__28383;
chunk__28367_28377 = G__28384;
count__28368_28378 = G__28385;
i__28369_28379 = G__28386;
continue;
} else {
var temp__4126__auto___28387 = cljs.core.seq(seq__28366_28376);
if(temp__4126__auto___28387){
var seq__28366_28388__$1 = temp__4126__auto___28387;
if(cljs.core.chunked_seq_QMARK_(seq__28366_28388__$1)){
var c__16301__auto___28389 = cljs.core.chunk_first(seq__28366_28388__$1);
var G__28390 = cljs.core.chunk_rest(seq__28366_28388__$1);
var G__28391 = c__16301__auto___28389;
var G__28392 = cljs.core.count(c__16301__auto___28389);
var G__28393 = (0);
seq__28366_28376 = G__28390;
chunk__28367_28377 = G__28391;
count__28368_28378 = G__28392;
i__28369_28379 = G__28393;
continue;
} else {
var vec__28371_28394 = cljs.core.first(seq__28366_28388__$1);
var k_28395 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28371_28394,(0),null);
var v_28396 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28371_28394,(1),null);
(m[cljs.core.key__GT_js(k_28395)] = clj__GT_js(v_28396));

var G__28397 = cljs.core.next(seq__28366_28388__$1);
var G__28398 = null;
var G__28399 = (0);
var G__28400 = (0);
seq__28366_28376 = G__28397;
chunk__28367_28377 = G__28398;
count__28368_28378 = G__28399;
i__28369_28379 = G__28400;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__28372_28401 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__28373_28402 = null;
var count__28374_28403 = (0);
var i__28375_28404 = (0);
while(true){
if((i__28375_28404 < count__28374_28403)){
var x_28405__$1 = chunk__28373_28402.cljs$core$IIndexed$_nth$arity$2(null,i__28375_28404);
arr.push(x_28405__$1);

var G__28406 = seq__28372_28401;
var G__28407 = chunk__28373_28402;
var G__28408 = count__28374_28403;
var G__28409 = (i__28375_28404 + (1));
seq__28372_28401 = G__28406;
chunk__28373_28402 = G__28407;
count__28374_28403 = G__28408;
i__28375_28404 = G__28409;
continue;
} else {
var temp__4126__auto___28410 = cljs.core.seq(seq__28372_28401);
if(temp__4126__auto___28410){
var seq__28372_28411__$1 = temp__4126__auto___28410;
if(cljs.core.chunked_seq_QMARK_(seq__28372_28411__$1)){
var c__16301__auto___28412 = cljs.core.chunk_first(seq__28372_28411__$1);
var G__28413 = cljs.core.chunk_rest(seq__28372_28411__$1);
var G__28414 = c__16301__auto___28412;
var G__28415 = cljs.core.count(c__16301__auto___28412);
var G__28416 = (0);
seq__28372_28401 = G__28413;
chunk__28373_28402 = G__28414;
count__28374_28403 = G__28415;
i__28375_28404 = G__28416;
continue;
} else {
var x_28417__$1 = cljs.core.first(seq__28372_28411__$1);
arr.push(x_28417__$1);

var G__28418 = cljs.core.next(seq__28372_28411__$1);
var G__28419 = null;
var G__28420 = (0);
var G__28421 = (0);
seq__28372_28401 = G__28418;
chunk__28373_28402 = G__28419;
count__28374_28403 = G__28420;
i__28375_28404 = G__28421;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj28423 = {};
return obj28423;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__15502__auto__ = x;
if(and__15502__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__15502__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__16158__auto__ = (((x == null))?null:x);
return (function (){var or__15514__auto__ = (cljs.core._js__GT_clj[(function (){var G__28427 = x__16158__auto__;
return goog.typeOf(G__28427);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__28484__delegate = function (x,opts){
var map__28457 = opts;
var map__28457__$1 = ((cljs.core.seq_QMARK_(map__28457))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__28457):map__28457);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__28457__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__28457,map__28457__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__28473 = x__$1;
if(G__28473){
var bit__16195__auto__ = null;
if(cljs.core.truth_((function (){var or__15514__auto__ = bit__16195__auto__;
if(cljs.core.truth_(or__15514__auto__)){
return or__15514__auto__;
} else {
return G__28473.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__28473.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__28473);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__28473);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__16270__auto__ = ((function (map__28457,map__28457__$1,keywordize_keys,keyfn){
return (function iter__28474(s__28475){
return (new cljs.core.LazySeq(null,((function (map__28457,map__28457__$1,keywordize_keys,keyfn){
return (function (){
var s__28475__$1 = s__28475;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__28475__$1);
if(temp__4126__auto__){
var s__28475__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__28475__$2)){
var c__16268__auto__ = cljs.core.chunk_first(s__28475__$2);
var size__16269__auto__ = cljs.core.count(c__16268__auto__);
var b__28477 = cljs.core.chunk_buffer(size__16269__auto__);
if((function (){var i__28476 = (0);
while(true){
if((i__28476 < size__16269__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__16268__auto__,i__28476);
cljs.core.chunk_append(b__28477,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__28482 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__28482) : keyfn.call(null,G__28482));
})(),thisfn((x__$1[k]))], null));

var G__28485 = (i__28476 + (1));
i__28476 = G__28485;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__28477),iter__28474(cljs.core.chunk_rest(s__28475__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__28477),null);
}
} else {
var k = cljs.core.first(s__28475__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__28483 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__28483) : keyfn.call(null,G__28483));
})(),thisfn((x__$1[k]))], null),iter__28474(cljs.core.rest(s__28475__$2)));
}
} else {
return null;
}
break;
}
});})(map__28457,map__28457__$1,keywordize_keys,keyfn))
,null,null));
});})(map__28457,map__28457__$1,keywordize_keys,keyfn))
;
return iter__16270__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__28457,map__28457__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__28484 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__28486__i = 0, G__28486__a = new Array(arguments.length -  1);
while (G__28486__i < G__28486__a.length) {G__28486__a[G__28486__i] = arguments[G__28486__i + 1]; ++G__28486__i;}
  opts = new cljs.core.IndexedSeq(G__28486__a,0);
} 
return G__28484__delegate.call(this,x,opts);};
G__28484.cljs$lang$maxFixedArity = 1;
G__28484.cljs$lang$applyTo = (function (arglist__28487){
var x = cljs.core.first(arglist__28487);
var opts = cljs.core.rest(arglist__28487);
return G__28484__delegate(x,opts);
});
G__28484.cljs$core$IFn$_invoke$arity$variadic = G__28484__delegate;
return G__28484;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__28488 = null;
if (arguments.length > 1) {
var G__28489__i = 0, G__28489__a = new Array(arguments.length -  1);
while (G__28489__i < G__28489__a.length) {G__28489__a[G__28489__i] = arguments[G__28489__i + 1]; ++G__28489__i;}
G__28488 = new cljs.core.IndexedSeq(G__28489__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__28488);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__28492 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__28492) : cljs.core.atom.call(null,G__28492));
})();
return ((function (mem){
return (function() { 
var G__28494__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__28493 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28493) : cljs.core.deref.call(null,G__28493));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__28494 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__28495__i = 0, G__28495__a = new Array(arguments.length -  0);
while (G__28495__i < G__28495__a.length) {G__28495__a[G__28495__i] = arguments[G__28495__i + 0]; ++G__28495__i;}
  args = new cljs.core.IndexedSeq(G__28495__a,0);
} 
return G__28494__delegate.call(this,args);};
G__28494.cljs$lang$maxFixedArity = 0;
G__28494.cljs$lang$applyTo = (function (arglist__28496){
var args = cljs.core.seq(arglist__28496);
return G__28494__delegate(args);
});
G__28494.cljs$core$IFn$_invoke$arity$variadic = G__28494__delegate;
return G__28494;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__28498 = ret;
f = G__28498;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__28499__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__28499 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__28500__i = 0, G__28500__a = new Array(arguments.length -  1);
while (G__28500__i < G__28500__a.length) {G__28500__a[G__28500__i] = arguments[G__28500__i + 1]; ++G__28500__i;}
  args = new cljs.core.IndexedSeq(G__28500__a,0);
} 
return G__28499__delegate.call(this,f,args);};
G__28499.cljs$lang$maxFixedArity = 1;
G__28499.cljs$lang$applyTo = (function (arglist__28501){
var f = cljs.core.first(arglist__28501);
var args = cljs.core.rest(arglist__28501);
return G__28499__delegate(f,args);
});
G__28499.cljs$core$IFn$_invoke$arity$variadic = G__28499__delegate;
return G__28499;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__28502 = null;
if (arguments.length > 1) {
var G__28503__i = 0, G__28503__a = new Array(arguments.length -  1);
while (G__28503__i < G__28503__a.length) {G__28503__a[G__28503__i] = arguments[G__28503__i + 1]; ++G__28503__i;}
G__28502 = new cljs.core.IndexedSeq(G__28503__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__28502);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__28506 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__28506) : Math.floor.call(null,G__28506));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__28508 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28508) : f.call(null,G__28508));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__28510 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__28510) : cljs.core.atom.call(null,G__28510));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__28511__i = 0, G__28511__a = new Array(arguments.length -  1);
while (G__28511__i < G__28511__a.length) {G__28511__a[G__28511__i] = arguments[G__28511__i + 1]; ++G__28511__i;}
  args = new cljs.core.IndexedSeq(G__28511__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__28512){
var f = cljs.core.first(arglist__28512);
var args = cljs.core.rest(arglist__28512);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__28577 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28577) : cljs.core.deref.call(null,G__28577));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__15514__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
var and__15502__auto__ = cljs.core.vector_QMARK_(parent);
if(and__15502__auto__){
var and__15502__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__15502__auto____$1){
var and__15502__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__15502__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__28602 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__28600 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__28600) : child.call(null,G__28600));
})(),(function (){var G__28601 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__28601) : parent.call(null,G__28601));
})());
var G__28603 = (i + (1));
ret = G__28602;
i = G__28603;
continue;
}
break;
}
} else {
return and__15502__auto____$2;
}
} else {
return and__15502__auto____$1;
}
} else {
return and__15502__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__28607 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28607) : cljs.core.deref.call(null,G__28607));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__28611 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28611) : cljs.core.deref.call(null,G__28611));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__28615 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28615) : cljs.core.deref.call(null,G__28615));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__28624 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__28624) : targets.call(null,G__28624));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__28625 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__28625) : sources.call(null,G__28625));
})()));
});})(tp,td,ta))
;
var or__15514__auto__ = ((cljs.core.contains_QMARK_((function (){var G__28629 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__28629) : tp.call(null,G__28629));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__28630 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__28630) : ta.call(null,G__28630));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__28631 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__28631) : ta.call(null,G__28631));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__15514__auto__)){
return or__15514__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__28638 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__28638) : parentMap.call(null,G__28638));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__28639 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__28639) : parentMap.call(null,G__28639));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__28632_SHARP_){
return cljs.core.cons(cljs.core.first(p1__28632_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__28632_SHARP_),cljs.core.second(p1__28632_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__28640 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__28640) : parentMap.call(null,G__28640));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__28633_SHARP_,p2__28634_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__28633_SHARP_,p2__28634_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__28643 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28643) : cljs.core.deref.call(null,G__28643));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__28644 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28644) : cljs.core.deref.call(null,G__28644));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__28660 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28660) : cljs.core.deref.call(null,G__28660));
})().call(null,x);
var or__15514__auto__ = (cljs.core.truth_((function (){var and__15502__auto__ = xprefs;
if(cljs.core.truth_(and__15502__auto__)){
var G__28662 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__28662) : xprefs.call(null,G__28662));
} else {
return and__15502__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__15514__auto__)){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__28663 = cljs.core.rest(ps);
ps = G__28663;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__15514__auto____$1)){
return or__15514__auto____$1;
} else {
var or__15514__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__28664 = cljs.core.rest(ps);
ps = G__28664;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__15514__auto____$2)){
return or__15514__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__15514__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__15514__auto__)){
return or__15514__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__28678){
var vec__28679 = p__28678;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28679,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28679,(1),null);
var e = vec__28679;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__28680 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28680) : cljs.core.deref.call(null,G__28680));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__15514__auto__ = (be == null);
if(or__15514__auto__){
return or__15514__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__28681 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28681) : cljs.core.deref.call(null,G__28681));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__28682 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28682) : cljs.core.deref.call(null,G__28682));
})(),(function (){var G__28683 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28683) : cljs.core.deref.call(null,G__28683));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj28685 = {};
return obj28685;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__15502__auto__ = mf;
if(and__15502__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__15502__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__16158__auto__ = (((mf == null))?null:mf);
return (function (){var or__15514__auto__ = (cljs.core._reset[(function (){var G__28689 = x__16158__auto__;
return goog.typeOf(G__28689);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._reset["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__15502__auto__ = mf;
if(and__15502__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__15502__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__16158__auto__ = (((mf == null))?null:mf);
return (function (){var or__15514__auto__ = (cljs.core._add_method[(function (){var G__28693 = x__16158__auto__;
return goog.typeOf(G__28693);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._add_method["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__15502__auto__ = mf;
if(and__15502__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__15502__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__16158__auto__ = (((mf == null))?null:mf);
return (function (){var or__15514__auto__ = (cljs.core._remove_method[(function (){var G__28697 = x__16158__auto__;
return goog.typeOf(G__28697);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._remove_method["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__15502__auto__ = mf;
if(and__15502__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__15502__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__16158__auto__ = (((mf == null))?null:mf);
return (function (){var or__15514__auto__ = (cljs.core._prefer_method[(function (){var G__28701 = x__16158__auto__;
return goog.typeOf(G__28701);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__15502__auto__ = mf;
if(and__15502__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__15502__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__16158__auto__ = (((mf == null))?null:mf);
return (function (){var or__15514__auto__ = (cljs.core._get_method[(function (){var G__28705 = x__16158__auto__;
return goog.typeOf(G__28705);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._get_method["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__15502__auto__ = mf;
if(and__15502__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__15502__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__16158__auto__ = (((mf == null))?null:mf);
return (function (){var or__15514__auto__ = (cljs.core._methods[(function (){var G__28709 = x__16158__auto__;
return goog.typeOf(G__28709);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._methods["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__15502__auto__ = mf;
if(and__15502__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__15502__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__16158__auto__ = (((mf == null))?null:mf);
return (function (){var or__15514__auto__ = (cljs.core._prefers[(function (){var G__28713 = x__16158__auto__;
return goog.typeOf(G__28713);
})()]);
if(or__15514__auto__){
return or__15514__auto__;
} else {
var or__15514__auto____$1 = (cljs.core._prefers["_"]);
if(or__15514__auto____$1){
return or__15514__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__28715 = this$__$1;
return goog.getUid(G__28715);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__28716 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28716) : cljs.core.deref.call(null,G__28716));
})(),(function (){var G__28717 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28717) : cljs.core.deref.call(null,G__28717));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__28718 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28718) : cljs.core.deref.call(null,G__28718));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__28719 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28719) : cljs.core.deref.call(null,G__28719));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__28720 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28720) : cljs.core.deref.call(null,G__28720));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__28721 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28721) : cljs.core.deref.call(null,G__28721));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__29562 = null;
var G__29562__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__29562__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28722 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__28722) : self__.dispatch_fn.call(null,G__28722));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28723 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__28723) : target_fn.call(null,G__28723));
});
var G__29562__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28724 = a;
var G__28725 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__28724,G__28725) : self__.dispatch_fn.call(null,G__28724,G__28725));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28726 = a;
var G__28727 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__28726,G__28727) : target_fn.call(null,G__28726,G__28727));
});
var G__29562__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28728 = a;
var G__28729 = b;
var G__28730 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__28728,G__28729,G__28730) : self__.dispatch_fn.call(null,G__28728,G__28729,G__28730));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28731 = a;
var G__28732 = b;
var G__28733 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__28731,G__28732,G__28733) : target_fn.call(null,G__28731,G__28732,G__28733));
});
var G__29562__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28734 = a;
var G__28735 = b;
var G__28736 = c;
var G__28737 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__28734,G__28735,G__28736,G__28737) : self__.dispatch_fn.call(null,G__28734,G__28735,G__28736,G__28737));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28738 = a;
var G__28739 = b;
var G__28740 = c;
var G__28741 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__28738,G__28739,G__28740,G__28741) : target_fn.call(null,G__28738,G__28739,G__28740,G__28741));
});
var G__29562__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28742 = a;
var G__28743 = b;
var G__28744 = c;
var G__28745 = d;
var G__28746 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__28742,G__28743,G__28744,G__28745,G__28746) : self__.dispatch_fn.call(null,G__28742,G__28743,G__28744,G__28745,G__28746));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28747 = a;
var G__28748 = b;
var G__28749 = c;
var G__28750 = d;
var G__28751 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__28747,G__28748,G__28749,G__28750,G__28751) : target_fn.call(null,G__28747,G__28748,G__28749,G__28750,G__28751));
});
var G__29562__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28752 = a;
var G__28753 = b;
var G__28754 = c;
var G__28755 = d;
var G__28756 = e;
var G__28757 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__28752,G__28753,G__28754,G__28755,G__28756,G__28757) : self__.dispatch_fn.call(null,G__28752,G__28753,G__28754,G__28755,G__28756,G__28757));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28758 = a;
var G__28759 = b;
var G__28760 = c;
var G__28761 = d;
var G__28762 = e;
var G__28763 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__28758,G__28759,G__28760,G__28761,G__28762,G__28763) : target_fn.call(null,G__28758,G__28759,G__28760,G__28761,G__28762,G__28763));
});
var G__29562__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28764 = a;
var G__28765 = b;
var G__28766 = c;
var G__28767 = d;
var G__28768 = e;
var G__28769 = f;
var G__28770 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__28764,G__28765,G__28766,G__28767,G__28768,G__28769,G__28770) : self__.dispatch_fn.call(null,G__28764,G__28765,G__28766,G__28767,G__28768,G__28769,G__28770));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28771 = a;
var G__28772 = b;
var G__28773 = c;
var G__28774 = d;
var G__28775 = e;
var G__28776 = f;
var G__28777 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__28771,G__28772,G__28773,G__28774,G__28775,G__28776,G__28777) : target_fn.call(null,G__28771,G__28772,G__28773,G__28774,G__28775,G__28776,G__28777));
});
var G__29562__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28778 = a;
var G__28779 = b;
var G__28780 = c;
var G__28781 = d;
var G__28782 = e;
var G__28783 = f;
var G__28784 = g;
var G__28785 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__28778,G__28779,G__28780,G__28781,G__28782,G__28783,G__28784,G__28785) : self__.dispatch_fn.call(null,G__28778,G__28779,G__28780,G__28781,G__28782,G__28783,G__28784,G__28785));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28786 = a;
var G__28787 = b;
var G__28788 = c;
var G__28789 = d;
var G__28790 = e;
var G__28791 = f;
var G__28792 = g;
var G__28793 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__28786,G__28787,G__28788,G__28789,G__28790,G__28791,G__28792,G__28793) : target_fn.call(null,G__28786,G__28787,G__28788,G__28789,G__28790,G__28791,G__28792,G__28793));
});
var G__29562__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28794 = a;
var G__28795 = b;
var G__28796 = c;
var G__28797 = d;
var G__28798 = e;
var G__28799 = f;
var G__28800 = g;
var G__28801 = h;
var G__28802 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__28794,G__28795,G__28796,G__28797,G__28798,G__28799,G__28800,G__28801,G__28802) : self__.dispatch_fn.call(null,G__28794,G__28795,G__28796,G__28797,G__28798,G__28799,G__28800,G__28801,G__28802));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28803 = a;
var G__28804 = b;
var G__28805 = c;
var G__28806 = d;
var G__28807 = e;
var G__28808 = f;
var G__28809 = g;
var G__28810 = h;
var G__28811 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__28803,G__28804,G__28805,G__28806,G__28807,G__28808,G__28809,G__28810,G__28811) : target_fn.call(null,G__28803,G__28804,G__28805,G__28806,G__28807,G__28808,G__28809,G__28810,G__28811));
});
var G__29562__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28812 = a;
var G__28813 = b;
var G__28814 = c;
var G__28815 = d;
var G__28816 = e;
var G__28817 = f;
var G__28818 = g;
var G__28819 = h;
var G__28820 = i;
var G__28821 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__28812,G__28813,G__28814,G__28815,G__28816,G__28817,G__28818,G__28819,G__28820,G__28821) : self__.dispatch_fn.call(null,G__28812,G__28813,G__28814,G__28815,G__28816,G__28817,G__28818,G__28819,G__28820,G__28821));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28822 = a;
var G__28823 = b;
var G__28824 = c;
var G__28825 = d;
var G__28826 = e;
var G__28827 = f;
var G__28828 = g;
var G__28829 = h;
var G__28830 = i;
var G__28831 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__28822,G__28823,G__28824,G__28825,G__28826,G__28827,G__28828,G__28829,G__28830,G__28831) : target_fn.call(null,G__28822,G__28823,G__28824,G__28825,G__28826,G__28827,G__28828,G__28829,G__28830,G__28831));
});
var G__29562__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28832 = a;
var G__28833 = b;
var G__28834 = c;
var G__28835 = d;
var G__28836 = e;
var G__28837 = f;
var G__28838 = g;
var G__28839 = h;
var G__28840 = i;
var G__28841 = j;
var G__28842 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__28832,G__28833,G__28834,G__28835,G__28836,G__28837,G__28838,G__28839,G__28840,G__28841,G__28842) : self__.dispatch_fn.call(null,G__28832,G__28833,G__28834,G__28835,G__28836,G__28837,G__28838,G__28839,G__28840,G__28841,G__28842));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28843 = a;
var G__28844 = b;
var G__28845 = c;
var G__28846 = d;
var G__28847 = e;
var G__28848 = f;
var G__28849 = g;
var G__28850 = h;
var G__28851 = i;
var G__28852 = j;
var G__28853 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__28843,G__28844,G__28845,G__28846,G__28847,G__28848,G__28849,G__28850,G__28851,G__28852,G__28853) : target_fn.call(null,G__28843,G__28844,G__28845,G__28846,G__28847,G__28848,G__28849,G__28850,G__28851,G__28852,G__28853));
});
var G__29562__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28854 = a;
var G__28855 = b;
var G__28856 = c;
var G__28857 = d;
var G__28858 = e;
var G__28859 = f;
var G__28860 = g;
var G__28861 = h;
var G__28862 = i;
var G__28863 = j;
var G__28864 = k;
var G__28865 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__28854,G__28855,G__28856,G__28857,G__28858,G__28859,G__28860,G__28861,G__28862,G__28863,G__28864,G__28865) : self__.dispatch_fn.call(null,G__28854,G__28855,G__28856,G__28857,G__28858,G__28859,G__28860,G__28861,G__28862,G__28863,G__28864,G__28865));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28866 = a;
var G__28867 = b;
var G__28868 = c;
var G__28869 = d;
var G__28870 = e;
var G__28871 = f;
var G__28872 = g;
var G__28873 = h;
var G__28874 = i;
var G__28875 = j;
var G__28876 = k;
var G__28877 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__28866,G__28867,G__28868,G__28869,G__28870,G__28871,G__28872,G__28873,G__28874,G__28875,G__28876,G__28877) : target_fn.call(null,G__28866,G__28867,G__28868,G__28869,G__28870,G__28871,G__28872,G__28873,G__28874,G__28875,G__28876,G__28877));
});
var G__29562__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28878 = a;
var G__28879 = b;
var G__28880 = c;
var G__28881 = d;
var G__28882 = e;
var G__28883 = f;
var G__28884 = g;
var G__28885 = h;
var G__28886 = i;
var G__28887 = j;
var G__28888 = k;
var G__28889 = l;
var G__28890 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__28878,G__28879,G__28880,G__28881,G__28882,G__28883,G__28884,G__28885,G__28886,G__28887,G__28888,G__28889,G__28890) : self__.dispatch_fn.call(null,G__28878,G__28879,G__28880,G__28881,G__28882,G__28883,G__28884,G__28885,G__28886,G__28887,G__28888,G__28889,G__28890));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28891 = a;
var G__28892 = b;
var G__28893 = c;
var G__28894 = d;
var G__28895 = e;
var G__28896 = f;
var G__28897 = g;
var G__28898 = h;
var G__28899 = i;
var G__28900 = j;
var G__28901 = k;
var G__28902 = l;
var G__28903 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__28891,G__28892,G__28893,G__28894,G__28895,G__28896,G__28897,G__28898,G__28899,G__28900,G__28901,G__28902,G__28903) : target_fn.call(null,G__28891,G__28892,G__28893,G__28894,G__28895,G__28896,G__28897,G__28898,G__28899,G__28900,G__28901,G__28902,G__28903));
});
var G__29562__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28904 = a;
var G__28905 = b;
var G__28906 = c;
var G__28907 = d;
var G__28908 = e;
var G__28909 = f;
var G__28910 = g;
var G__28911 = h;
var G__28912 = i;
var G__28913 = j;
var G__28914 = k;
var G__28915 = l;
var G__28916 = m;
var G__28917 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__28904,G__28905,G__28906,G__28907,G__28908,G__28909,G__28910,G__28911,G__28912,G__28913,G__28914,G__28915,G__28916,G__28917) : self__.dispatch_fn.call(null,G__28904,G__28905,G__28906,G__28907,G__28908,G__28909,G__28910,G__28911,G__28912,G__28913,G__28914,G__28915,G__28916,G__28917));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28918 = a;
var G__28919 = b;
var G__28920 = c;
var G__28921 = d;
var G__28922 = e;
var G__28923 = f;
var G__28924 = g;
var G__28925 = h;
var G__28926 = i;
var G__28927 = j;
var G__28928 = k;
var G__28929 = l;
var G__28930 = m;
var G__28931 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__28918,G__28919,G__28920,G__28921,G__28922,G__28923,G__28924,G__28925,G__28926,G__28927,G__28928,G__28929,G__28930,G__28931) : target_fn.call(null,G__28918,G__28919,G__28920,G__28921,G__28922,G__28923,G__28924,G__28925,G__28926,G__28927,G__28928,G__28929,G__28930,G__28931));
});
var G__29562__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28932 = a;
var G__28933 = b;
var G__28934 = c;
var G__28935 = d;
var G__28936 = e;
var G__28937 = f;
var G__28938 = g;
var G__28939 = h;
var G__28940 = i;
var G__28941 = j;
var G__28942 = k;
var G__28943 = l;
var G__28944 = m;
var G__28945 = n;
var G__28946 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__28932,G__28933,G__28934,G__28935,G__28936,G__28937,G__28938,G__28939,G__28940,G__28941,G__28942,G__28943,G__28944,G__28945,G__28946) : self__.dispatch_fn.call(null,G__28932,G__28933,G__28934,G__28935,G__28936,G__28937,G__28938,G__28939,G__28940,G__28941,G__28942,G__28943,G__28944,G__28945,G__28946));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28947 = a;
var G__28948 = b;
var G__28949 = c;
var G__28950 = d;
var G__28951 = e;
var G__28952 = f;
var G__28953 = g;
var G__28954 = h;
var G__28955 = i;
var G__28956 = j;
var G__28957 = k;
var G__28958 = l;
var G__28959 = m;
var G__28960 = n;
var G__28961 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__28947,G__28948,G__28949,G__28950,G__28951,G__28952,G__28953,G__28954,G__28955,G__28956,G__28957,G__28958,G__28959,G__28960,G__28961) : target_fn.call(null,G__28947,G__28948,G__28949,G__28950,G__28951,G__28952,G__28953,G__28954,G__28955,G__28956,G__28957,G__28958,G__28959,G__28960,G__28961));
});
var G__29562__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28962 = a;
var G__28963 = b;
var G__28964 = c;
var G__28965 = d;
var G__28966 = e;
var G__28967 = f;
var G__28968 = g;
var G__28969 = h;
var G__28970 = i;
var G__28971 = j;
var G__28972 = k;
var G__28973 = l;
var G__28974 = m;
var G__28975 = n;
var G__28976 = o;
var G__28977 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__28962,G__28963,G__28964,G__28965,G__28966,G__28967,G__28968,G__28969,G__28970,G__28971,G__28972,G__28973,G__28974,G__28975,G__28976,G__28977) : self__.dispatch_fn.call(null,G__28962,G__28963,G__28964,G__28965,G__28966,G__28967,G__28968,G__28969,G__28970,G__28971,G__28972,G__28973,G__28974,G__28975,G__28976,G__28977));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28978 = a;
var G__28979 = b;
var G__28980 = c;
var G__28981 = d;
var G__28982 = e;
var G__28983 = f;
var G__28984 = g;
var G__28985 = h;
var G__28986 = i;
var G__28987 = j;
var G__28988 = k;
var G__28989 = l;
var G__28990 = m;
var G__28991 = n;
var G__28992 = o;
var G__28993 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__28978,G__28979,G__28980,G__28981,G__28982,G__28983,G__28984,G__28985,G__28986,G__28987,G__28988,G__28989,G__28990,G__28991,G__28992,G__28993) : target_fn.call(null,G__28978,G__28979,G__28980,G__28981,G__28982,G__28983,G__28984,G__28985,G__28986,G__28987,G__28988,G__28989,G__28990,G__28991,G__28992,G__28993));
});
var G__29562__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28994 = a;
var G__28995 = b;
var G__28996 = c;
var G__28997 = d;
var G__28998 = e;
var G__28999 = f;
var G__29000 = g;
var G__29001 = h;
var G__29002 = i;
var G__29003 = j;
var G__29004 = k;
var G__29005 = l;
var G__29006 = m;
var G__29007 = n;
var G__29008 = o;
var G__29009 = p;
var G__29010 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__28994,G__28995,G__28996,G__28997,G__28998,G__28999,G__29000,G__29001,G__29002,G__29003,G__29004,G__29005,G__29006,G__29007,G__29008,G__29009,G__29010) : self__.dispatch_fn.call(null,G__28994,G__28995,G__28996,G__28997,G__28998,G__28999,G__29000,G__29001,G__29002,G__29003,G__29004,G__29005,G__29006,G__29007,G__29008,G__29009,G__29010));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29011 = a;
var G__29012 = b;
var G__29013 = c;
var G__29014 = d;
var G__29015 = e;
var G__29016 = f;
var G__29017 = g;
var G__29018 = h;
var G__29019 = i;
var G__29020 = j;
var G__29021 = k;
var G__29022 = l;
var G__29023 = m;
var G__29024 = n;
var G__29025 = o;
var G__29026 = p;
var G__29027 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__29011,G__29012,G__29013,G__29014,G__29015,G__29016,G__29017,G__29018,G__29019,G__29020,G__29021,G__29022,G__29023,G__29024,G__29025,G__29026,G__29027) : target_fn.call(null,G__29011,G__29012,G__29013,G__29014,G__29015,G__29016,G__29017,G__29018,G__29019,G__29020,G__29021,G__29022,G__29023,G__29024,G__29025,G__29026,G__29027));
});
var G__29562__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29028 = a;
var G__29029 = b;
var G__29030 = c;
var G__29031 = d;
var G__29032 = e;
var G__29033 = f;
var G__29034 = g;
var G__29035 = h;
var G__29036 = i;
var G__29037 = j;
var G__29038 = k;
var G__29039 = l;
var G__29040 = m;
var G__29041 = n;
var G__29042 = o;
var G__29043 = p;
var G__29044 = q;
var G__29045 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__29028,G__29029,G__29030,G__29031,G__29032,G__29033,G__29034,G__29035,G__29036,G__29037,G__29038,G__29039,G__29040,G__29041,G__29042,G__29043,G__29044,G__29045) : self__.dispatch_fn.call(null,G__29028,G__29029,G__29030,G__29031,G__29032,G__29033,G__29034,G__29035,G__29036,G__29037,G__29038,G__29039,G__29040,G__29041,G__29042,G__29043,G__29044,G__29045));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29046 = a;
var G__29047 = b;
var G__29048 = c;
var G__29049 = d;
var G__29050 = e;
var G__29051 = f;
var G__29052 = g;
var G__29053 = h;
var G__29054 = i;
var G__29055 = j;
var G__29056 = k;
var G__29057 = l;
var G__29058 = m;
var G__29059 = n;
var G__29060 = o;
var G__29061 = p;
var G__29062 = q;
var G__29063 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__29046,G__29047,G__29048,G__29049,G__29050,G__29051,G__29052,G__29053,G__29054,G__29055,G__29056,G__29057,G__29058,G__29059,G__29060,G__29061,G__29062,G__29063) : target_fn.call(null,G__29046,G__29047,G__29048,G__29049,G__29050,G__29051,G__29052,G__29053,G__29054,G__29055,G__29056,G__29057,G__29058,G__29059,G__29060,G__29061,G__29062,G__29063));
});
var G__29562__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29064 = a;
var G__29065 = b;
var G__29066 = c;
var G__29067 = d;
var G__29068 = e;
var G__29069 = f;
var G__29070 = g;
var G__29071 = h;
var G__29072 = i;
var G__29073 = j;
var G__29074 = k;
var G__29075 = l;
var G__29076 = m;
var G__29077 = n;
var G__29078 = o;
var G__29079 = p;
var G__29080 = q;
var G__29081 = r;
var G__29082 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__29064,G__29065,G__29066,G__29067,G__29068,G__29069,G__29070,G__29071,G__29072,G__29073,G__29074,G__29075,G__29076,G__29077,G__29078,G__29079,G__29080,G__29081,G__29082) : self__.dispatch_fn.call(null,G__29064,G__29065,G__29066,G__29067,G__29068,G__29069,G__29070,G__29071,G__29072,G__29073,G__29074,G__29075,G__29076,G__29077,G__29078,G__29079,G__29080,G__29081,G__29082));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29083 = a;
var G__29084 = b;
var G__29085 = c;
var G__29086 = d;
var G__29087 = e;
var G__29088 = f;
var G__29089 = g;
var G__29090 = h;
var G__29091 = i;
var G__29092 = j;
var G__29093 = k;
var G__29094 = l;
var G__29095 = m;
var G__29096 = n;
var G__29097 = o;
var G__29098 = p;
var G__29099 = q;
var G__29100 = r;
var G__29101 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__29083,G__29084,G__29085,G__29086,G__29087,G__29088,G__29089,G__29090,G__29091,G__29092,G__29093,G__29094,G__29095,G__29096,G__29097,G__29098,G__29099,G__29100,G__29101) : target_fn.call(null,G__29083,G__29084,G__29085,G__29086,G__29087,G__29088,G__29089,G__29090,G__29091,G__29092,G__29093,G__29094,G__29095,G__29096,G__29097,G__29098,G__29099,G__29100,G__29101));
});
var G__29562__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29102 = a;
var G__29103 = b;
var G__29104 = c;
var G__29105 = d;
var G__29106 = e;
var G__29107 = f;
var G__29108 = g;
var G__29109 = h;
var G__29110 = i;
var G__29111 = j;
var G__29112 = k;
var G__29113 = l;
var G__29114 = m;
var G__29115 = n;
var G__29116 = o;
var G__29117 = p;
var G__29118 = q;
var G__29119 = r;
var G__29120 = s;
var G__29121 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__29102,G__29103,G__29104,G__29105,G__29106,G__29107,G__29108,G__29109,G__29110,G__29111,G__29112,G__29113,G__29114,G__29115,G__29116,G__29117,G__29118,G__29119,G__29120,G__29121) : self__.dispatch_fn.call(null,G__29102,G__29103,G__29104,G__29105,G__29106,G__29107,G__29108,G__29109,G__29110,G__29111,G__29112,G__29113,G__29114,G__29115,G__29116,G__29117,G__29118,G__29119,G__29120,G__29121));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29122 = a;
var G__29123 = b;
var G__29124 = c;
var G__29125 = d;
var G__29126 = e;
var G__29127 = f;
var G__29128 = g;
var G__29129 = h;
var G__29130 = i;
var G__29131 = j;
var G__29132 = k;
var G__29133 = l;
var G__29134 = m;
var G__29135 = n;
var G__29136 = o;
var G__29137 = p;
var G__29138 = q;
var G__29139 = r;
var G__29140 = s;
var G__29141 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__29122,G__29123,G__29124,G__29125,G__29126,G__29127,G__29128,G__29129,G__29130,G__29131,G__29132,G__29133,G__29134,G__29135,G__29136,G__29137,G__29138,G__29139,G__29140,G__29141) : target_fn.call(null,G__29122,G__29123,G__29124,G__29125,G__29126,G__29127,G__29128,G__29129,G__29130,G__29131,G__29132,G__29133,G__29134,G__29135,G__29136,G__29137,G__29138,G__29139,G__29140,G__29141));
});
var G__29562__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__29562 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__29562__1.call(this,self__);
case 2:
return G__29562__2.call(this,self__,a);
case 3:
return G__29562__3.call(this,self__,a,b);
case 4:
return G__29562__4.call(this,self__,a,b,c);
case 5:
return G__29562__5.call(this,self__,a,b,c,d);
case 6:
return G__29562__6.call(this,self__,a,b,c,d,e);
case 7:
return G__29562__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__29562__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__29562__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__29562__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__29562__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__29562__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__29562__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__29562__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__29562__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__29562__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__29562__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__29562__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__29562__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__29562__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__29562__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__29562__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29562.cljs$core$IFn$_invoke$arity$1 = G__29562__1;
G__29562.cljs$core$IFn$_invoke$arity$2 = G__29562__2;
G__29562.cljs$core$IFn$_invoke$arity$3 = G__29562__3;
G__29562.cljs$core$IFn$_invoke$arity$4 = G__29562__4;
G__29562.cljs$core$IFn$_invoke$arity$5 = G__29562__5;
G__29562.cljs$core$IFn$_invoke$arity$6 = G__29562__6;
G__29562.cljs$core$IFn$_invoke$arity$7 = G__29562__7;
G__29562.cljs$core$IFn$_invoke$arity$8 = G__29562__8;
G__29562.cljs$core$IFn$_invoke$arity$9 = G__29562__9;
G__29562.cljs$core$IFn$_invoke$arity$10 = G__29562__10;
G__29562.cljs$core$IFn$_invoke$arity$11 = G__29562__11;
G__29562.cljs$core$IFn$_invoke$arity$12 = G__29562__12;
G__29562.cljs$core$IFn$_invoke$arity$13 = G__29562__13;
G__29562.cljs$core$IFn$_invoke$arity$14 = G__29562__14;
G__29562.cljs$core$IFn$_invoke$arity$15 = G__29562__15;
G__29562.cljs$core$IFn$_invoke$arity$16 = G__29562__16;
G__29562.cljs$core$IFn$_invoke$arity$17 = G__29562__17;
G__29562.cljs$core$IFn$_invoke$arity$18 = G__29562__18;
G__29562.cljs$core$IFn$_invoke$arity$19 = G__29562__19;
G__29562.cljs$core$IFn$_invoke$arity$20 = G__29562__20;
G__29562.cljs$core$IFn$_invoke$arity$21 = G__29562__21;
G__29562.cljs$core$IFn$_invoke$arity$22 = G__29562__22;
return G__29562;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args28714){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args28714)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29142 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__29142) : self__.dispatch_fn.call(null,G__29142));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29143 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__29143) : target_fn.call(null,G__29143));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29144 = a;
var G__29145 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__29144,G__29145) : self__.dispatch_fn.call(null,G__29144,G__29145));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29146 = a;
var G__29147 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__29146,G__29147) : target_fn.call(null,G__29146,G__29147));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29148 = a;
var G__29149 = b;
var G__29150 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__29148,G__29149,G__29150) : self__.dispatch_fn.call(null,G__29148,G__29149,G__29150));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29151 = a;
var G__29152 = b;
var G__29153 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__29151,G__29152,G__29153) : target_fn.call(null,G__29151,G__29152,G__29153));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29154 = a;
var G__29155 = b;
var G__29156 = c;
var G__29157 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__29154,G__29155,G__29156,G__29157) : self__.dispatch_fn.call(null,G__29154,G__29155,G__29156,G__29157));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29158 = a;
var G__29159 = b;
var G__29160 = c;
var G__29161 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__29158,G__29159,G__29160,G__29161) : target_fn.call(null,G__29158,G__29159,G__29160,G__29161));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29162 = a;
var G__29163 = b;
var G__29164 = c;
var G__29165 = d;
var G__29166 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__29162,G__29163,G__29164,G__29165,G__29166) : self__.dispatch_fn.call(null,G__29162,G__29163,G__29164,G__29165,G__29166));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29167 = a;
var G__29168 = b;
var G__29169 = c;
var G__29170 = d;
var G__29171 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__29167,G__29168,G__29169,G__29170,G__29171) : target_fn.call(null,G__29167,G__29168,G__29169,G__29170,G__29171));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29172 = a;
var G__29173 = b;
var G__29174 = c;
var G__29175 = d;
var G__29176 = e;
var G__29177 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__29172,G__29173,G__29174,G__29175,G__29176,G__29177) : self__.dispatch_fn.call(null,G__29172,G__29173,G__29174,G__29175,G__29176,G__29177));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29178 = a;
var G__29179 = b;
var G__29180 = c;
var G__29181 = d;
var G__29182 = e;
var G__29183 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__29178,G__29179,G__29180,G__29181,G__29182,G__29183) : target_fn.call(null,G__29178,G__29179,G__29180,G__29181,G__29182,G__29183));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29184 = a;
var G__29185 = b;
var G__29186 = c;
var G__29187 = d;
var G__29188 = e;
var G__29189 = f;
var G__29190 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__29184,G__29185,G__29186,G__29187,G__29188,G__29189,G__29190) : self__.dispatch_fn.call(null,G__29184,G__29185,G__29186,G__29187,G__29188,G__29189,G__29190));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29191 = a;
var G__29192 = b;
var G__29193 = c;
var G__29194 = d;
var G__29195 = e;
var G__29196 = f;
var G__29197 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__29191,G__29192,G__29193,G__29194,G__29195,G__29196,G__29197) : target_fn.call(null,G__29191,G__29192,G__29193,G__29194,G__29195,G__29196,G__29197));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29198 = a;
var G__29199 = b;
var G__29200 = c;
var G__29201 = d;
var G__29202 = e;
var G__29203 = f;
var G__29204 = g;
var G__29205 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__29198,G__29199,G__29200,G__29201,G__29202,G__29203,G__29204,G__29205) : self__.dispatch_fn.call(null,G__29198,G__29199,G__29200,G__29201,G__29202,G__29203,G__29204,G__29205));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29206 = a;
var G__29207 = b;
var G__29208 = c;
var G__29209 = d;
var G__29210 = e;
var G__29211 = f;
var G__29212 = g;
var G__29213 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__29206,G__29207,G__29208,G__29209,G__29210,G__29211,G__29212,G__29213) : target_fn.call(null,G__29206,G__29207,G__29208,G__29209,G__29210,G__29211,G__29212,G__29213));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29214 = a;
var G__29215 = b;
var G__29216 = c;
var G__29217 = d;
var G__29218 = e;
var G__29219 = f;
var G__29220 = g;
var G__29221 = h;
var G__29222 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__29214,G__29215,G__29216,G__29217,G__29218,G__29219,G__29220,G__29221,G__29222) : self__.dispatch_fn.call(null,G__29214,G__29215,G__29216,G__29217,G__29218,G__29219,G__29220,G__29221,G__29222));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29223 = a;
var G__29224 = b;
var G__29225 = c;
var G__29226 = d;
var G__29227 = e;
var G__29228 = f;
var G__29229 = g;
var G__29230 = h;
var G__29231 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__29223,G__29224,G__29225,G__29226,G__29227,G__29228,G__29229,G__29230,G__29231) : target_fn.call(null,G__29223,G__29224,G__29225,G__29226,G__29227,G__29228,G__29229,G__29230,G__29231));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29232 = a;
var G__29233 = b;
var G__29234 = c;
var G__29235 = d;
var G__29236 = e;
var G__29237 = f;
var G__29238 = g;
var G__29239 = h;
var G__29240 = i;
var G__29241 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__29232,G__29233,G__29234,G__29235,G__29236,G__29237,G__29238,G__29239,G__29240,G__29241) : self__.dispatch_fn.call(null,G__29232,G__29233,G__29234,G__29235,G__29236,G__29237,G__29238,G__29239,G__29240,G__29241));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29242 = a;
var G__29243 = b;
var G__29244 = c;
var G__29245 = d;
var G__29246 = e;
var G__29247 = f;
var G__29248 = g;
var G__29249 = h;
var G__29250 = i;
var G__29251 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__29242,G__29243,G__29244,G__29245,G__29246,G__29247,G__29248,G__29249,G__29250,G__29251) : target_fn.call(null,G__29242,G__29243,G__29244,G__29245,G__29246,G__29247,G__29248,G__29249,G__29250,G__29251));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29252 = a;
var G__29253 = b;
var G__29254 = c;
var G__29255 = d;
var G__29256 = e;
var G__29257 = f;
var G__29258 = g;
var G__29259 = h;
var G__29260 = i;
var G__29261 = j;
var G__29262 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__29252,G__29253,G__29254,G__29255,G__29256,G__29257,G__29258,G__29259,G__29260,G__29261,G__29262) : self__.dispatch_fn.call(null,G__29252,G__29253,G__29254,G__29255,G__29256,G__29257,G__29258,G__29259,G__29260,G__29261,G__29262));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29263 = a;
var G__29264 = b;
var G__29265 = c;
var G__29266 = d;
var G__29267 = e;
var G__29268 = f;
var G__29269 = g;
var G__29270 = h;
var G__29271 = i;
var G__29272 = j;
var G__29273 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__29263,G__29264,G__29265,G__29266,G__29267,G__29268,G__29269,G__29270,G__29271,G__29272,G__29273) : target_fn.call(null,G__29263,G__29264,G__29265,G__29266,G__29267,G__29268,G__29269,G__29270,G__29271,G__29272,G__29273));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29274 = a;
var G__29275 = b;
var G__29276 = c;
var G__29277 = d;
var G__29278 = e;
var G__29279 = f;
var G__29280 = g;
var G__29281 = h;
var G__29282 = i;
var G__29283 = j;
var G__29284 = k;
var G__29285 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__29274,G__29275,G__29276,G__29277,G__29278,G__29279,G__29280,G__29281,G__29282,G__29283,G__29284,G__29285) : self__.dispatch_fn.call(null,G__29274,G__29275,G__29276,G__29277,G__29278,G__29279,G__29280,G__29281,G__29282,G__29283,G__29284,G__29285));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29286 = a;
var G__29287 = b;
var G__29288 = c;
var G__29289 = d;
var G__29290 = e;
var G__29291 = f;
var G__29292 = g;
var G__29293 = h;
var G__29294 = i;
var G__29295 = j;
var G__29296 = k;
var G__29297 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__29286,G__29287,G__29288,G__29289,G__29290,G__29291,G__29292,G__29293,G__29294,G__29295,G__29296,G__29297) : target_fn.call(null,G__29286,G__29287,G__29288,G__29289,G__29290,G__29291,G__29292,G__29293,G__29294,G__29295,G__29296,G__29297));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29298 = a;
var G__29299 = b;
var G__29300 = c;
var G__29301 = d;
var G__29302 = e;
var G__29303 = f;
var G__29304 = g;
var G__29305 = h;
var G__29306 = i;
var G__29307 = j;
var G__29308 = k;
var G__29309 = l;
var G__29310 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__29298,G__29299,G__29300,G__29301,G__29302,G__29303,G__29304,G__29305,G__29306,G__29307,G__29308,G__29309,G__29310) : self__.dispatch_fn.call(null,G__29298,G__29299,G__29300,G__29301,G__29302,G__29303,G__29304,G__29305,G__29306,G__29307,G__29308,G__29309,G__29310));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29311 = a;
var G__29312 = b;
var G__29313 = c;
var G__29314 = d;
var G__29315 = e;
var G__29316 = f;
var G__29317 = g;
var G__29318 = h;
var G__29319 = i;
var G__29320 = j;
var G__29321 = k;
var G__29322 = l;
var G__29323 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__29311,G__29312,G__29313,G__29314,G__29315,G__29316,G__29317,G__29318,G__29319,G__29320,G__29321,G__29322,G__29323) : target_fn.call(null,G__29311,G__29312,G__29313,G__29314,G__29315,G__29316,G__29317,G__29318,G__29319,G__29320,G__29321,G__29322,G__29323));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29324 = a;
var G__29325 = b;
var G__29326 = c;
var G__29327 = d;
var G__29328 = e;
var G__29329 = f;
var G__29330 = g;
var G__29331 = h;
var G__29332 = i;
var G__29333 = j;
var G__29334 = k;
var G__29335 = l;
var G__29336 = m;
var G__29337 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__29324,G__29325,G__29326,G__29327,G__29328,G__29329,G__29330,G__29331,G__29332,G__29333,G__29334,G__29335,G__29336,G__29337) : self__.dispatch_fn.call(null,G__29324,G__29325,G__29326,G__29327,G__29328,G__29329,G__29330,G__29331,G__29332,G__29333,G__29334,G__29335,G__29336,G__29337));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29338 = a;
var G__29339 = b;
var G__29340 = c;
var G__29341 = d;
var G__29342 = e;
var G__29343 = f;
var G__29344 = g;
var G__29345 = h;
var G__29346 = i;
var G__29347 = j;
var G__29348 = k;
var G__29349 = l;
var G__29350 = m;
var G__29351 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__29338,G__29339,G__29340,G__29341,G__29342,G__29343,G__29344,G__29345,G__29346,G__29347,G__29348,G__29349,G__29350,G__29351) : target_fn.call(null,G__29338,G__29339,G__29340,G__29341,G__29342,G__29343,G__29344,G__29345,G__29346,G__29347,G__29348,G__29349,G__29350,G__29351));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29352 = a;
var G__29353 = b;
var G__29354 = c;
var G__29355 = d;
var G__29356 = e;
var G__29357 = f;
var G__29358 = g;
var G__29359 = h;
var G__29360 = i;
var G__29361 = j;
var G__29362 = k;
var G__29363 = l;
var G__29364 = m;
var G__29365 = n;
var G__29366 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__29352,G__29353,G__29354,G__29355,G__29356,G__29357,G__29358,G__29359,G__29360,G__29361,G__29362,G__29363,G__29364,G__29365,G__29366) : self__.dispatch_fn.call(null,G__29352,G__29353,G__29354,G__29355,G__29356,G__29357,G__29358,G__29359,G__29360,G__29361,G__29362,G__29363,G__29364,G__29365,G__29366));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29367 = a;
var G__29368 = b;
var G__29369 = c;
var G__29370 = d;
var G__29371 = e;
var G__29372 = f;
var G__29373 = g;
var G__29374 = h;
var G__29375 = i;
var G__29376 = j;
var G__29377 = k;
var G__29378 = l;
var G__29379 = m;
var G__29380 = n;
var G__29381 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__29367,G__29368,G__29369,G__29370,G__29371,G__29372,G__29373,G__29374,G__29375,G__29376,G__29377,G__29378,G__29379,G__29380,G__29381) : target_fn.call(null,G__29367,G__29368,G__29369,G__29370,G__29371,G__29372,G__29373,G__29374,G__29375,G__29376,G__29377,G__29378,G__29379,G__29380,G__29381));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29382 = a;
var G__29383 = b;
var G__29384 = c;
var G__29385 = d;
var G__29386 = e;
var G__29387 = f;
var G__29388 = g;
var G__29389 = h;
var G__29390 = i;
var G__29391 = j;
var G__29392 = k;
var G__29393 = l;
var G__29394 = m;
var G__29395 = n;
var G__29396 = o;
var G__29397 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__29382,G__29383,G__29384,G__29385,G__29386,G__29387,G__29388,G__29389,G__29390,G__29391,G__29392,G__29393,G__29394,G__29395,G__29396,G__29397) : self__.dispatch_fn.call(null,G__29382,G__29383,G__29384,G__29385,G__29386,G__29387,G__29388,G__29389,G__29390,G__29391,G__29392,G__29393,G__29394,G__29395,G__29396,G__29397));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29398 = a;
var G__29399 = b;
var G__29400 = c;
var G__29401 = d;
var G__29402 = e;
var G__29403 = f;
var G__29404 = g;
var G__29405 = h;
var G__29406 = i;
var G__29407 = j;
var G__29408 = k;
var G__29409 = l;
var G__29410 = m;
var G__29411 = n;
var G__29412 = o;
var G__29413 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__29398,G__29399,G__29400,G__29401,G__29402,G__29403,G__29404,G__29405,G__29406,G__29407,G__29408,G__29409,G__29410,G__29411,G__29412,G__29413) : target_fn.call(null,G__29398,G__29399,G__29400,G__29401,G__29402,G__29403,G__29404,G__29405,G__29406,G__29407,G__29408,G__29409,G__29410,G__29411,G__29412,G__29413));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29414 = a;
var G__29415 = b;
var G__29416 = c;
var G__29417 = d;
var G__29418 = e;
var G__29419 = f;
var G__29420 = g;
var G__29421 = h;
var G__29422 = i;
var G__29423 = j;
var G__29424 = k;
var G__29425 = l;
var G__29426 = m;
var G__29427 = n;
var G__29428 = o;
var G__29429 = p;
var G__29430 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__29414,G__29415,G__29416,G__29417,G__29418,G__29419,G__29420,G__29421,G__29422,G__29423,G__29424,G__29425,G__29426,G__29427,G__29428,G__29429,G__29430) : self__.dispatch_fn.call(null,G__29414,G__29415,G__29416,G__29417,G__29418,G__29419,G__29420,G__29421,G__29422,G__29423,G__29424,G__29425,G__29426,G__29427,G__29428,G__29429,G__29430));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29431 = a;
var G__29432 = b;
var G__29433 = c;
var G__29434 = d;
var G__29435 = e;
var G__29436 = f;
var G__29437 = g;
var G__29438 = h;
var G__29439 = i;
var G__29440 = j;
var G__29441 = k;
var G__29442 = l;
var G__29443 = m;
var G__29444 = n;
var G__29445 = o;
var G__29446 = p;
var G__29447 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__29431,G__29432,G__29433,G__29434,G__29435,G__29436,G__29437,G__29438,G__29439,G__29440,G__29441,G__29442,G__29443,G__29444,G__29445,G__29446,G__29447) : target_fn.call(null,G__29431,G__29432,G__29433,G__29434,G__29435,G__29436,G__29437,G__29438,G__29439,G__29440,G__29441,G__29442,G__29443,G__29444,G__29445,G__29446,G__29447));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29448 = a;
var G__29449 = b;
var G__29450 = c;
var G__29451 = d;
var G__29452 = e;
var G__29453 = f;
var G__29454 = g;
var G__29455 = h;
var G__29456 = i;
var G__29457 = j;
var G__29458 = k;
var G__29459 = l;
var G__29460 = m;
var G__29461 = n;
var G__29462 = o;
var G__29463 = p;
var G__29464 = q;
var G__29465 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__29448,G__29449,G__29450,G__29451,G__29452,G__29453,G__29454,G__29455,G__29456,G__29457,G__29458,G__29459,G__29460,G__29461,G__29462,G__29463,G__29464,G__29465) : self__.dispatch_fn.call(null,G__29448,G__29449,G__29450,G__29451,G__29452,G__29453,G__29454,G__29455,G__29456,G__29457,G__29458,G__29459,G__29460,G__29461,G__29462,G__29463,G__29464,G__29465));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29466 = a;
var G__29467 = b;
var G__29468 = c;
var G__29469 = d;
var G__29470 = e;
var G__29471 = f;
var G__29472 = g;
var G__29473 = h;
var G__29474 = i;
var G__29475 = j;
var G__29476 = k;
var G__29477 = l;
var G__29478 = m;
var G__29479 = n;
var G__29480 = o;
var G__29481 = p;
var G__29482 = q;
var G__29483 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__29466,G__29467,G__29468,G__29469,G__29470,G__29471,G__29472,G__29473,G__29474,G__29475,G__29476,G__29477,G__29478,G__29479,G__29480,G__29481,G__29482,G__29483) : target_fn.call(null,G__29466,G__29467,G__29468,G__29469,G__29470,G__29471,G__29472,G__29473,G__29474,G__29475,G__29476,G__29477,G__29478,G__29479,G__29480,G__29481,G__29482,G__29483));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29484 = a;
var G__29485 = b;
var G__29486 = c;
var G__29487 = d;
var G__29488 = e;
var G__29489 = f;
var G__29490 = g;
var G__29491 = h;
var G__29492 = i;
var G__29493 = j;
var G__29494 = k;
var G__29495 = l;
var G__29496 = m;
var G__29497 = n;
var G__29498 = o;
var G__29499 = p;
var G__29500 = q;
var G__29501 = r;
var G__29502 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__29484,G__29485,G__29486,G__29487,G__29488,G__29489,G__29490,G__29491,G__29492,G__29493,G__29494,G__29495,G__29496,G__29497,G__29498,G__29499,G__29500,G__29501,G__29502) : self__.dispatch_fn.call(null,G__29484,G__29485,G__29486,G__29487,G__29488,G__29489,G__29490,G__29491,G__29492,G__29493,G__29494,G__29495,G__29496,G__29497,G__29498,G__29499,G__29500,G__29501,G__29502));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29503 = a;
var G__29504 = b;
var G__29505 = c;
var G__29506 = d;
var G__29507 = e;
var G__29508 = f;
var G__29509 = g;
var G__29510 = h;
var G__29511 = i;
var G__29512 = j;
var G__29513 = k;
var G__29514 = l;
var G__29515 = m;
var G__29516 = n;
var G__29517 = o;
var G__29518 = p;
var G__29519 = q;
var G__29520 = r;
var G__29521 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__29503,G__29504,G__29505,G__29506,G__29507,G__29508,G__29509,G__29510,G__29511,G__29512,G__29513,G__29514,G__29515,G__29516,G__29517,G__29518,G__29519,G__29520,G__29521) : target_fn.call(null,G__29503,G__29504,G__29505,G__29506,G__29507,G__29508,G__29509,G__29510,G__29511,G__29512,G__29513,G__29514,G__29515,G__29516,G__29517,G__29518,G__29519,G__29520,G__29521));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29522 = a;
var G__29523 = b;
var G__29524 = c;
var G__29525 = d;
var G__29526 = e;
var G__29527 = f;
var G__29528 = g;
var G__29529 = h;
var G__29530 = i;
var G__29531 = j;
var G__29532 = k;
var G__29533 = l;
var G__29534 = m;
var G__29535 = n;
var G__29536 = o;
var G__29537 = p;
var G__29538 = q;
var G__29539 = r;
var G__29540 = s;
var G__29541 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__29522,G__29523,G__29524,G__29525,G__29526,G__29527,G__29528,G__29529,G__29530,G__29531,G__29532,G__29533,G__29534,G__29535,G__29536,G__29537,G__29538,G__29539,G__29540,G__29541) : self__.dispatch_fn.call(null,G__29522,G__29523,G__29524,G__29525,G__29526,G__29527,G__29528,G__29529,G__29530,G__29531,G__29532,G__29533,G__29534,G__29535,G__29536,G__29537,G__29538,G__29539,G__29540,G__29541));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29542 = a;
var G__29543 = b;
var G__29544 = c;
var G__29545 = d;
var G__29546 = e;
var G__29547 = f;
var G__29548 = g;
var G__29549 = h;
var G__29550 = i;
var G__29551 = j;
var G__29552 = k;
var G__29553 = l;
var G__29554 = m;
var G__29555 = n;
var G__29556 = o;
var G__29557 = p;
var G__29558 = q;
var G__29559 = r;
var G__29560 = s;
var G__29561 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__29542,G__29543,G__29544,G__29545,G__29546,G__29547,G__29548,G__29549,G__29550,G__29551,G__29552,G__29553,G__29554,G__29555,G__29556,G__29557,G__29558,G__29559,G__29560,G__29561) : target_fn.call(null,G__29542,G__29543,G__29544,G__29545,G__29546,G__29547,G__29548,G__29549,G__29550,G__29551,G__29552,G__29553,G__29554,G__29555,G__29556,G__29557,G__29558,G__29559,G__29560,G__29561));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__29563 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__29563);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__16101__auto__,writer__16102__auto__,opt__16103__auto__){
return cljs.core._write(writer__16102__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__29568 = msg;
return Error(G__29568);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__29573 = x;
var G__29574 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__29573,G__29574) : pred.call(null,G__29573,G__29574));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__29575 = y;
var G__29576 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__29575,G__29576) : pred.call(null,G__29575,G__29576));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});

//# sourceMappingURL=core.js.map